{
  "count": 84,
  "next": null,
  "previous": null,
  "results": [
    {
      "id": 2964,
      "question": "<p dir=\"ltr\"><span>Barrier is a synchronization construct where a set of processes synchronizes globally i.e. each process in the set arrives at the barrier and waits for all others to arrive and then all processes leave the barrier. Let the number of processes in the set be three and S be a binary semaphore with the usual P and V functions. Consider the following C implementation of a barrier with line numbers shown on left.  </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=kt>void</span><span class=w> </span><span class=nf>barrier</span><span class=w> </span><span class=p>(</span><span class=kt>void</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=mi>1</span><span class=o>:</span><span class=w>   </span><span class=n>P</span><span class=p>(</span><span class=n>S</span><span class=p>);</span>\n<span class=mi>2</span><span class=o>:</span><span class=w>   </span><span class=n>process_arrived</span><span class=o>++</span><span class=p>;</span>\n<span class=mf>3.</span><span class=w>   </span><span class=n>V</span><span class=p>(</span><span class=n>S</span><span class=p>);</span>\n<span class=mi>4</span><span class=o>:</span><span class=w>   </span><span class=k>while</span><span class=w> </span><span class=p>(</span><span class=n>process_arrived</span><span class=w> </span><span class=o>!=</span><span class=mi>3</span><span class=p>);</span>\n<span class=mi>5</span><span class=o>:</span><span class=w>   </span><span class=n>P</span><span class=p>(</span><span class=n>S</span><span class=p>);</span>\n<span class=mi>6</span><span class=o>:</span><span class=w>   </span><span class=n>process_left</span><span class=o>++</span><span class=p>;</span>\n<span class=mi>7</span><span class=o>:</span><span class=w>   </span><span class=k>if</span><span class=w> </span><span class=p>(</span><span class=n>process_left</span><span class=o>==</span><span class=mi>3</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=mi>8</span><span class=o>:</span><span class=w>      </span><span class=n>process_arrived</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=mi>0</span><span class=p>;</span>\n<span class=mi>9</span><span class=o>:</span><span class=w>      </span><span class=n>process_left</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=mi>0</span><span class=p>;</span>\n<span class=mi>10</span><span class=o>:</span><span class=w>  </span><span class=p>}</span>\n<span class=mi>11</span><span class=o>:</span><span class=w>  </span><span class=n>V</span><span class=p>(</span><span class=n>S</span><span class=p>);</span>\n<span class=p>}</span><span class=w> </span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>The variables process_arrived and process_left are shared among all processes and are initialized to zero. In a concurrent program all the three processes call the barrier function when they need to synchronize globally.  Which one of the following rectifies the problem in the implementation?</span></p>",
      "answers": [
        {
          "id": 12338,
          "answer": "<p dir=\"ltr\"><span> Lines 6 to 10 are simply replaced by process_arrived--</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 12339,
          "answer": "<p dir=\"ltr\"><span> At the beginning of the barrier the first process to enter the barrier waits until process_arrived becomes zero before proceeding to execute P(S).</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 12340,
          "answer": "<p dir=\"ltr\"><span>Context switch is disabled at the beginning of the barrier and re-enabled at the end.</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 12341,
          "answer": "<p dir=\"ltr\"><span>The variable process_left is made private instead of shared</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p><br></p><p dir=\"ltr\"><span> Step ‘2’ should not be executed when the process enters the barrier second time till other two processes have not completed their 7th step. This is to prevent variable process_arrived becoming greater than 3. </span></p><p dir=\"ltr\"><br></p><p dir=\"ltr\"><span> So, when variable process_arrived becomes zero and variable process_left also becomes zero then the problem of deadlock will be resolved. </span></p><p dir=\"ltr\"><br></p><p dir=\"ltr\"><span> Thus, at the beginning of the barrier the first process to enter the barrier waits until process_arrived becomes zero before proceeding to execute P(S). </span></p><p dir=\"ltr\"><br></p><p><span>&nbsp;</span></p><p><br></p><p dir=\"ltr\"><span> Thus, option (B) is correct. </span></p><p dir=\"ltr\"><br></p><p><span> </span></p>",
      "created_on": "2013-01-05 - 21:46:14",
      "updated_on": "2025-06-25 - 16:53:47",
      "year": 2006,
      "subject": "Operating System",
      "chapter": "Concurrency & Synchronization",
      "question_type": "MCQ"
    },
    {
      "id": 2963,
      "question": "<p dir=\"ltr\"><span>Barrier is a synchronization construct where a set of processes synchronizes globally i.e. each process in the set arrives at the barrier and waits for all others to arrive and then all processes leave the barrier. Let the number of processes in the set be three and S be a binary semaphore with the usual P and V functions. Consider the following C implementation of a barrier with line numbers shown on left.  </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=kt>void</span><span class=w> </span><span class=nf>barrier</span><span class=w> </span><span class=p>(</span><span class=kt>void</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=mi>1</span><span class=o>:</span><span class=w>   </span><span class=n>P</span><span class=p>(</span><span class=n>S</span><span class=p>);</span>\n<span class=mi>2</span><span class=o>:</span><span class=w>   </span><span class=n>process_arrived</span><span class=o>++</span><span class=p>;</span>\n<span class=mf>3.</span><span class=w>   </span><span class=n>V</span><span class=p>(</span><span class=n>S</span><span class=p>);</span>\n<span class=mi>4</span><span class=o>:</span><span class=w>   </span><span class=k>while</span><span class=w> </span><span class=p>(</span><span class=n>process_arrived</span><span class=w> </span><span class=o>!=</span><span class=mi>3</span><span class=p>);</span>\n<span class=mi>5</span><span class=o>:</span><span class=w>   </span><span class=n>P</span><span class=p>(</span><span class=n>S</span><span class=p>);</span>\n<span class=mi>6</span><span class=o>:</span><span class=w>   </span><span class=n>process_left</span><span class=o>++</span><span class=p>;</span>\n<span class=mi>7</span><span class=o>:</span><span class=w>   </span><span class=k>if</span><span class=w> </span><span class=p>(</span><span class=n>process_left</span><span class=o>==</span><span class=mi>3</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=mi>8</span><span class=o>:</span><span class=w>      </span><span class=n>process_arrived</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=mi>0</span><span class=p>;</span>\n<span class=mi>9</span><span class=o>:</span><span class=w>      </span><span class=n>process_left</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=mi>0</span><span class=p>;</span>\n<span class=mi>10</span><span class=o>:</span><span class=w>  </span><span class=p>}</span>\n<span class=mi>11</span><span class=o>:</span><span class=w>  </span><span class=n>V</span><span class=p>(</span><span class=n>S</span><span class=p>);</span>\n<span class=p>}</span><span class=w> </span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>The variables process_arrived and process_left are shared among all processes and are initialized to zero. In a concurrent program all the three processes call the barrier function when they need to synchronize globally.  The above implementation of barrier is incorrect. Which one of the following is true?</span></p>",
      "answers": [
        {
          "id": 12334,
          "answer": "<p dir=\"ltr\"><span>The barrier implementation is wrong due to the use of binary semaphore S</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 12335,
          "answer": "<p dir=\"ltr\"><span>The barrier implementation may lead to a deadlock if two barrier in invocations are used in immediate succession.</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 12336,
          "answer": "<p dir=\"ltr\"><span>Lines 6 to 10 need not be inside a critical section</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 12337,
          "answer": "<p dir=\"ltr\"><span>The barrier implementation is correct if there are only two processes instead of three.</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>It is possible that process_arrived becomes greater than 3. It will not be possible for process arrived to become 3 again, hence deadlock.</span></p>",
      "created_on": "2013-01-05 - 21:46:14",
      "updated_on": "2025-06-25 - 16:54:30",
      "year": 2006,
      "subject": "Operating System",
      "chapter": "Concurrency & Synchronization",
      "question_type": "MCQ"
    },
    {
      "id": 2962,
      "question": "<p dir=\"ltr\"><span>The atomic fetch-and-set x, y instruction unconditionally sets the memory location x to 1 and fetches the old value of x n y without allowing any intervening access to the memory location x. consider the following implementation of P and V functions on a binary semaphore S. </span></p><pre><span>void P (binary_semaphore *s)</span><br><span>{</span><br><span>    unsigned y;</span><br><span>    unsigned *x = &amp;(s-&gt;value);</span><br><span>    do</span><br><span>    {</span><br><span>        fetch-and-set x, y;</span><br><span>    }</span><br><span>    while (y);</span><br><span>}</span><br><span>void V (binary_semaphore *s)</span><br><span>{</span><br><span>    S-&gt;value = 0;</span><br><span>} </span></pre><p dir=\"ltr\"><span> Which one of the following is true?</span></p>",
      "answers": [
        {
          "id": 12330,
          "answer": "<p dir=\"ltr\"><span>The implementation may not work if context switching is disabled in P</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 12331,
          "answer": "<p dir=\"ltr\"><span>Instead of using fetch-and –set, a pair of normal load/store can be used</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 12332,
          "answer": "<p dir=\"ltr\"><span>The implementation of V is wrong</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 12333,
          "answer": "<p dir=\"ltr\"><span>The code does not implement a binary semaphore</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span> Answer (A) Let us talk about the operation P(). It stores the value of s in x, then it fetches the old value of x, stores it in y and sets x as 1. The while loop of a process will continue forever if some other process doesn't execute V() and sets the value of s as 0. If context switching is disabled in P, the while loop will run forever as no other process will be able to execute V().</span></p>",
      "created_on": "2013-01-05 - 21:46:14",
      "updated_on": "2025-06-25 - 16:56:01",
      "year": 2006,
      "subject": "Operating System",
      "chapter": "Concurrency & Synchronization",
      "question_type": "MCQ"
    },
    {
      "id": 3071,
      "question": "<p dir=\"ltr\"><span>Consider the data given in</span></p><a href=\"http://geeksquiz.com/gate-gate-cs-2006-question-82/\" target=\"_blank\"><span> above question</span></a><p dir=\"ltr\"><span>.  Consider the correct spanning tree for the previous question. Let host H1 send out a broadcast ping packet. Which of the following options represents the correct forwarding table on B3?[2 marks] (A) </span></p><table><thead></thead><tbody><tr><td><span>&nbsp;Hosts</span></td><td><span>&nbsp;Port</span></td></tr><tr><td><span>&nbsp;H1, H2, H3, H4</span></td><td><span>&nbsp;3</span></td></tr><tr><td><span>&nbsp;H5, H6, H9, H10</span></td><td><span>&nbsp;1</span></td></tr><tr><td><span>&nbsp;H7, H8, H11, H12</span></td><td><span>&nbsp;2</span></td></tr></tbody></table><p dir=\"ltr\"><span> (B) </span></p><table><thead></thead><tbody><tr><td><span>&nbsp;Hosts</span></td><td><span>&nbsp;Port</span></td></tr><tr><td><span>&nbsp;H1, H2</span></td><td><span>&nbsp;4</span></td></tr><tr><td><span>&nbsp;H3, H4</span></td><td><span>&nbsp;3</span></td></tr><tr><td><span>&nbsp;H5, H6</span></td><td><span>&nbsp;1</span></td></tr><tr><td><span>&nbsp;H7, H8, H9, H10,H11,H12</span></td><td><span>&nbsp;2</span></td></tr></tbody></table><p dir=\"ltr\"><span> (C) </span></p><table><thead></thead><tbody><tr><td><span>&nbsp;Hosts</span></td><td><span>&nbsp;Port</span></td></tr><tr><td><span>H3, H4</span></td><td><span>&nbsp;3</span></td></tr><tr><td><span>H5, H6, H9, H10</span></td><td><span>&nbsp;1</span></td></tr><tr><td><span>&nbsp;H1, H2</span></td><td><span>&nbsp;4</span></td></tr><tr><td><span>&nbsp;H7, H8, H11, H12</span></td><td><span>&nbsp;2</span></td></tr></tbody></table><p dir=\"ltr\"><span> (D) </span></p><table><thead></thead><tbody><tr><td><span>&nbsp;Hosts</span></td><td><span>&nbsp;Port</span></td></tr><tr><td><span>&nbsp;H1, H2, H3, H4</span></td><td><span>&nbsp;3</span></td></tr><tr><td><span>&nbsp;H5, H7, H9, H10</span></td><td><span>&nbsp;1</span></td></tr><tr><td><span>&nbsp;H7, H8, H11, H12</span></td><td><span>&nbsp;4</span></td></tr></tbody></table>",
      "answers": [
        {
          "id": 12763,
          "answer": "<p dir=\"ltr\"><span>A</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 12764,
          "answer": "<p dir=\"ltr\"><span>B</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 12765,
          "answer": "<p dir=\"ltr\"><span>C</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 12766,
          "answer": "<p dir=\"ltr\"><span>D</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p><br></p>",
      "created_on": "2013-01-05 - 21:58:29",
      "updated_on": "2025-06-26 - 12:35:14",
      "year": 2006,
      "subject": "Computer Networks",
      "chapter": "Miscellaneous",
      "question_type": "MCQ"
    },
    {
      "id": 3070,
      "question": "<p dir=\"ltr\"><span>Consider the diagram shown below where a number of LANs are connected by (transparent) bridges. In order to avoid packets looping through circuits in the graph, the bridges organize themselves in a spanning tree. First, the root bridge is identified as the bridge with the least serial number. Next, the root sends out (one or more) data units to enable the setting up of the spanning tree of shortest paths from the root bridge to each bridge.</span><br/><span>Each bridge identifies a port (the root port) through which it will forward frames to the root bridge. Port conflicts are always resolved in favour of the port with the lower index value. When there is a possibility of multiple bridges forwarding to the same LAN (but not through the root port), ties are broken as follows: bridges closest to the root get preference and between such bridges, the one with the lowest serial number is preferred.</span><br/><br/><img alt=\"cs200682\" height=\"400\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_3070/afebd1209a194371-YjHvC2dR1EyEv88f3mymoDHoOppre4.gif\" width=\"500\"/><br/><br/><br/><span>For the given connection of LANs by bridges, which one of the following choices represents the depth first traversal of the spanning tree of bridges?</span></p>",
      "answers": [
        {
          "id": 12759,
          "answer": "<p dir=\"ltr\"><span> B1, B5, B3, B4, B2</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 12760,
          "answer": "<p dir=\"ltr\"><span>B1, B3, B5, B2, B4</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 12761,
          "answer": "<p dir=\"ltr\"><span>B1, B5, B2, B3, B4</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 12762,
          "answer": "<p dir=\"ltr\"><span>B1, B3, B4, B5, B2 </span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Spanning tree is </span></p><pre><span>                B1</span><br><span>                /  \\\\</span><br><span>              /      \\\\</span><br><span>             B5      B3</span><br><span>                     /  \\\\</span><br><span>                   /     \\\\</span><br><span>                  B4     B2 </span><br></pre><p dir=\"ltr\"><span>  Note that B4 and B2 are connected through B3 (Not B5) because B3 has lower serial number than B5.  One DFS traversal of tree is B1 B5 B3 B4 B2  Hence Option A is the Answer </span></p>",
      "created_on": "2013-01-05 - 21:58:29",
      "updated_on": "2025-06-26 - 12:35:46",
      "year": 2006,
      "subject": "Computer Networks",
      "chapter": "Miscellaneous",
      "question_type": "MCQ"
    },
    {
      "id": 3069,
      "question": "<p dir=\"ltr\"><span>Station A uses 32 byte packets to transmit messages to Station B using a sliding window protocol. The round trip delay between A and B is 80 milliseconds and the bottleneck bandwidth on the path between A and B is 128 kbps. What is the optimal window size that A should use?</span></p>",
      "answers": [
        {
          "id": 12755,
          "answer": "<p><span>20</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 12756,
          "answer": "<p><span>40</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 12757,
          "answer": "<p><span>160</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 12758,
          "answer": "<p><span>320</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<pre><span>Round Trip propagation delay = 80ms </span><br><span>Frame size = 32*8 bits</span><br><span>Bandwidth = 128kbps</span><br><span>Transmission Time = 32*8/(128) ms = 2 ms</span><br><br><span>Let n be the window size.</span><br><br><span>UtiliZation = n/(1+2a) where a </span><br><span>            = Propagation time / </span><br><span>                transmission time</span><br><span>            = n/(1+80/2)</span><br><br><span>For maximum utilization: n = 41 </span><br><span>which is close to option (B)</span><br><br></pre><p><span> </span></p>",
      "created_on": "2013-01-05 - 21:58:29",
      "updated_on": "2025-06-25 - 16:50:04",
      "year": 2006,
      "subject": "Computer Networks",
      "chapter": "Flow & Error Control",
      "question_type": "MCQ"
    },
    {
      "id": 3289,
      "question": "<p dir=\"ltr\"><span>Consider the following C-program fragment in which i, j and n are integer variables. </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=k>for</span><span class=w> </span><span class=p>(</span><span class=n>i</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>n</span><span class=p>,</span><span class=w> </span><span class=n>j</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=w> </span><span class=o>&gt;</span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=w> </span><span class=o>/=</span><span class=w> </span><span class=mi>2</span><span class=p>,</span><span class=w> </span><span class=n>j</span><span class=w> </span><span class=o>+=</span><span class=w> </span><span class=n>i</span><span class=p>);</span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>Let val(j) denote the value stored in the variable j after termination of the for loop. Which one of the following is true? </span></p><p dir=\"ltr\"><span>(A) val(j)  = Θ(logn) </span></p><p dir=\"ltr\"><span>(B) vaI(j) = Θ(sqrt(n)) </span></p><p dir=\"ltr\"><span>(C) val(j) =Θ (n) </span></p><p dir=\"ltr\"><span>(D) val(j) = Θ(nlogn) </span></p>",
      "answers": [
        {
          "id": 13636,
          "answer": "<p dir=\"ltr\"><span>A</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 13637,
          "answer": "<p dir=\"ltr\"><span>B</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 13638,
          "answer": "<p dir=\"ltr\"><span>C</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 13639,
          "answer": "<p dir=\"ltr\"><span>D</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>The variable j is initially 0 and value of j is sum of values of i. i is initialized as n and is reduced to half in each iteration.</span><br><br><span>j = n/2 + n/4 + n/8 + .. + 1 = Θ(n)</span><br><br><span>Note the semicolon after the for loop, so there is nothing in the body. </span><br></p>",
      "created_on": "2013-01-08 - 15:45:35",
      "updated_on": "2025-06-26 - 11:58:31",
      "year": 2006,
      "subject": "Algorithms",
      "chapter": "Complexity Analysis",
      "question_type": "MCQ"
    },
    {
      "id": 3745,
      "question": "<p dir=\"ltr\"><span>A computer system supports 32-bit virtual addresses as well as 32-bit physical addresses. Since the virtual address space is of the same size as the physical address space, the operating system designers decide to get rid of the virtual memory entirely. Which one of the following is true?</span></p>",
      "answers": [
        {
          "id": 15420,
          "answer": "<p dir=\"ltr\"><span> Efficient implementation of multi-user support is no longer possible</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 15421,
          "answer": "<p dir=\"ltr\"><span>The processor cache organization can be made more efficient now</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 15422,
          "answer": "<p dir=\"ltr\"><span>Hardware support for memory management is no longer needed</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 15423,
          "answer": "<p dir=\"ltr\"><span> CPU scheduling can be made more efficient now</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p><br></p>",
      "created_on": "2013-01-30 - 21:40:06",
      "updated_on": "2025-06-26 - 11:52:54",
      "year": 2006,
      "subject": "Operating System",
      "chapter": "Memory Management",
      "question_type": "MCQ"
    },
    {
      "id": 3744,
      "question": "<p dir=\"ltr\"><span>A CPU generates 32-bit virtual addresses. The page size is 4 KB. The processor has a translation look-aside buffer (TLB) which can hold a total of 128 page table entries and is 4-way set associative. The minimum size of the TLB tag is: </span></p>",
      "answers": [
        {
          "id": 15416,
          "answer": "<p dir=\"ltr\"><span>11 bits</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 15417,
          "answer": "<p dir=\"ltr\"><span>13 bits</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 15418,
          "answer": "<p dir=\"ltr\"><span>15 bits</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 15419,
          "answer": "<p dir=\"ltr\"><span>20 bits</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><br><span>Virtual Memory would not be very effective if every memory address had to be translated by looking up the associated physical page in memory. The solution is to cache the recent translations in a Translation Lookaside Buffer (TLB). A TLB has a fixed number of slots that contain page table entries, which map virtual addresses to physical addresses.</span><br><br><b><strong>Solution</strong></b><br><span>Size of a page = 4KB = 2^12 means 12 offset bits CPU generates 32-bit virtual addresses</span><br><span>Total number of bits needed to address a page frame = 32 – 12 = 20</span><br><span>If there are ‘n’ cache lines in a set, the cache placement is called n-way set associative. Since TLB is 4 way set associative and can hold total 128 (2^7) page table entries, number of sets in cache = 2^7/4 = 2^5. So 5 bits are needed to address a set, and 15 (20 – 5) bits are needed for tag.</span><br><br><span>Option (C) is the correct answer.</span><br></p>",
      "created_on": "2013-01-30 - 21:40:06",
      "updated_on": "2025-06-26 - 11:55:14",
      "year": 2006,
      "subject": "Operating System",
      "chapter": "Memory Management",
      "question_type": "MCQ"
    },
    {
      "id": 4236,
      "question": "<p dir=\"ltr\"><span>Let SHAM</span><sub><span>3</span></sub><span> be the problem of finding a Hamiltonian cycle in a graph G = (V,E) with V divisible by 3 and DHAM</span><sub><span>3</span></sub><span> be the problem of determining if a Hamiltonian cycle exists in such graphs. Which one of the following is true?</span></p>",
      "answers": [
        {
          "id": 17331,
          "answer": "<p dir=\"ltr\"><span>Both DHAM</span><sub><span>3</span></sub><span> and SHAM</span><sub><span>3</span></sub><span> are NP-hard</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 17332,
          "answer": "<p dir=\"ltr\"><span>SHAM</span><sub><span>3</span></sub><span> is NP-hard, but DHAM</span><sub><span>3</span></sub><span> is not</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 17333,
          "answer": "<p dir=\"ltr\"><span>DHAM</span><sub><span>3</span></sub><span> is NP-hard, but SHAM</span><sub><span>3</span></sub><span> is not</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 17334,
          "answer": "<p dir=\"ltr\"><span>Neither DHAM</span><sub><span>3</span></sub><span> nor SHAM</span><sub><span>3</span></sub><span> is NP-hard</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>The problem of finding whether there exist a Hamiltonian Cycle or not is NP Hard and NP Complete Both.   Finding a Hamiltonian cycle in a graph G = (V,E) with V divisible by 3 is also NP Hard.</span></p>",
      "created_on": "2013-02-16 - 20:59:42",
      "updated_on": "2025-06-26 - 11:50:19",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Graph Theory",
      "question_type": "MCQ"
    },
    {
      "id": 4570,
      "question": "<p dir=\"ltr\"><span>Let T be a depth first search tree in an undirected graph G. Vertices u and n are leaves of this tree T. The degrees of both u and n in G are at least 2. which one of the following statements is true? </span></p>",
      "answers": [
        {
          "id": 18635,
          "answer": "<p dir=\"ltr\"><span>There must exist a vertex w adjacent to both u and n in G</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 18636,
          "answer": "<p dir=\"ltr\"><span>There must exist a vertex w whose removal disconnects u and n in G</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 18637,
          "answer": "<p dir=\"ltr\"><span>There must exist a cycle in G containing u and n</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 18638,
          "answer": "<p dir=\"ltr\"><span> There must exist a cycle in G containing u and all its neighbours in G.</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><b><strong>Below example shows that A and B are FALSE:</strong></b></p><img alt=\"GATE_DFS2\" height=\"420\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_4570/2c16c9b7f997e6f5-jInvPjNmpmofY7dmG7tD1s0qmbJKnS.jpg\" width=\"535\"/><p dir=\"ltr\"><b><strong>Below example shows C is false:</strong></b></p><img alt=\"GATE_DFS\" height=\"420\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_4570/578e7b31e134c423-RRSmHGz2305vGW4M7dD74xBFm9qmJF.jpg\" width=\"535\"/>",
      "created_on": "2013-09-04 - 11:45:14",
      "updated_on": "2025-06-26 - 11:48:48",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Graph Theory",
      "question_type": "MCQ"
    },
    {
      "id": 5193,
      "question": "<p dir=\"ltr\"><span>Consider the relation \"enrolled(student, course)\" in which (student, course) is the primary key, and the relation \"paid(student, amount)\" where student is the primary key. Assume no null values and no foreign keys or integrity constraints. Given the following four queries: </span></p><pre><span>Query1: select student from enrolled where </span><br><span>        student in (select student from paid)</span><br><span>Query2: select student from paid where </span><br><span>        student in (select student from enrolled)</span><br><span>Query3: select E.student from enrolled E, paid P </span><br><span>         where E.student = P.student</span><br><span>Query4:  select student from paid where exists</span><br><span>        (select * from enrolled where enrolled.student</span><br><span>         = paid.student) </span></pre><p dir=\"ltr\"><span> Which one of the following statements is correct? </span></p>",
      "answers": [
        {
          "id": 21054,
          "answer": "<p dir=\"ltr\"><span>All queries return identical row sets for any database</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 21055,
          "answer": "<p dir=\"ltr\"><span>Query2 and Query4 return identical row sets for all databases but there exist databases for which Query1 and Query2 return different row sets.</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 21056,
          "answer": "<p dir=\"ltr\"><span>There exist databases for which Query3 returns strictly fewer rows than Query2</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 21057,
          "answer": "<p dir=\"ltr\"><span>There exist databases for which Query4 will encounter an integrity violation at runtime.</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Take an example: </span></p><pre><span>Table enrolled</span><br><span>student   course</span><br><span>----------------</span><br><span> abc      c1   </span><br><span> xyz      c1</span><br><span> abc      c2</span><br><span> pqr      c1</span><br><br><span>Table paid</span><br><span>student  amount</span><br><span>-----------------</span><br><span> abc      20000</span><br><span> xyz      10000</span><br><span> rst      10000</span><br><br><br><span>Output of Query 1</span><br><span> abc</span><br><span> abc</span><br><span> xyz</span><br><br><span>Output of Query 2</span><br><span> abc</span><br><span> xyz</span><br><br><span>Output of Query 3</span><br><span> abc</span><br><span> xyz</span><br><br><span>Output of Query 4</span><br><span> abc</span><br><span> xyz</span></pre><p dir=\"ltr\"><span>   Query 1 and Query 3 may return repetitive student values as \"student\" is not a key in relation enrolled, however query 2 and query 4 always return same row sets.  So, option (B) is correct. </span></p>",
      "created_on": "2014-01-20 - 12:35:54",
      "updated_on": "2025-06-26 - 11:43:50",
      "year": 2006,
      "subject": "Database Management System",
      "chapter": "SQL",
      "question_type": "MCQ"
    },
    {
      "id": 5145,
      "question": "<p dir=\"ltr\"><span>Consider the relation account (customer, balance) where customer is a primary key and there are no null values. We would like to rank customers according to decreasing balance. The customer with the largest balance gets rank 1. ties are not broke but ranks are skipped: if exactly two customers have the largest balance they each get rank 1 and rank 2 is not assigned </span></p><pre><b><strong>Query1:</strong></b><br><span>  select A.customer, count(B.customer)</span><br><span>  from account A, account B</span><br><span>  where A.balance &lt;=B.balance</span><br><span>  group by A.customer</span><br><br><b><strong>Query2:</strong></b><br><span>  select A.customer, 1+count(B.customer)</span><br><span>  from account A, account B</span><br><span>  where A.balance &lt; B.balance</span><br><span>  group by A.customer </span></pre><p dir=\"ltr\"><span>  Consider these statements about Query1 and Query2. </span></p><pre><span>1. Query1 will produce the same row set as Query2 for </span><br><span>   some but not all databases.</span><br><span>2. Both Query1 and Query2 are correct implementation </span><br><span>   of the specification</span><br><span>3. Query1 is a correct implementation of the specification</span><br><span>   but Query2 is not</span><br><span>4. Neither Query1 nor Query2 is a correct implementation</span><br><span>   of the specification</span><br><span>5. Assigning rank with a pure relational query takes </span><br><span>   less time than scanning in decreasing balance order </span><br><span>   assigning ranks using ODBC. </span></pre><p dir=\"ltr\"><span> Which two of the above statements are correct?</span></p>",
      "answers": [
        {
          "id": 20873,
          "answer": "<p dir=\"ltr\"><span>2 and 5</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 20874,
          "answer": "<p dir=\"ltr\"><span>1 and 3</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 20875,
          "answer": "<p dir=\"ltr\"><span>1 and 4</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 20876,
          "answer": "<p dir=\"ltr\"><span>3 and 5</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Query 1 and Query 2 will give the same result if all the customers have distinct balance. So, for some databases, the result of query 1 and query 2 will be same.</span><br><br><br><span>&nbsp;</span><br><span>Now, let us consider a fact that all the entries in the database have the same value for balance. Ideally, all the customers should have rank 1, but both the queries will give all the customers a rank equal to the number of customers in the database.</span><br><span>So, both the queries do not give us the required output.</span><br><br><br><span>Thus, C is the correct choice.</span><br></p>",
      "created_on": "2014-01-20 - 12:35:54",
      "updated_on": "2025-06-26 - 11:45:23",
      "year": 2006,
      "subject": "Database Management System",
      "chapter": "SQL",
      "question_type": "MCQ"
    },
    {
      "id": 5204,
      "question": "<p dir=\"ltr\"><span>Consider the following log sequence of two transactions on a bank account, with initial balance 12000, that transfer 2000 to a mortgage payment and then apply a 5% interest. </span></p><pre><span>  1. T1 start</span><br><span>  2. T1 B old=12000 new=10000</span><br><span>  3. T1 M old=0 new=2000</span><br><span>  4. T1 commit</span><br><span>  5. T2 start</span><br><span>  6. T2 B old=10000 new=10500</span><br><span>  7. T2 commit </span></pre><p dir=\"ltr\"><span> Suppose the database system crashes just before log record 7 is written. When the system is restarted,  which one statement is true of the recovery procedure? </span></p>",
      "answers": [
        {
          "id": 21098,
          "answer": "<p dir=\"ltr\"><span>We must redo log record 6 to set B to 10500</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 21099,
          "answer": "<p dir=\"ltr\"><span>We must undo log record 6 to set B to 10000 and then redo log records 2 and 3.</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 21100,
          "answer": "<p dir=\"ltr\"><span>We need not redo log records 2 and 3 because transaction T1 has committed.</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 21101,
          "answer": "<p dir=\"ltr\"><span>We can apply redo and undo operations in arbitrary order because they are idempotent</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>We must undo log record 6 to set B to 10000 and then redo log records 2 and 3 bcoz system fail before commit operation. So we need to undone active transactions(T2) and redo committed transactions (T1)</span><br><br><span>Note: Here we are not using checkpoints.</span><br><br><b><strong>Checkpoint :</strong></b><span> Checkpoint is a mechanism where all the previous logs are removed from the system and stored permanently in a storage disk. Checkpoint declares a point before which the DBMS was in consistent state, and all the transactions were committed.</span><br><br><b><strong>Recovery:</strong></b><br><span>When a system with concurrent transactions crashes and recovers, it behaves in the following manner −</span><br><br><span>=&gt;The recovery system reads the logs backwards from the end to the last checkpoint.</span><br><br><span>=&gt;It maintains two lists, an undo-list and a redo-list.</span><br><br><span>=&gt;If the recovery system sees a log with  and  or just , it puts the transaction in the redo-list.</span><br><br><span>=&gt;If the recovery system sees a log with  but no commit or abort log found, it puts the transaction in undo-list.</span><br><br><span>All the transactions in the undo-list are then undone and their logs are removed. All the transactions in the redo-list and their previous logs are removed and then redone before saving their logs.</span><br><br><span>So Answer is B redo log records 2 and 3 and undo log record 6</span></p>",
      "created_on": "2014-01-20 - 12:36:43",
      "updated_on": "2025-06-26 - 11:42:57",
      "year": 2006,
      "subject": "Database Management System",
      "chapter": "Transaction",
      "question_type": "MCQ"
    },
    {
      "id": 5285,
      "question": "<p dir=\"ltr\"><span>We are given a set X = {x1, .... xn} where xi = 2</span><sup><span>i</span></sup><span>. A sample S ⊆ X is drawn by selecting each xi independently with probability pi = 1/2. The expected value of the smallest number in sample S is:</span></p>",
      "answers": [
        {
          "id": 21423,
          "answer": "<p dir=\"ltr\"><span>1/n</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 21424,
          "answer": "<p><span>2</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 21425,
          "answer": "<p dir=\"ltr\"><span>sqrt(n)</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 21426,
          "answer": "<p dir=\"ltr\"><span>n</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>E = (1/(2^1))*(2^1) + (1/(2^2))*(2^2) + … (1/(2^n))*(2^n)    = 1+1+…1 (n times addition of 1)    = n </span></p>",
      "created_on": "2014-01-21 - 03:43:36",
      "updated_on": "2025-06-26 - 11:36:47",
      "year": 2006,
      "subject": "Engineering Mathematics",
      "chapter": "Probability",
      "question_type": "MCQ"
    },
    {
      "id": 5291,
      "question": "<p dir=\"ltr\"><span>For each element in a set of size 2n, an unbiased coin is tossed. The 2n coin tosses are independent. An element is chosen if the corresponding coin toss were head. The probability that exactly n elements are chosen is:</span></p>",
      "answers": [
        {
          "id": 21441,
          "answer": "<p dir=\"ltr\"><span>(2nCn) / (4^n)  </span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 21442,
          "answer": "<p dir=\"ltr\"><span>(2nCn)  / (2^n)</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 21443,
          "answer": "<p dir=\"ltr\"><span>1 / (2nCn)</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 21444,
          "answer": "<p><span>1/2</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>The question is mainly about probability of n heads out of 2n coin tosses.  P = 2nCn∗((1/2)^n)∗((1/2)^n) = (2nCn) / (4^n) </span></p>",
      "created_on": "2014-01-21 - 03:43:36",
      "updated_on": "2025-06-26 - 11:35:56",
      "year": 2006,
      "subject": "Engineering Mathematics",
      "chapter": "Probability",
      "question_type": "MCQ"
    },
    {
      "id": 5368,
      "question": "<p dir=\"ltr\"><span>A relation R is defined on ordered pairs of integers as follows: (x,y) R(u,v) if x &lt; u and y &gt; v. Then R is:</span></p>",
      "answers": [
        {
          "id": 21746,
          "answer": "<p dir=\"ltr\"><span>Neither a Partial Order nor an Equivalence Relation</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 21747,
          "answer": "<p dir=\"ltr\"><span>A Partial Order but not a Total Order</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 21748,
          "answer": "<p dir=\"ltr\"><span>A Total Order</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 21749,
          "answer": "<p dir=\"ltr\"><span>An Equivalence Relation</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>An </span><b><strong>equivalence relation</strong></b><span> on a set x is a subset of x*x, i.e., a collection R of ordered pairs of elements of x, satisfying certain properties. Write “x R y\" to mean (x,y) is an element of R, and we say \"x is related to y,\" then the properties are: 1. Reflexive: a R a for all a Є R, 2. Symmetric: a R b implies that b R a for all a,b Є R 3. Transitive: a R b and b R c imply a R c for all a,b,c Є R.&nbsp;</span></p><p dir=\"ltr\"><span>An </span><b><strong>partial order relation</strong></b><span> on a set x is a subset of x*x, i.e., a collection R of ordered pairs of elements of x, satisfying certain properties. Write “x R y\" to mean (x,y) is an element of R, and we say \"x is related to y,\"&nbsp;</span></p><p dir=\"ltr\"><span>then the properties are:&nbsp;</span></p><p dir=\"ltr\"><span>1. Reflexive: a R a for all a Є R,&nbsp;</span></p><p dir=\"ltr\"><span>2. Anti-Symmetric: a R b and b R a implies that for all a,b Є R&nbsp;</span></p><p dir=\"ltr\"><span>3. Transitive: a R b and b R c imply a R c for all a,b,c Є R. An </span><b><strong>total order relation</strong></b><span> a set x is a subset of x*x, i.e., a collection R of ordered pairs of elements of x, satisfying certain properties.&nbsp;</span></p><p dir=\"ltr\"><span>Write “x R y\" to mean (x,y) is an element of R, and we say \"x is related to y,\"&nbsp;</span></p><p dir=\"ltr\"><span>then the properties are:&nbsp;</span></p><p dir=\"ltr\"><span>1. Reflexive: a R a for all a Є R,&nbsp;</span></p><p dir=\"ltr\"><span>2. Anti-Symmetric: a R b implies that b R a for all a,b Є R&nbsp;</span></p><p dir=\"ltr\"><span>3. Transitive: a R b and b R c imply a R c for all a,b,c Є R.&nbsp;</span></p><p dir=\"ltr\"><span>4. Comparability : either a R b or b R a for all a,b Є R.&nbsp;</span></p><p dir=\"ltr\"><span>As given in question, a relation R is defined on ordered pairs of integers as follows: (x,y) R(u,v) if x &lt; u and y &gt; v , reflexive property is not satisfied here, because there is &gt; or &lt; relationship between (x ,y) pair set and (u,v) pair set .&nbsp;</span></p><p dir=\"ltr\"><span>Other way , if there would have been x &lt;= u and y&gt;= v (or x=u and y=v) kind of relation among elements of sets then reflexive property could have been satisfied. Since reflexive property in not satisfied here , so given relation can not be </span><b><strong>equivalence, partial order</strong></b><span>or total order relation.&nbsp;</span></p><p dir=\"ltr\"><span>So, option (A) is correct.</span></p>",
      "created_on": "2014-01-21 - 03:44:39",
      "updated_on": "2025-06-26 - 11:32:04",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Relation & Function",
      "question_type": "MCQ"
    },
    {
      "id": 5366,
      "question": "<p dir=\"ltr\"><span>Let X, Y, Z be sets of sizes x, y and z respectively. Let W = X x Y. Let E be the set of all subsets of W. The number of functions from Z to E is: </span></p>",
      "answers": [
        {
          "id": 62479,
          "answer": "<p dir=\"ltr\"><span>z</span><sup><span>2xy</span></sup></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 62480,
          "answer": "<p dir=\"ltr\"><span>z x 2</span><sup><span>xy</span></sup></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 62481,
          "answer": "<p dir=\"ltr\"><span>z</span><sup><span>2x + y</span></sup></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 62482,
          "answer": "<p dir=\"ltr\"><span>2</span><sup><span>xyz</span></sup></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p><br></p>",
      "created_on": "2014-01-21 - 03:44:39",
      "updated_on": "2025-06-26 - 11:34:51",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Set Theory",
      "question_type": "MCQ"
    },
    {
      "id": 5376,
      "question": "<p dir=\"ltr\"><span>Let E, F and G be finite sets. Let X = (E ∩ F) - (F ∩ G) and Y = (E - (E ∩ G)) - (E - F). Which one of the following is true?</span></p>",
      "answers": [
        {
          "id": 66965,
          "answer": "<p dir=\"ltr\"><span>X ⊂ Y</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 66966,
          "answer": "<p dir=\"ltr\"><span>X ⊃ Y</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 66967,
          "answer": "<p dir=\"ltr\"><span>X = Y</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 66968,
          "answer": "<p dir=\"ltr\"><span>X - Y ≠ φ and Y - X ≠ φ</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>If we draw the Venn diagrams of both X and Y, we find that both cover exactly same region (shown in figure below). </span></p><figure class=\"image\"><img height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5376/2ab81b56e37b789b-Dmgc7ioPAdD0iQneJ1nmDHJXLElIfY.png\" width=\"inherit\"/><figcaption> </figcaption></figure><p dir=\"ltr\"><span> So option (C) is correct.</span></p>",
      "created_on": "2014-01-21 - 03:44:39",
      "updated_on": "2025-06-26 - 11:31:13",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Set Theory",
      "question_type": "MCQ"
    },
    {
      "id": 5367,
      "question": "<p dir=\"ltr\"><span>The set {1, 2, 3, 5, 7, 8, 9} under multiplication modulo 10 is not a group. Given below are four possible reasons. Which one of them is false?  </span></p>",
      "answers": [
        {
          "id": 21742,
          "answer": "<p dir=\"ltr\"><span> It is not closed</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 21743,
          "answer": "<p dir=\"ltr\"><span>2 does not have an inverse</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 21744,
          "answer": "<p dir=\"ltr\"><span>3 does not have an inverse</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 21745,
          "answer": "<p dir=\"ltr\"><span>8 does not have an inverse</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>A is not closed under multiplication as we may get 0 after multiplication and 0 is not present in set.  2 doesn't have an inverse as there is no x such that (2*x) mod 10 is 1.  3 has an inverse as (3*7) mod 10 is 1.  8 doesn't have an inverse as there is no x such that (2*x) mod 10 is 1.</span></p>",
      "created_on": "2014-01-21 - 03:44:39",
      "updated_on": "2025-06-26 - 11:34:10",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Group Theory",
      "question_type": "MCQ"
    },
    {
      "id": 5377,
      "question": "<p dir=\"ltr\"><span>Given a set of elements N = {1, 2, ..., n} and two arbitrary subsets A ⊆ N and B ⊆ N, how many of the n! permutations π from N to N satisfy min(π(A)) = min(π(B)), where min(S) is the smallest integer in the set of integers S, and π(S) is the set of integers obtained by applying permutation π to each element of S? </span></p>",
      "answers": [
        {
          "id": 21782,
          "answer": "<p dir=\"ltr\"><span>(n - |A ∪ B|) |A| |B| </span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 21783,
          "answer": "<p dir=\"ltr\"><span>(|A|</span><sup><span>2</span></sup><span> + |B|</span><sup><span>2</span></sup><span>)n</span><sup><span>2</span></sup></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 21784,
          "answer": "<figure class=\"image\"><img alt=\"GATE-CS-2006-Q24\" height=\"58\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5377/a917f19ff89908b5-o2diEXnXStxPjnhWyHu790fdOCrT5V.png\" srcset=\"https://media.geeksforgeeks.org/wp-content/uploads/20250421143841485886/GATE-CS-2006-Q24.png 97w\" width=\"97\"/><figcaption> </figcaption></figure><p><br/></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 21785,
          "answer": "<figure class=\"image\"><img alt=\"GATE-CS-2006-Q24-1\" height=\"76\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5377/6201c3a1935e649b-61dJlB6vGBQQa8Zv5odRicc2e0IoO6.png\" srcset=\"https://media.geeksforgeeks.org/wp-content/uploads/20250421144026318257/GATE-CS-2006-Q24-1.png 139w,https://media.geeksforgeeks.org/wp-content/uploads/20250421144026318257/GATE-CS-2006-Q24-1-100.png 100w\" width=\"100\"/><figcaption> </figcaption></figure>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p><span> </span></p><p dir=\"ltr\"><span>So π is a function from N to N, which just permutes the elements of N, so there will be n! such permutations. Now given a particular π i.e. given a particular permutation scheme, we have to find number of permutations out of these n! permutations in which minimum elements of A and B after applying π to them are same. </span></p><p dir=\"ltr\"><span>For example, if N = {1, 2, 3}, π is {2, 3, 1}, and if A is {1, 3}, then π(A) = {2, 1}. Now number of elements in A ∪ B is |A ∪ B|. We can choose permutations for A ∪ B in </span><sup><span>n</span></sup><span>C</span><sub><span>|A∪B|</span></sub><span> ways. </span></p><p dir=\"ltr\"><span>Note that here we are just choosing elements for permutation, and not actually permuting. Let this chosen set be P. Now once we have chosen numbers for permutations, we have to select mapping from each element of A ∪ B to some element of P. </span></p><p dir=\"ltr\"><span>First, to achieve required condition specified in question, we have to map minimum number in P to any of the number in A ∩ B, so that min(π(A)) = min(π(B)). We can do this in |A∩B| ways, since we can choose any element of A ∩ B to be mapped to minimum number in P. </span></p><p dir=\"ltr\"><span>Now we come to permutation. We can permute numbers in P in |A∪B-1|! ways, since one number (minimum) is already fixed. Moreover, we can also permute remaining n - |A ∪ B - 1| in (n - |A ∪ B - 1|)! ways. </span></p><p dir=\"ltr\"><span>So total number of ways: </span></p><pre><sup><span>n</span></sup><span>C</span><sub><span>|A∪B| </span></sub><span>∗ |A ∩ B| ∗ |A ∪ B − 1|! ∗ (n − |A ∪ B − 1|)! </span><br><span>= n!/(|A ∩ B||A ∪ B|) </span></pre><p dir=\"ltr\"><span>So option (C) is correct. </span></p><p dir=\"ltr\"><span>Note: Some answer keys on web have shown answer as option (D), which is clearly incorrect. Suppose |A ∪ B| = 3, and |A ∩ B| = 1, and n = 4, then option (D) evaluates to 14=0.25, which doesn't make sense.  </span></p>",
      "created_on": "2014-01-21 - 03:44:39",
      "updated_on": "2025-06-26 - 11:30:06",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Set Theory",
      "question_type": "MCQ"
    },
    {
      "id": 5378,
      "question": "<p dir=\"ltr\"><span>Let S = {1, 2, 3, ...., m}, m&gt;3. Let X</span><sub><span>1</span></sub><span>, X</span><sub><span>2</span></sub><span>, ..., X</span><sub><span>n</span></sub><span> be the subsets of S each of size 3. Define a function f from S to the set of natural numbers as, f(i) is the number of sets X</span><sub><span>j</span></sub><span> that contain the element i. That is, f(i) = |{j | i ϵ X</span><sub><span>j</span></sub><span>}| then </span></p><figure class=\"image\"><img alt=\"GATE-CS-2006-Q25\" height=\"40\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5378/84d85873afc84357-9dqibKEUrTUMfD8PyZAzfCjznlRhyg.png\" srcset=\"https://media.geeksforgeeks.org/wp-content/uploads/20250421145609509265/GATE-CS-2006-Q25.png 168w,https://media.geeksforgeeks.org/wp-content/uploads/20250421145609509265/GATE-CS-2006-Q25-100.png 100w\" width=\"168\"/><figcaption> </figcaption></figure>",
      "answers": [
        {
          "id": 21786,
          "answer": "<p dir=\"ltr\"><span>3m </span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 21787,
          "answer": "<p dir=\"ltr\"><span>3n</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 21788,
          "answer": "<p dir=\"ltr\"><span>2m + 1</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 21789,
          "answer": "<p dir=\"ltr\"><span>2n + 1</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>First of all, number of subsets of S of size 3 is mC3 i.e. n=mC3. Now we count number of subsets in which a particular element i appears, that will be (m−1)C2, because 1 element is already known, and we have to choose 2 elements from remaining m-1 elements.</span></p><figure class=\"image\"><img alt=\"GATE-CS-2006-Q25-1\" height=\"147\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5378/07ae6040a09e7597-75YoZVJtTz3NehkY1e3aBKtRZKtHI4.png\" srcset=\"https://media.geeksforgeeks.org/wp-content/uploads/20250421150036331523/GATE-CS-2006-Q25-1.png 286w,https://media.geeksforgeeks.org/wp-content/uploads/20250421150036331523/GATE-CS-2006-Q25-1-100.png 100w,https://media.geeksforgeeks.org/wp-content/uploads/20250421150036331523/GATE-CS-2006-Q25-1-200.png 200w\" width=\"286\"/><figcaption> </figcaption></figure>",
      "created_on": "2014-01-21 - 03:44:39",
      "updated_on": "2025-06-26 - 11:28:33",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Set Theory",
      "question_type": "MCQ"
    },
    {
      "id": 5569,
      "question": "<p dir=\"ltr\"><span>You are given a free running clock with a duty cycle of 50% and a digital waveform f which changes only at the negative edge of the clock. Which one of the following circuits (using clocked D flip-flops) will delay the phase of f by 180°? </span></p><figure class=\"image\"><img height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5569/6a7e3f6798cf374a-aLfeg5MPB8wyfmZyEus663aO8PAMzi.gif\" width=\"inherit\"/><figcaption> </figcaption></figure><figure class=\"image\"><img height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5569/8d418686c7adfc69-rT3NEbc6z5oLvG3oRekpgT1xljdQeA.gif\" width=\"inherit\"/><figcaption> </figcaption></figure>",
      "answers": [
        {
          "id": 22511,
          "answer": "<p dir=\"ltr\"><span>A</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 22512,
          "answer": "<p dir=\"ltr\"><span>B</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 22513,
          "answer": "<p dir=\"ltr\"><span>C</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 22514,
          "answer": "<p dir=\"ltr\"><span>D</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>We assume the D flip-flop to be negative edge triggered.&nbsp; In option (A), during the negative edge of the clock, first flip-flop inverts complement of ‘f’(we get f as the output). But, the complement of the output of first flip-flop(i.e. f') is given as the input to the second flip-flop. The&nbsp;second flip flop is enabled by 'clk'. The output at the second flip flop is f'+90 degrees (as +ve edged clk at output delays it by 90 degrees). Thus f is delayed by 270 degrees. So, A is not the correct option.&nbsp; Following the above procedures as in (A) we will get:In option (B) and (D), the output is ‘f’. But, we want inverted ‘f’ as the output.&nbsp;So, (B) and (D) can’t be the answer.&nbsp;In option (C), the first flip-flop is activated by ‘clk’. So, the output of first flip-flop has the same phase as ‘f’. But, the second flip-flop is enabled by complement of ‘clk’. Since the clock ‘clk’ has a duty cycle of 50% , we get the output having phase delay of 180 degrees.&nbsp; Therefore, (C) is the correct answer.&nbsp;</span></p>",
      "created_on": "2014-01-21 - 03:49:31",
      "updated_on": "2025-06-26 - 11:26:56",
      "year": 2006,
      "subject": "Digital Logic",
      "chapter": "Sequential Circuit",
      "question_type": "MCQ"
    },
    {
      "id": 5581,
      "question": "<p dir=\"ltr\"><span>Consider a Boolean function f (w, x, y, z). suppose that exactly one of its inputs is allowed to change at a time. If the function happens to be true for two input vectors i1 = (w1, x1, y1, z1) and i2 = (w2, x2, y2, z2) we would like the function to remain true as the input changes from i1 to i2 (i1 and i2 differ in exactly one bit position), without becoming false momentarily. Let f (w, x, y, z) = ∑(5,7,11,12,13,15). Which of the following cube covers of f will ensure that the required property is satisfied?</span></p>",
      "answers": [
        {
          "id": 84090,
          "answer": "<p dir=\"ltr\"><span>w'xz, wxy', xy'z, xyz,wyz</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 84091,
          "answer": "<p dir=\"ltr\"><span>wxy,w'xz,wyz</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 84092,
          "answer": "<p dir=\"ltr\"><span>wx(yz)', xz, wx'yz</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 84093,
          "answer": "<p dir=\"ltr\"><span>wzy, wyz, wxz, w'xz, xy'z, xyz</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><br/><span>We construct the K - Map as : </span><br/><span> </span></p><figure class=\"image\"><img height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5581/24889c69e0d8f9d9-Od4okXgEMVsDWwQ0HS8pNgKyeE35XH.jpg\" srcset=\"https://media.geeksforgeeks.org/wp-content/uploads/20240319124403/GATE-CS-2006-Question-38.jpg 800w, https://media.geeksforgeeks.org/wp-content/uploads/20240319124403/GATE-CS-2006-Question-38-100.jpg 100w, https://media.geeksforgeeks.org/wp-content/uploads/20240319124403/GATE-CS-2006-Question-38-200.jpg 200w, https://media.geeksforgeeks.org/wp-content/uploads/20240319124403/GATE-CS-2006-Question-38-300.jpg 300w, https://media.geeksforgeeks.org/wp-content/uploads/20240319124403/GATE-CS-2006-Question-38-660.jpg 660w, https://media.geeksforgeeks.org/wp-content/uploads/20240319124403/GATE-CS-2006-Question-38-768.jpg 768w, \" width=\"800\"/><figcaption> </figcaption></figure><p dir=\"ltr\"><span> </span><br/><span>After simplification of this K - Map we get answer as : w'xz, wxy', xy'z, xyz, wyz </span><br/><span> </span><br/><span>Thus, option (A) is the answer. </span><br/><span> </span><br/><span> </span></p>",
      "created_on": "2014-01-21 - 03:49:31",
      "updated_on": "2025-06-26 - 11:21:08",
      "year": 2006,
      "subject": "Digital Logic",
      "chapter": "Number",
      "question_type": "MCQ"
    },
    {
      "id": 5580,
      "question": "<p dir=\"ltr\"><span>Consider the circuit in the diagram. The ⊕ operator represents Ex-OR. The D flipflops are initialized to zeroes (cleared). </span><img height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5580/9ad7c265a1cab61d-y9KQm6OXuT6RGTDrrMg3lHpe17sgAz.png\" width=\"inherit\"/></p><p dir=\"ltr\"><span> The following data: 100110000 is supplied to the “data” terminal in nine clock cycles. After that the values of q2q1q0 are:</span></p>",
      "answers": [
        {
          "id": 22555,
          "answer": "<p><span>000</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 22556,
          "answer": "<p><span>001</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 22557,
          "answer": "<p><span>010</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 22558,
          "answer": "<p><span>101</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><br><span>The D flipflops are initialized to zeroes. This implies q0 = 0, q1 = 0 and q2 = 0 initially.&nbsp;</span><br><b><strong>Clock cycle 1 :</strong></b><span> q0 = data = 1 , q1 = q0</span><sub><span>before</span></sub><span> XOR q2</span><sub><span>before</span></sub><span> = 0 XOR 0 = 0 , q2 = q1</span><sub><span>before</span></sub><span> = 0&nbsp;</span><br><b><strong>Clock cycle 2 :</strong></b><span> q0 = data = 0 , q1 = q0</span><sub><span>before</span></sub><span> XOR q2</span><sub><span>before</span></sub><span> = 1 XOR 0 = 1 , q2 = q1</span><sub><span>before</span></sub><span> = 0&nbsp;</span><br><b><strong>Clock cycle 3 :</strong></b><span> q0 = data = 0 , q1 = q0</span><sub><span>before</span></sub><span> XOR q2</span><sub><span>before</span></sub><span> = 0 XOR 0 = 0 , q2 = q1</span><sub><span>before</span></sub><span> = 1&nbsp;</span><br><b><strong>Clock cycle 4 :</strong></b><span> q0 = data = 1 , q1 = q0</span><sub><span>before</span></sub><span> XOR q2</span><sub><span>before</span></sub><span> = 0 XOR 1 = 1 , q2 = q1</span><sub><span>before</span></sub><span> = 0&nbsp;</span><br><b><strong>Clock cycle 5 :</strong></b><span> q0 = data = 1 , q1 = q0</span><sub><span>before</span></sub><span> XOR q2</span><sub><span>before</span></sub><span> = 1 XOR 0 = 1 , q2 = q1</span><sub><span>before</span></sub><span> = 1&nbsp;</span><br><b><strong>Clock cycle 6 :</strong></b><span> q0 = data = 0 , q1 = q0</span><sub><span>before</span></sub><span> XOR q2</span><sub><span>before</span></sub><span> = 1 XOR 1 = 0 , q2 = q1</span><sub><span>before</span></sub><span> = 1&nbsp;</span><br><b><strong>Clock cycle 7 :</strong></b><span> q0 = data = 0 , q1 = q0</span><sub><span>before</span></sub><span> XOR q2</span><sub><span>before</span></sub><span> = 0 XOR 1 = 1 , q2 = q1</span><sub><span>before</span></sub><span> = 0&nbsp;</span><br><b><strong>Clock cycle 8 :</strong></b><span> q0 = data = 0 , q1 = q0</span><sub><span>before</span></sub><span> XOR q2</span><sub><span>before</span></sub><span> = 0 XOR 0 = 0 , q2 = q1</span><sub><span>before</span></sub><span> = 1&nbsp;</span><br><b><strong>Clock cycle 9 :</strong></b><span> q0 = data = 0 , q1 = q0</span><sub><span>before</span></sub><span> XOR q2</span><sub><span>before</span></sub><span> = 0 XOR 1 = 1 , q2 = q1</span><sub><span>before</span></sub><span> = 0&nbsp;</span><br><span>&nbsp;</span><br><span>Thus, option (C) is correct. &nbsp;</span><br><span>&nbsp;</span><br><span> </span></p>",
      "created_on": "2014-01-21 - 03:49:31",
      "updated_on": "2025-06-26 - 11:21:54",
      "year": 2006,
      "subject": "Digital Logic",
      "chapter": "Sequential Circuit",
      "question_type": "MCQ"
    },
    {
      "id": 5579,
      "question": "<p dir=\"ltr\"><span>Given two three bit numbers a2a1a0 and b2b1b0 and c, the carry in, the function that represents the carry generate function when these two numbers are added is:</span><br/><img alt=\"GATE2006Q36\" height=\"73\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5579/da6e27e7cb10c9e2-KpPuncxRJ77YDuqsn2G4Br2cqLtgnQ.png\" width=\"300\"/></p>",
      "answers": [
        {
          "id": 22551,
          "answer": "<p dir=\"ltr\"><span>A</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 22552,
          "answer": "<p dir=\"ltr\"><span>B</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 22553,
          "answer": "<p dir=\"ltr\"><span>C</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 22554,
          "answer": "<p dir=\"ltr\"><span>D</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>For carry look ahead adder we know carry generate function---  Where  &nbsp;  As we are having two 3 bits number to add so final carry out will be C3-  Putting value of Pi,Gi in 3  C3=(A2.B2)+(A1.B1)(A2+B2)+(A0.B0)(A1+B1)(A2+B2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (TAKING C0=0)  C3=A2.B2 +A1A2B1+A1B2B1+(A0B0)(A1A2+A1B2+B1A2+B1B2)  C3=A2B2+A1A2B1+A1B2B1+A0A1A2B0+A0A1B0B2+A0A2B1B0+A0B0B1B2  SO ANS IS (A) PART.</span></p>",
      "created_on": "2014-01-21 - 03:49:31",
      "updated_on": "2025-06-26 - 11:23:04",
      "year": 2006,
      "subject": "Digital Logic",
      "chapter": "Numbers",
      "question_type": "MCQ"
    },
    {
      "id": 5578,
      "question": "<img alt=\"GATE2006Q35\" height=\"204\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5578/27978c761f927998-bKYfrYicIX9b5AzdKhtbWVLSx2AZIX.png\" width=\"300\"/><p dir=\"ltr\"><span>  Consider the circuit above. Which one of the following options correctly represents f (x, y, z)?</span></p>",
      "answers": [
        {
          "id": 22547,
          "answer": "<p dir=\"ltr\"><span>xz' + xy + y'z</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 22548,
          "answer": "<p dir=\"ltr\"><span>xz' + xy + (yz)'</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 22549,
          "answer": "<p dir=\"ltr\"><span> xz + xy + (yz)'</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 22550,
          "answer": "<p dir=\"ltr\"><span>xz + xy' + (yz)'</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Output from MUX 1=&gt; Z’X+ZY’  Output from MUX2=&gt; Y’(Z’X+ZY’)+YX  =&gt;Y’Z+Y’Z’X+YX  =&gt;Y’Z+X(Y’Z’+Y)  =&gt;Y’Z+X(Y+Z’)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; USING A+A’B=(A+B)  =&gt;Y’Z+XY+XZ’  So Ans is (A).</span></p>",
      "created_on": "2014-01-21 - 03:49:31",
      "updated_on": "2025-06-26 - 11:25:30",
      "year": 2006,
      "subject": "Digital Logic",
      "chapter": "Combinational Circuit",
      "question_type": "MCQ"
    },
    {
      "id": 5582,
      "question": "<p dir=\"ltr\"><span>We consider the addition of two 2’s complement numbers b</span><sub><span>n-1</span></sub><span>b</span><sub><span>n-2</span></sub><span>...b</span><sub><span>0</span></sub><span> and a</span><sub><span>n-1</span></sub><span>a</span><sub><span>n-2</span></sub><span>...a</span><sub><span>0</span></sub><span>. A binary adder for adding unsigned binary numbers is used to add the two numbers. The sum is denoted by c</span><sub><span>n-1</span></sub><span>c</span><sub><span>n-2</span></sub><span>...c</span><sub><span>0</span></sub><span> and the carry-out by c</span><sub><span>out</span></sub><span>. Which one of the following options correctly identifies the overflow condition?</span><br/><img alt=\"GATECS2006Q39\" height=\"172\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5582/9110f4f281baac2b-ZuhBIqSfKi6RrrMCRgJcMt5CQEe1mz.png\" width=\"296\"/></p>",
      "answers": [
        {
          "id": 22563,
          "answer": "<p dir=\"ltr\"><span>A</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 22564,
          "answer": "<p dir=\"ltr\"><span>B</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 22565,
          "answer": "<p dir=\"ltr\"><span>C</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 22566,
          "answer": "<p dir=\"ltr\"><span>D</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Overflow occurs only when two same sign binary numbers added and result of these numbers is different sign in 2's complement representation. Otherwise overflow can not be occurred. Counter example for given options  (A) 0111+0111=1110 has overflow, but given condition violates. (C) 1001+0001=1010 has no overflow, but given condition violates. (D) 1111+1111=1110 has no overflow, but given condition violates.  Only option (B) is correct. </span></p>",
      "created_on": "2014-01-21 - 03:49:31",
      "updated_on": "2025-06-26 - 11:19:42",
      "year": 2006,
      "subject": "Digital Logic",
      "chapter": "Numbers",
      "question_type": "MCQ"
    },
    {
      "id": 5583,
      "question": "<p dir=\"ltr\"><span>Consider numbers represented in 4-bit gray code. Let h3h2h1h0 be the gray code representation of a number n and let g3g2g1g0 be the gray code of (n + 1) (modulo 16) value of the number. Which one of the following functions is correct? A:&nbsp;</span>[Tex]g_{0}(h_{3},h_{2},h_{1},h_{0})=\\\\sum (1,2,3,6,10,13,14,15)[/Tex]<span>&nbsp;B:&nbsp;</span>[Tex]g_{1}(h_{3},h_{2},h_{1},h_{0})=\\\\sum (4,9,10,11,12,13,14,15)[/Tex]<span>&nbsp;C:&nbsp;</span>[Tex]g_{2}(h_{3},h_{2},h_{1},h_{0})=\\\\sum (2,4,5,6,7,12,13,15)[/Tex]<span>&nbsp;D:&nbsp;</span>[Tex]g_{3}(h_{3},h_{2},h_{1},h_{0})=\\\\sum (0,1,6,7,10,11,12,13)[/Tex]</p>",
      "answers": [
        {
          "id": 84086,
          "answer": "<p dir=\"ltr\"><span>A</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 84087,
          "answer": "<p dir=\"ltr\"><span>B</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 84088,
          "answer": "<p dir=\"ltr\"><span>C</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 84089,
          "answer": "<p dir=\"ltr\"><span>D</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Write gray code (n) numbers from 0 to 15 and make another column for (n+1) numbers by shifting the next number on top. As shown in the table:           </span></p><figure class=\"image\"><img height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5583/b2b40418172ce0b0-V8llsAKZVw2HqYTRmsPpiLe8sBxYMH.jpg\" srcset=\"https://media.geeksforgeeks.org/wp-content/uploads/20240319162327/GATE-CS-2006-Question-40.jpg 415w, https://media.geeksforgeeks.org/wp-content/uploads/20240319162327/GATE-CS-2006-Question-40-100.jpg 100w, https://media.geeksforgeeks.org/wp-content/uploads/20240319162327/GATE-CS-2006-Question-40-200.jpg 200w, https://media.geeksforgeeks.org/wp-content/uploads/20240319162327/GATE-CS-2006-Question-40-300.jpg 300w, \" width=\"415\"/><figcaption> </figcaption></figure><p dir=\"ltr\"><span> Now to determine the min terms for g3, g2, g1, g0, we see the '1s' in the corresponding columns. The digit they correspond to give the min terms of the function. Thus the answers we will be: G3(h3h2h1h0)= ∑(4,12,13,15,14,10,11,9) G2(h3h2h1h0)= ∑(2,6,7,5,4,12,13,15) G1(h3h2h1h0)= ∑(1,3,2,6,13,15,14,10) G0(h3h2h1h0)= ∑(0,1,6,7,12,13,10,11) Thus g2 is given correctly in the options. </span><b><strong>Read about K-Maps to know about mapping, SOP and POS forms:</strong></b><span> </span><a href='\\\"http://quiz.geeksforgeeks.org/k-mapkarnaugh-map/\\\"'><span>K-Map (Karnaugh Map)</span></a><span> .</span></p>",
      "created_on": "2014-01-21 - 03:49:31",
      "updated_on": "2025-06-26 - 11:18:44",
      "year": 2006,
      "subject": "Digital Logic",
      "chapter": "Numbers",
      "question_type": "MCQ"
    },
    {
      "id": 5824,
      "question": "<p dir=\"ltr\"><span>If s is a string over (0 + 1)* then let  n</span><sub><span>0</span></sub><span>(s) denote the number of 0’s in s and n</span><sub><span>1 </span></sub><span>(s) the number of 1’s in s. Which one of the following languages is not regular?  </span></p><img alt=\"GATECS2006Q29\" height=\"110\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5824/e7c53768d4bb97c2-5OHsMR5td06orVIrSDSAkP1saSbEta.png\" width=\"374\"/><p><br/></p>",
      "answers": [
        {
          "id": 23503,
          "answer": "<p dir=\"ltr\"><span>A</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 23504,
          "answer": "<p dir=\"ltr\"><span>B</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 23505,
          "answer": "<p dir=\"ltr\"><span>C</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 23506,
          "answer": "<p dir=\"ltr\"><span>D</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Languages in option (A) And (D) are finite so both the options are eliminated.   For option A: There are finite no. of 3 digit prime numbers. There exists a FA for every finite set. Hence FA is possible.  For option D: Possible remainders for 7 is 0 to 6, and for 5 its 0 to 4. Using 35 states, FA can be made.  For option B: We can have 6 states (including 1 reject state) state 1: difference is 0 state 2: difference is 1 (more 1s) state 3: difference is 1 (more 0s) state 4: difference is 2 (more 1s) state 5: difference is 2 (more 0s) state 6: reject state for difference &gt;= 3  Suppose the string is 000101 Scan 0 -&gt; state 3 Scan 0 -&gt; state 5 Scan 0 -&gt; reject (since diff. is 3 now)  Similarly if we try for string: 010100, this will be accepted. </span></p>",
      "created_on": "2014-01-21 - 04:00:03",
      "updated_on": "2025-06-26 - 11:16:02",
      "year": 2006,
      "subject": "Theory Of Computation",
      "chapter": "Finite Automata",
      "question_type": "MCQ"
    },
    {
      "id": 5825,
      "question": "<p dir=\"ltr\"><span>Consider the regular language L = (111 + 11111)*. The minimum number of states in any DFA accepting this languages is:</span></p>",
      "answers": [
        {
          "id": 23507,
          "answer": "<p><span>3</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 23508,
          "answer": "<p><span>5</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 23509,
          "answer": "<p><span>8</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 23510,
          "answer": "<p><span>9</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>The finite state automata is :                       </span></p><figure class=\"image\"><img height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5825/68432df442901c23-U9LhiRnR0KgREqi0qQGnqNHqzC5d1d.jpg\" srcset=\"https://media.geeksforgeeks.org/wp-content/uploads/20240319123651/GATE-CS-2006-Question-34.jpg 1050w, https://media.geeksforgeeks.org/wp-content/uploads/20240319123651/GATE-CS-2006-Question-34-100.jpg 100w, https://media.geeksforgeeks.org/wp-content/uploads/20240319123651/GATE-CS-2006-Question-34-200.jpg 200w, https://media.geeksforgeeks.org/wp-content/uploads/20240319123651/GATE-CS-2006-Question-34-300.jpg 300w, https://media.geeksforgeeks.org/wp-content/uploads/20240319123651/GATE-CS-2006-Question-34-660.jpg 660w, https://media.geeksforgeeks.org/wp-content/uploads/20240319123651/GATE-CS-2006-Question-34-768.jpg 768w, https://media.geeksforgeeks.org/wp-content/uploads/20240319123651/GATE-CS-2006-Question-34-1024.jpg 1024w, \" width=\"1050\"/><figcaption> </figcaption></figure><p dir=\"ltr\"><span> Explanation: It is given that language L = (111 + 11111)* Strings , that belongs in the language are L = {null , 111 , 11111, 111111 , 11111111 , 111111111 , 1111111111 , ……. form string length 8 , (number of 1’s) , now we can can generate any length of string from length 3 and 5 (i.e. length 8 ,length 9, length 10 , length 11 ,…etc)} L = {null , 111 , 11111, 111111 , 11111111 , 111111111* } Strings in length , that belongs in the language L = {0 ,3, 5, 6, 8, 9, 10, 11, …} So, there are 5 states that are final states and 4 states that are non-final states Therefore total number of states are 9 states . hence option D is true. </span></p><p dir=\"ltr\"><br/></p>",
      "created_on": "2014-01-21 - 04:00:03",
      "updated_on": "2025-06-26 - 11:14:30",
      "year": 2006,
      "subject": "Theory Of Computation",
      "chapter": "Finite Automata",
      "question_type": "MCQ"
    },
    {
      "id": 5957,
      "question": "<p dir=\"ltr\"><span>Consider the following statements about the context free grammar </span></p><pre><span>G = {S → SS, S → ab, S → ba, S → Ε}</span><br><span>I. G is ambiguous</span><br><span>II. G produces all strings with equal number of a’s and b’s</span><br><span>III. G can be accepted by a deterministic PDA.</span></pre><p dir=\"ltr\"><span> Which combination below expresses all the true statements about G?</span></p>",
      "answers": [
        {
          "id": 24008,
          "answer": "<p dir=\"ltr\"><span>I only</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 24009,
          "answer": "<p dir=\"ltr\"><span>I and III only</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 24010,
          "answer": "<p dir=\"ltr\"><span>II and III only</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24011,
          "answer": "<p dir=\"ltr\"><span> I, II and III</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><b><strong>Statement I:</strong></b></p><p dir=\"ltr\"><span> G is ambiguous because, as shown in the image below there can be two decision tree for string S = ababab [TRUE]  </span></p><img alt=\"image1\" height=\"1662\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5957/fe6897188eafd22d-qhxHGCVuZsuFTeTHZF5LtKvWUoEopi.jpg\" width=\"2243\"/><p dir=\"ltr\"><b><strong>Statement II:</strong></b></p><p dir=\"ltr\"><span> G produces all strings with equal number of a’s and b’s [FALSE]  string 'aabb' cannot be produced by G \t </span></p><p dir=\"ltr\"><b><strong>Statement III:</strong></b></p><p dir=\"ltr\"><span> G can be accepted by a deterministic PDA [TRUE]  Assume there is a PDA which pushes if top of the stack is $ (bottom most alphabet of the stack) and pops otherwise. A string is rejected while popping if the current letter and top of the stack are same. This PDA can derive G.  Hence, correct answer should be (B) I and III only  </span></p>",
      "created_on": "2014-01-21 - 04:00:34",
      "updated_on": "2025-06-26 - 11:11:29",
      "year": 2006,
      "subject": "Theory Of Computation",
      "chapter": "Context Free Grammar",
      "question_type": "MCQ"
    },
    {
      "id": 5959,
      "question": "<p dir=\"ltr\"><span>In the correct grammar of </span><a href=\"http://geeksquiz.com/gate-gate-cs-2006-question-84/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><span>above question</span></a><span>, what is the length of the derivation (number of steps starring from S) to generate the string a</span><sup><span>l</span></sup><span>b</span><sup><span>m</span></sup><span> with l ≠ m?</span></p>",
      "answers": [
        {
          "id": 24016,
          "answer": "<p dir=\"ltr\"><span>max(l,m) + 2</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 24017,
          "answer": "<p dir=\"ltr\"><span>l + m + 2</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 24018,
          "answer": "<p dir=\"ltr\"><span>l + m + 3</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24019,
          "answer": "<p dir=\"ltr\"><span>max(l, m) + 3</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Correct grammar of the last question was (D), which is:</span></p><p dir=\"ltr\"><span>S -&gt; AC|CB</span><br><span>C -&gt; aCb|epsilon</span><br><span>A -&gt; aA|a</span><br><span>B -&gt; Bb|b</span></p><p dir=\"ltr\"><span>Now, the most optimal and intuitive way to generate a string of the form a</span><sup><span>l</span></sup><span>b</span><sup><span>m</span></sup><span> would be to first use \"C -&gt; aCb|epsilon\" production rule to get as many a and b as we can, which would be min(l,m). To get the rest of the string, we could just use latter two production rules accordingly. Formally deriving the string of the general format a</span><sup><span>l</span></sup><span>b</span><sup><span>m</span></sup><span> from the above grammar -</span></p><p dir=\"ltr\"><span>1.\t &nbsp;S -&gt; AC&nbsp;</span><br><span>2. &nbsp; &nbsp; &nbsp;-&gt; A(aCb)&nbsp;</span><br><span>3. &nbsp; &nbsp; &nbsp;-&gt; ....&nbsp;</span><br><span>4. &nbsp; &nbsp; &nbsp;-&gt; ....</span><br><span>5. &nbsp; &nbsp; &nbsp;-&gt; A(a</span><sup><span>m</span></sup><span> C b</span><sup><span>m</span></sup><span>)&nbsp;</span><br><span>6. &nbsp; &nbsp; &nbsp;-&gt; A(a</span><sup><span>m</span></sup><span> b</span><sup><span>m</span></sup><span>)&nbsp;</span><br><span>7. &nbsp; &nbsp; &nbsp; -&gt; aA(a</span><sup><span>m</span></sup><span> b</span><sup><span>m</span></sup><span>)&nbsp;</span><br><span>8. &nbsp; &nbsp; &nbsp;-&gt; ....&nbsp;</span><br><span>9. &nbsp; &nbsp; &nbsp;-&gt; ....</span><br><span>10. &nbsp; &nbsp;-&gt; a</span><sup><span>(l-m-1)</span></sup><span>A(a</span><sup><span>m</span></sup><span> b</span><sup><span>m</span></sup><span>)&nbsp;</span><br><span>11. &nbsp; &nbsp; -&gt; a</span><sup><span>l</span></sup><span> b</span><sup><span>m</span></sup></p><p dir=\"ltr\"><span>From above set of derivation steps we can count the total steps as follows:</span></p><p dir=\"ltr\"><br><span>Production 1 took 1 step &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[using S-&gt;AC]</span><br><span>Production 2-5 took steps &nbsp; &nbsp; &nbsp;: &nbsp; &nbsp; &nbsp;min(l,m) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[using C-&gt;aCb]&nbsp;</span><br><span>Production 6 took 1 step &nbsp; &nbsp; &nbsp; &nbsp; : &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[using C-&gt;epsilon]</span><br><span>Production 7-11 took steps &nbsp; &nbsp; &nbsp;: max(l,m)-min(l,m) &nbsp; [using A -&gt; aA|a or B -&gt; Bb|b]</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><br><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><b><strong>Total steps</strong></b><span> &nbsp; : max(l,m) + 2 &nbsp; &nbsp;&nbsp;</span></p><p dir=\"ltr\"><span>Hence, answer should be </span><b><strong>(A)</strong></b><span>: max(l,m) + 2&nbsp;</span></p>",
      "created_on": "2014-01-21 - 04:00:34",
      "updated_on": "2025-06-25 - 17:43:52",
      "year": 2006,
      "subject": "Theory Of Computation",
      "chapter": "Context Free Grammar",
      "question_type": "MCQ"
    },
    {
      "id": 5958,
      "question": "<p dir=\"ltr\"><span>Which one of the following grammars generates the language L = {a</span><sup><span>i </span></sup><span>b</span><sup><span>j</span></sup><span> | i ≠ j}</span></p><figure class=\"image\"><img height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5958/9180df5923650796-ITlkApHG4Fxw8LQ0TRWCherLkYsZww.png\" srcset=\"https://media.geeksforgeeks.org/wp-content/uploads/20240319160817/1.png 865w, https://media.geeksforgeeks.org/wp-content/uploads/20240319160817/1-100.png 100w, https://media.geeksforgeeks.org/wp-content/uploads/20240319160817/1-200.png 200w, https://media.geeksforgeeks.org/wp-content/uploads/20240319160817/1-300.png 300w, https://media.geeksforgeeks.org/wp-content/uploads/20240319160817/1-660.png 660w, https://media.geeksforgeeks.org/wp-content/uploads/20240319160817/1-768.png 768w, \" width=\"865\"/><figcaption> </figcaption></figure>",
      "answers": [
        {
          "id": 24012,
          "answer": "<p dir=\"ltr\"><span>A</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 24013,
          "answer": "<p dir=\"ltr\"><span>B</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 24014,
          "answer": "<p dir=\"ltr\"><span>C</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24015,
          "answer": "<p dir=\"ltr\"><span>D</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Language L contains the strings: (abb, aab, abbb, aabbb, aaabb, aa, bb, .......), i.e. &nbsp;all a's appear before b's in a string, and \"number of a's\" is not equal to \"number of b's\", So i ≠ j.</span><br><br><span>Here </span><b><strong>Grammar A, B &amp; C</strong></b><span> also generate the string \"ab\", where i = j, and many more strings with i = j, hence these grammars do not generate the language L, because for a string that belongs to language L, exponent i should not be equal to exponent j.</span><br><br><b><strong>Grammar D: </strong></b><span>This Grammar never generates a string with equal no of a's and b's, i.e. ij.&nbsp;</span><br><span>Hence this grammar generates the language L.&nbsp;</span></p><p dir=\"ltr\"><span>Hence Option D is the correct answer</span></p>",
      "created_on": "2014-01-21 - 04:00:34",
      "updated_on": "2025-06-26 - 11:08:17",
      "year": 2006,
      "subject": "Theory Of Computation",
      "chapter": "Context Free Grammar",
      "question_type": "MCQ"
    },
    {
      "id": 5956,
      "question": "<img alt=\"GATECS2006Q18\" height=\"62\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_5956/1d63775172847ff8-CgLSZ5b0xRHE0bfqhTquWnDvQ8RTZd.png\" width=\"510\"/><p dir=\"ltr\"><span>Which is correct ?</span></p>",
      "answers": [
        {
          "id": 24004,
          "answer": "<p dir=\"ltr\"><span>L1 only</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 24005,
          "answer": "<p dir=\"ltr\"><span>L3 Only</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 24006,
          "answer": "<p dir=\"ltr\"><span>L1 and L2</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24007,
          "answer": "<p dir=\"ltr\"><span>L2 and L3</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>A PDA can be built only for L1.  It is not possible to build PDA for L2 and L3.</span></p>",
      "created_on": "2014-01-21 - 04:00:34",
      "updated_on": "2025-06-26 - 11:13:54",
      "year": 2006,
      "subject": "Theory Of Computation",
      "chapter": "Pushdown Automata",
      "question_type": "MCQ"
    },
    {
      "id": 6037,
      "question": "<p dir=\"ltr\"><span>For S ∈ (0 + 1) * let d(s) denote the decimal value of s (e.g. d(101) = 5). Let L = {s ∈ (0 + 1)* d(s)mod5 = 2 and d(s)mod7 != 4}. Which one of the following statements is true? </span></p>",
      "answers": [
        {
          "id": 24313,
          "answer": "<p dir=\"ltr\"><span>L is recursively enumerable, but not recursive</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 24314,
          "answer": "<p dir=\"ltr\"><span>L is recursive, but not context-free</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 24315,
          "answer": "<p dir=\"ltr\"><span> L is context-free, but not regular</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24316,
          "answer": "<p dir=\"ltr\"><span>L is regular</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>It is regular L1=d(s) mod 5 =2 is regular with 5 states L2=d(s) mod 7 =4 is regular with 7 states therefore L1 ^ L2' should be regular because regular grammar are closed under intersection and compliment</span></p>",
      "created_on": "2014-01-21 - 04:01:02",
      "updated_on": "2025-06-25 - 17:42:36",
      "year": 2006,
      "subject": "Theory Of Computation",
      "chapter": "Rels",
      "question_type": "MCQ"
    },
    {
      "id": 6214,
      "question": "<p dir=\"ltr\"><span>Consider the polynomial p(x) = a0 + a1x + a2x</span><sup><span>2</span></sup><span> + a3x</span><sup><span>3</span></sup><span> , where ai ≠ 0 ∀i. The minimum number of multiplications needed to evaluate p on an input x is:  </span></p>",
      "answers": [
        {
          "id": 24993,
          "answer": "<p><span>3</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 24994,
          "answer": "<p><span>4</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 24995,
          "answer": "<p><span>6</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24996,
          "answer": "<p><span>9</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><b><strong>Background Explanation :</strong></b></p><p dir=\"ltr\"><span> Horner's rule for polynomial division is an algorithm used to simplify the process of evaluating a polynomial f(x) at a certain value x = x0 by dividing the polynomial into monomials (polynomials of the 1st degree). Each monomial involves a maximum of one multiplication and one addition processes. The result obtained from one monomial is added to the result obtained from the next monomial and so forth in an accumulative addition fashion. To explain the above, let is re-write the polynomial in its expanded form;  f(x0) = a0 + a1x0+ a2x0^2+ ... + anx0^n  This can, also, be written as:  f(x0) = a0 + x0(a1+ x0(a2+ x0(a3+ ... + (an-1 + anx0)....)  The algorithm proposed by this rule is based on evaluating the monomials formed above starting from the one in the inner-most parenthesis and move out to evaluate the monomials in the outer parenthesis.   </span></p><p dir=\"ltr\"><b><strong>Solution :</strong></b></p><p dir=\"ltr\"><span> Using Horner's Rule, we can write the polynomial as following a0 + (a1 + (a2 + a3x)x)x  In the above form, we need to do only 3 multiplications </span></p><pre><br><span>p = a3 X x    ------------ (1)</span><br><br><span>q = (a2 + p) X x  ---------(2)</span><br><br><span>r = (a1 + q) X x  ---------(3)</span><br><br><span>result = a0 + r </span></pre><p><span>  </span></p>",
      "created_on": "2014-01-21 - 04:44:45",
      "updated_on": "2025-06-25 - 17:34:55",
      "year": 2006,
      "subject": "Engineering Mathematics",
      "chapter": "Calculus",
      "question_type": "MCQ"
    },
    {
      "id": 6301,
      "question": "<p dir=\"ltr\"><span>The 2</span><sup><span>n</span></sup><span> vertices of a graph G corresponds to all subsets of a set of size n, for n &gt;= 6 . Two vertices of G are adjacent if and only if the corresponding sets intersect in exactly two elements. </span><br><br><span>The number of vertices of degree zero in G is:</span></p>",
      "answers": [
        {
          "id": 25333,
          "answer": "<p><span>1</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 25334,
          "answer": "<p dir=\"ltr\"><span>n</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 25335,
          "answer": "<p dir=\"ltr\"><span>n+1</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 25336,
          "answer": "<p dir=\"ltr\"><span>2</span><sup><span>n</span></sup></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>There are n nodes which are single and 1 node which belong to empty set. And since they are not having 2 or more elements so they won’t be connected to anyone hence total number of nodes with degree 0 are n+1.  </span><br><br><span> </span></p>",
      "created_on": "2014-01-21 - 04:45:42",
      "updated_on": "2025-06-25 - 17:34:35",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Graph Theory",
      "question_type": "MCQ"
    },
    {
      "id": 6302,
      "question": "<p dir=\"ltr\"><span>The 2</span><sup><span>n</span></sup><span> vertices of a graph G corresponds to all subsets of a set of size n, for n &gt;= 6. Two vertices of G are adjacent if and only if the corresponding sets intersect in exactly two elements.&nbsp;</span><br><br><span>The number of connected components in G is:</span><br><span>&nbsp;</span></p>",
      "answers": [
        {
          "id": 25337,
          "answer": "<p dir=\"ltr\"><span>n</span><br><span>&nbsp;</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 25338,
          "answer": "<p dir=\"ltr\"><span>n+2</span><br><span>&nbsp;</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 25339,
          "answer": "<p dir=\"ltr\"><span>2</span><sup><span>n/2</span></sup><br><span>&nbsp;</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 25340,
          "answer": "<p dir=\"ltr\"><span>2</span><sup><span>n</span></sup><span> / n</span><br><span>&nbsp;</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>n+1 nodes of the graph not connected to anyone while others are connected so total number of connected components are n+2 (n+1 connected components by each of the n+1 vertices plus 1 connected component by remaining vertices).</span><br><span>&nbsp;</span></p>",
      "created_on": "2014-01-21 - 04:45:42",
      "updated_on": "2025-06-25 - 17:33:33",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Graph Theory",
      "question_type": "MCQ"
    },
    {
      "id": 6411,
      "question": "<p dir=\"ltr\"><span>A CPU has a 32 KB direct mapped cache with 128-byte block size. Suppose A is a twodimensional array of size 512×512 with elements that occupy 8-bytes each. Consider the following two C code segments, P1 and P2. P1: </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=w> </span>\n<span class=k>for</span><span class=w> </span><span class=p>(</span><span class=n>i</span><span class=o>=</span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=o>&lt;</span><span class=mi>512</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=o>++</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=w>   </span><span class=k>for</span><span class=w> </span><span class=p>(</span><span class=n>j</span><span class=o>=</span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>j</span><span class=o>&lt;</span><span class=mi>512</span><span class=p>;</span><span class=w> </span><span class=n>j</span><span class=o>++</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=w>      </span><span class=n>x</span><span class=w> </span><span class=o>+=</span><span class=w> </span><span class=n>A</span><span class=p>[</span><span class=n>i</span><span class=p>][</span><span class=n>j</span><span class=p>];</span>\n<span class=w>   </span><span class=p>}</span>\n<span class=p>}</span><span class=w> </span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>P2: </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=w> </span>\n<span class=k>for</span><span class=w> </span><span class=p>(</span><span class=n>i</span><span class=o>=</span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=o>&lt;</span><span class=mi>512</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=o>++</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=w>   </span><span class=k>for</span><span class=w> </span><span class=p>(</span><span class=n>j</span><span class=o>=</span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>j</span><span class=o>&lt;</span><span class=mi>512</span><span class=p>;</span><span class=w> </span><span class=n>j</span><span class=o>++</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=w>      </span><span class=n>x</span><span class=w> </span><span class=o>+=</span><span class=w> </span><span class=n>A</span><span class=p>[</span><span class=n>j</span><span class=p>][</span><span class=n>i</span><span class=p>];</span>\n<span class=w>   </span><span class=p>}</span>\n<span class=p>}</span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>P1 and P2 are executed independently with the same initial state, namely, the array A is not in the cache and i, j, x are in registers. Let the number of cache misses experienced by P1 be M1 and that for P2 be M2 .  The value of M1 is:</span></p>",
      "answers": [
        {
          "id": 25773,
          "answer": "<p><span>0</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 25774,
          "answer": "<p><span>2048</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 25775,
          "answer": "<p><span>16384</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 25776,
          "answer": "<p><span>262144</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>[P1] runs the loops in a way that access elements of A in row major order and [P2] accesses elements in column major order. No of cache blocks = CacheSize/BlockSize = 32KB / 128 Byte = 256 No. of array elements in Each Block = BlockSize/ElementSize = 128 Byte / 8 Byte = 16  Total Misses for [P1] = ArraySize *  (No. of array elements in Each Block) / (No of cache blocks) = 512 * 512 * 16 / 256 = 16384  </span></p>",
      "created_on": "2014-01-21 - 04:55:18",
      "updated_on": "2025-06-25 - 17:22:13",
      "year": 2006,
      "subject": "Computer Organization And Architecture",
      "chapter": "Cache Memory",
      "question_type": "MCQ"
    },
    {
      "id": 6409,
      "question": "<p dir=\"ltr\"><span>Consider two cache organizations: The first one is 32 KB 2-way set associative with 32-byte block size. The second one is of the same size but direct mapped. The size of an address is 32 bits in both cases. A 2-to-1 multiplexer has a latency of 0.6 ns while a kbit comparator has a latency of k/10 ns. The hit latency of the set associative organization is h1 while that of the direct mapped one is h2. The value of h1 is:</span></p>",
      "answers": [
        {
          "id": 25765,
          "answer": "<p dir=\"ltr\"><span>2.4 ns</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 25766,
          "answer": "<p dir=\"ltr\"><span>2.3 ns</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 25767,
          "answer": "<p dir=\"ltr\"><span>1.8 ns</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 25768,
          "answer": "<p dir=\"ltr\"><span>1.7 ns</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Cache size = 32 KB = 32 * 2</span><sup><span>10</span></sup><span> bytes Cache block size = 32 bytes Number of blocks = 2&nbsp;</span><br><span>Total combinations are : = cache size / (Number of blocks * block size) = 32 * 2</span><sup><span>10</span></sup><span> / (2 * 32) = 512 = 2</span><sup><span>9</span></sup><span>&nbsp;</span><br><span>Therefore, number of index bits = 9&nbsp;</span><br><span>Since, cache block size is 32 bytes i.e. 2</span><sup><span>5</span></sup><span> bytes. Number of offset bits = 5&nbsp;</span><br><span>So, number of tag bits = 32 – 9 – 5 = 18&nbsp;</span><br><span>Hit latency (h1) = 0.6 + (18 / 10) ns = 2.4 ns&nbsp;</span><br><span>&nbsp;</span><br><span>Thus, option (A) is correct.&nbsp;</span></p>",
      "created_on": "2014-01-21 - 04:55:18",
      "updated_on": "2025-06-25 - 17:07:41",
      "year": 2006,
      "subject": "Computer Organization And Architecture",
      "chapter": "Cache Memory",
      "question_type": "MCQ"
    },
    {
      "id": 6410,
      "question": "<p dir=\"ltr\"><span>Consider two cache organizations: The first one is 32 KB 2-way set associative with 32-byte block size. The second one is of the same size but direct mapped. The size of an address is 32 bits in both cases. A 2-to-1 multiplexer has a latency of 0.6 ns while a kbit comparator has a latency of k/10 ns. The hit latency of the set associative organization is h1 while that of the direct mapped one is h2. The value of h1 is:</span></p>",
      "answers": [
        {
          "id": 25769,
          "answer": "<p dir=\"ltr\"><span>2.4 ns</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 25770,
          "answer": "<p><span>2.3</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 25771,
          "answer": "<p><span>1.8</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 25772,
          "answer": "<p><span>1.7</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Cache size = 32 KB = 32 * 2</span><sup><span>10</span></sup><span> bytes</span><br><span>Cache block size = 32 bytes</span><br><span>Number of blocks = 2</span><br><br><span>Total combinations are :</span><br><span>= cache size / (Number of blocks * block size)</span><br><span>= 32 * 2</span><sup><span>10</span></sup><span> / (2 * 32)</span><br><span>= 512</span><br><span>= 2</span><sup><span>9</span></sup><br><br><span>Therefore, number of index bits = 9</span><br><br><span>Since, cache block size is 32 bytes i.e. 2</span><sup><span>5</span></sup><span> bytes.</span><br><span>Number of offset bits = 5</span><br><br><span>So, number of tag bits = 32 – 9 – 5 = 18</span><br><br><span>Hit latency (h1) = 0.6 + (18 / 10) ns = 2.4 ns</span><br><br><span>&nbsp;</span><br><span>Thus, option (A) is correct.</span></p>",
      "created_on": "2014-01-21 - 04:55:18",
      "updated_on": "2025-06-25 - 17:08:48",
      "year": 2006,
      "subject": "Computer Organization And Architecture",
      "chapter": "Cache Memory",
      "question_type": "MCQ"
    },
    {
      "id": 6398,
      "question": "<p dir=\"ltr\"><span>A CPU has 24-bit instructions. A program starts at address 300 (in decimal). Which one of the following is a legal program counter (all values in decimal)?</span></p>",
      "answers": [
        {
          "id": 25721,
          "answer": "<p><span>400</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 25722,
          "answer": "<p><span>500</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 25723,
          "answer": "<p><span>600</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 25724,
          "answer": "<p><span>700</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Each address is multiple of 3 as the starting address is 300 and is each instruction consists of 24 bit, i.e., 3 byte.</span><br><span>Thus, in the given options the valid counter will be the one which is the multiple of 3. Out of the options we can see that only 600 satisfies the condition.</span><br><span>Therefore, it is 600.</span></p>",
      "created_on": "2014-01-21 - 04:55:18",
      "updated_on": "2025-06-25 - 17:32:21",
      "year": 2006,
      "subject": "Computer Organization And Architecture",
      "chapter": "Machine Instructions",
      "question_type": "MCQ"
    },
    {
      "id": 6412,
      "question": "<p dir=\"ltr\"><span>A CPU has a 32 KB direct mapped cache with 128-byte block size. Suppose A is a twodimensional array of size 512×512 with elements that occupy 8-bytes each. Consider the following two C code segments, P1 and P2. P1: </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=w> </span>\n<span class=k>for</span><span class=w> </span><span class=p>(</span><span class=n>i</span><span class=o>=</span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=o>&lt;</span><span class=mi>512</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=o>++</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=w>   </span><span class=k>for</span><span class=w> </span><span class=p>(</span><span class=n>j</span><span class=o>=</span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>j</span><span class=o>&lt;</span><span class=mi>512</span><span class=p>;</span><span class=w> </span><span class=n>j</span><span class=o>++</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=w>      </span><span class=n>x</span><span class=w> </span><span class=o>+=</span><span class=w> </span><span class=n>A</span><span class=p>[</span><span class=n>i</span><span class=p>][</span><span class=n>j</span><span class=p>];</span>\n<span class=w>   </span><span class=p>}</span>\n<span class=p>}</span><span class=w> </span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>P2: </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=w> </span>\n<span class=k>for</span><span class=w> </span><span class=p>(</span><span class=n>i</span><span class=o>=</span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=o>&lt;</span><span class=mi>512</span><span class=p>;</span><span class=w> </span><span class=n>i</span><span class=o>++</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=w>   </span><span class=k>for</span><span class=w> </span><span class=p>(</span><span class=n>j</span><span class=o>=</span><span class=mi>0</span><span class=p>;</span><span class=w> </span><span class=n>j</span><span class=o>&lt;</span><span class=mi>512</span><span class=p>;</span><span class=w> </span><span class=n>j</span><span class=o>++</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=w>      </span><span class=n>x</span><span class=w> </span><span class=o>+=</span><span class=w> </span><span class=n>A</span><span class=p>[</span><span class=n>j</span><span class=p>][</span><span class=n>i</span><span class=p>];</span>\n<span class=w>   </span><span class=p>}</span>\n<span class=p>}</span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>P1 and P2 are executed independently with the same initial state, namely, the array A is not in the cache and i, j, x are in registers. Let the number of cache misses experienced by P1 be M1 and that for P2 be M2 .  The value of the ratio M1/M2 is:</span></p>",
      "answers": [
        {
          "id": 25777,
          "answer": "<p><span>0</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 25778,
          "answer": "<p><span>1/16</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 25779,
          "answer": "<p><span>1/8</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 25780,
          "answer": "<p><span>16</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>[P2] runs the loops in a way that access elements of A in row major order and [P2] accesses elements in column major order. No of cache blocks = CacheSize/BlockSize = 32KB / 128 Byte = 256 No. of array elements in Each Block = BlockSize/ElementSize = 128 Byte / 8 Byte = 16  Total Misses for [P1] = ArraySize *  (No. of array elements in Each Block) / (No of cache blocks) = 512 * 512 * 16 / 256 = 16384   Total Misses for [P2] = Total Number of elements in array (For every element, there would be a miss)  = 512 * 512 = 262144.  Ration m1/m2 = 16384 / 262144 = 1/16.                  </span></p>",
      "created_on": "2014-01-21 - 04:55:18",
      "updated_on": "2025-06-25 - 17:21:23",
      "year": 2006,
      "subject": "Computer Organization And Architecture",
      "chapter": "Cache Memory",
      "question_type": "MCQ"
    },
    {
      "id": 6408,
      "question": "<p dir=\"ltr\"><span>A CPU has a five-stage pipeline and runs at 1 GHz frequency. Instruction fetch happens in the first stage of the pipeline. A conditional branch instruction</span><br><span>computes the target address and evaluates the condition in the third stage of the pipeline. The processor stops fetching new instructions following a conditional branch until the branch outcome is known. A program executes 10</span><sup><span>9</span></sup><span> instructions out of which 20% are conditional branches. If each instruction takes one cycle to complete on average, the total execution time of the program is:</span></p>",
      "answers": [
        {
          "id": 25761,
          "answer": "<p dir=\"ltr\"><span>1.0 second</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 25762,
          "answer": "<p dir=\"ltr\"><span>1.2 seconds</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 25763,
          "answer": "<p dir=\"ltr\"><span>1.4 seconds</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 25764,
          "answer": "<p dir=\"ltr\"><span>1.6 seconds</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>In the 3rd stage of pipeline, there will be 2 stall cycles i.e. 2 delay slots.</span><br><br><br><span>Total number of instructions = 10</span><sup><span>9</span></sup><br><br><br><span>20% out of 10</span><sup><span>9</span></sup><span> are conditional branches.</span><br><br><br><span>Therefore, Cycle penalty = 0.2 * 2 * 10</span><sup><span>9</span></sup><span> = 4 * 10</span><sup><span>9</span></sup><span> </span><br><br><br><span>Clock speed is 1 GHz and each instruction on average takes 1 cycle.</span><br><br><br><span>Total execution time = (10</span><sup><span>9</span></sup><span> / 10</span><sup><span>9</span></sup><span>) + 4 * (10</span><sup><span>8</span></sup><span> / 10</span><sup><span>9</span></sup><span>) </span><br><span>                     = 1.4 seconds</span><br><br><br><span>Thus, total execution time of the program is 1.4 seconds.</span><br></p>",
      "created_on": "2014-01-21 - 04:55:18",
      "updated_on": "2025-06-25 - 16:58:45",
      "year": 2006,
      "subject": "Computer Organization And Architecture",
      "chapter": "Pipelining",
      "question_type": "MCQ"
    },
    {
      "id": 6407,
      "question": "<p dir=\"ltr\"><span>A CPU has a cache with block size 64 bytes. The main memory has k banks, each bank being c bytes wide. Consecutive c − byte chunks are mapped on consecutive banks with wrap-around. All the k banks can be accessed in parallel, but two accesses to the same bank must be serialized. A cache block access may involve multiple iterations of parallel bank accesses depending on the amount of data obtained by accessing all the k banks in parallel. Each iteration requires decoding the bank numbers to be accessed in parallel and this takes. k/2 ns The latency of one bank access is 80 ns. If c = 2 and k = 24, the latency of retrieving a cache block starting at address zero from main memory is:</span></p>",
      "answers": [
        {
          "id": 25757,
          "answer": "<p dir=\"ltr\"><span>92 ns</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 25758,
          "answer": "<p dir=\"ltr\"><span>104 ns</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 25759,
          "answer": "<p dir=\"ltr\"><span>172 ns</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 25760,
          "answer": "<p dir=\"ltr\"><span>184 ns</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Size of cache block=64 B No. of main memory banks K=24 Size of each bank C=2 bytes i.e each bank in memory is 2 bytes and there are 24 such banks. So, in one iteration we can get 2*24 = 48 bytes and getting 64 bytes requires 2 iterations. So time taken for &nbsp;parallel access T=decoding time +latency time. T = (K/2)+latency = 12+80 = 92 ns But C=2 for accesses =2*92=184ns (since in each iteration we need to select the banks and the bank decoding time (k/2) is independent of the number of banks we are going to access)&nbsp;</span></p>",
      "created_on": "2014-01-21 - 04:55:18",
      "updated_on": "2025-06-25 - 16:57:43",
      "year": 2006,
      "subject": "Computer Organization And Architecture",
      "chapter": "Cache Memory",
      "question_type": "MCQ"
    },
    {
      "id": 6675,
      "question": "<p dir=\"ltr\"><span>Two computers C1 and C2 are configured as follows. C1 has IP address 203.197.2.53 and netmask 255.255.128.0. C2 has IP address 203.197.75.201 and netmask 255.255.192.0. which one of the following statements is true?</span></p>",
      "answers": [
        {
          "id": 26814,
          "answer": "<p dir=\"ltr\"><span>C1 and C2 both assume they are on the same network</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 26815,
          "answer": "<p dir=\"ltr\"><span>C2 assumes C1 is on same network, but C1 assumes C2 is on a different network</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 26816,
          "answer": "<p dir=\"ltr\"><span>C1 assumes C2 is on same network, but C2 assumes C1 is on a different network</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 26817,
          "answer": "<p dir=\"ltr\"><span>C1 and C2 both assume they are on different networks.</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span> Answer (C)</span></p><pre><span>Network Id of C1 = bitwise '&amp;' of IP of C1 and subnet mask of C1 </span><br><span>                 = (203.197.2.53) &amp; (255.255.128.0) </span><br><span>                 = 203.197.0.0</span><br><span>C1 sees network ID of C2 as bitwise '&amp;' of IP of C2 and subnet mask of C1 </span><br><span>                = (203.197.75.201) &amp; (255.255.128.0) </span><br><span>                = 203.197.0.0</span><br><span>which is same as Network Id of C1.</span><br><br><span>Network Id of C2 = bitwise '&amp;' of IP of C2 and subnet mask of C2</span><br><span>                 = (203.197.75.201) &amp; (255.255.192.0) </span><br><span>                 = 203.197.64.0</span><br><span>C2 sees network ID of C1 as bitwise '&amp;' of IP of C1 and subnet mask of C2</span><br><span>                = (203.197.2.53) &amp; (255.255.192.0) </span><br><span>                = 203.197.0.0</span><br><span>which is different from Network Id of C2.</span></pre><p dir=\"ltr\" style=\"text-align: left;\"><span>Therefore, C1 assumes C2 is on same network, but C2 assumes C1 is on a different network.&nbsp;</span><br><br><b><strong> </strong></b></p>",
      "created_on": "2014-01-21 - 07:17:32",
      "updated_on": "2025-06-25 - 17:16:23",
      "year": 2006,
      "subject": "Computer Networks",
      "chapter": "Cidr",
      "question_type": "MCQ"
    },
    {
      "id": 6607,
      "question": "<p dir=\"ltr\"><span>Station A needs to send a message consisting of 9 packets to Station B using a sliding window (window size 3) and go-back-n error control strategy. All packets are ready and immediately available for transmission. If every 5th packet that A transmits gets lost (but no acks from B ever get lost), then what is the number of packets that A will transmit for sending the message to B?</span></p>",
      "answers": [
        {
          "id": 26542,
          "answer": "<p><span>12</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 26543,
          "answer": "<p><span>14</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 26544,
          "answer": "<p><span>16</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 26545,
          "answer": "<p><span>18</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span> Answer (C) Total 16 packets are sent. See the following table for a sequence of events. Since&nbsp;go-back-n&nbsp;error control strategy is used, all packets after a lost packet are sent again.</span></p><pre><span>Sender      Receiver</span><br><span> 1            </span><br><span> 2            1</span><br><span> 3            2</span><br><span> 4            3</span><br><span> 5            4</span><br><span> 6           </span><br><span> 7            6</span><br><span>              7             </span><br><span>          [Timeout for 5] </span><br><br><span> 5</span><br><span> 6            5</span><br><span> 7            6</span><br><span> 8</span><br><span> 9           </span><br><span>              8</span><br><span>              9</span><br><span>          [Timeout for 7]</span><br><br><span> 7           </span><br><span> 8            7</span><br><span> 9            8</span><br><br><br><span>         [Timeout for 9]</span><br><span> 9           </span><br><span>              9 </span></pre>",
      "created_on": "2014-01-21 - 07:17:32",
      "updated_on": "2025-06-25 - 17:18:36",
      "year": 2006,
      "subject": "Computer Networks",
      "chapter": "Packet Switching",
      "question_type": "MCQ"
    },
    {
      "id": 6600,
      "question": "<p dir=\"ltr\"><span>For which one of the following reasons does Internet Protocol (IP) use the timeto- live (TTL) field in the IP datagram header</span></p>",
      "answers": [
        {
          "id": 26514,
          "answer": "<p dir=\"ltr\"><span>Ensure packets reach destination within that time</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 26515,
          "answer": "<p dir=\"ltr\"><span>Discard packets that reach later than that time</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 26516,
          "answer": "<p dir=\"ltr\"><span>Prevent packets from looping indefinitely</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 26517,
          "answer": "<p dir=\"ltr\"><span>Limit the time for which a packet gets queued in intermediate routers.</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>The TTL field in an IP packet header is decremented by one each time the packet passes through a router. If the TTL field reaches zero, the router discards the packet and sends an ICMP \"Time Exceeded\" message back to the sender. This prevents packets from circulating endlessly in the network due to routing loops or other issues.</span><br><span>So, the reason IP uses the TTL field is to \"Prevent packets from looping indefinitely.\"</span></p>",
      "created_on": "2014-01-21 - 07:17:32",
      "updated_on": "2025-06-25 - 17:19:57",
      "year": 2006,
      "subject": "Computer Networks",
      "chapter": "Ip Addressing",
      "question_type": "MCQ"
    },
    {
      "id": 6952,
      "question": "<p dir=\"ltr\"><span>A logical binary relation □ ,is defined as follows: </span><br/><span> </span></p><p dir=\"ltr\"><img alt=\"GATE2006_Q28\" height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_6952/536e5c80270db119-CigKUE7eVwgz0VRpHrrJny4aKiR9Gu.png\" width=\"inherit\"/></p><p dir=\"ltr\"><br/><br/><span>Let ~ be the unary negation (NOT) operator, with higher precedence than □. </span><br/><br/><span>Which one of the following is equivalent to A∧B ? </span></p><pre><b><strong>(A) </strong></b><span>(~A □ B)  </span><br/><b><strong>(B) </strong></b><span>~(A □ ~B) </span><br/><b><strong>(C) </strong></b><span>~(~A □ ~B)   </span><br/><b><strong>(D) </strong></b><span>~(~A □ B) </span></pre><p><br/><span> </span></p>",
      "answers": [
        {
          "id": 27926,
          "answer": "<p dir=\"ltr\"><span>C</span><br><span>&nbsp;</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 27927,
          "answer": "<p dir=\"ltr\"><span>D</span><br><span>&nbsp;</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 27928,
          "answer": "<p dir=\"ltr\"><span>B</span><br><span>&nbsp;</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 27929,
          "answer": "<p dir=\"ltr\"><span>A</span><br><span>&nbsp;</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>In A∧B, we have 3 entries as False, and one as True. In table, it is opposite case, so we have to negate A □ B, moreover, we want True only when both A and B are true, so in 3rd entry (which becomes true after negation), we want both true, so we have to negate A also.&nbsp;</span><br><span>So A ∧ B ≡ ~(~A □ B), so option (D) is correct.</span></p>",
      "created_on": "2014-01-22 - 18:55:12",
      "updated_on": "2025-06-25 - 17:10:45",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Logic",
      "question_type": "MCQ"
    },
    {
      "id": 6950,
      "question": "<p dir=\"ltr\"><span>Which one of the first order predicate calculus statements given below correctly express the following </span><br/><span>English statement? </span><br/><span> </span></p><pre><span>Tigers and lions attack if they are hungry or threatened. </span></pre><p><br/><span> </span></p><p><img alt=\"GATECS2006Q26\" height=\"inherit\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_6950/07a6e94780b4a5bf-x9YMXh0Ey6f3nz01F7idJdbbIaGWch.png\" width=\"inherit\"/></p><p><br/><span> </span></p>",
      "answers": [
        {
          "id": 27918,
          "answer": "<p dir=\"ltr\"><span>B</span><br><span>&nbsp;</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 27919,
          "answer": "<p dir=\"ltr\"><span>A</span><br><span>&nbsp;</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 27920,
          "answer": "<p dir=\"ltr\"><span>C</span><br><span>&nbsp;</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 27921,
          "answer": "<p dir=\"ltr\"><span>D</span><br><span>&nbsp;</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>The statement \"Tigers and lions attack if they are hungry or threatened\" means that if an animal is either tiger or lion, then if it is hungry or threatened, it will attack. So option (D) is correct.&nbsp;</span><br><span>Don't get confused by \"and\" between tigers and lions in the statement. This \"and\" doesn't mean that we will write \"tiger(x) ∧ lion(x) \", because that would have meant that an animal is both tiger and lion, which is not what we want.&nbsp;</span><br><br><br><span>&nbsp;</span></p>",
      "created_on": "2014-01-22 - 18:55:12",
      "updated_on": "2025-06-25 - 17:14:36",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Logic",
      "question_type": "MCQ"
    },
    {
      "id": 6951,
      "question": "<p dir=\"ltr\"><span>Consider the following propositional statements: P1 : ((A ∧ B) → C)) ≡ ((A → C) ∧ (B → C)) P2 : ((A ∨ B) → C)) ≡ ((A → C) ∨ (B → C)) Which one of the following is true?</span></p>",
      "answers": [
        {
          "id": 27922,
          "answer": "<p dir=\"ltr\"><span>P1 is a tautology, but not P2</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 27923,
          "answer": "<p dir=\"ltr\"><span>P2 is a tautology, but not P1</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 27924,
          "answer": "<p dir=\"ltr\"><span>P1 and P2 are both tautologies</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 27925,
          "answer": "<p dir=\"ltr\"><span>Both P1 and P2 are not tautologies</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>The easiest way to solve this question is by creating truth tables for the expressions given. Note that P1 will be a tautology if truth table for left expression is exactly same as truth table for right expression. Same holds for P2 also. &nbsp;</span></p><table><thead><tr><th><span>A</span></th><th><span>B</span></th><th><span>C</span></th><th><span>((A ∧ B) → C))</span></th><th><span>((A → C) ∧ (B → C))</span></th><th><span>((A ∨ B) → C))</span></th><th><span>((A → C) ∨ (B → C))</span></th></tr><tr><th><span>0</span></th><th><span>0</span></th><th><span>0</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th></tr><tr><th><span>0</span></th><th><span>0</span></th><th><span>1</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th></tr><tr><th><span>0</span></th><th><span>1</span></th><th><span>0</span></th><th><span>T</span></th><th><span>F</span></th><th><span>F</span></th><th><span>T</span></th></tr><tr><th><span>0</span></th><th><span>1</span></th><th><span>1</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th></tr><tr><th><span>1</span></th><th><span>0</span></th><th><span>0</span></th><th><span>T</span></th><th><span>F</span></th><th><span>F</span></th><th><span>T</span></th></tr><tr><th><span>1</span></th><th><span>0</span></th><th><span>1</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th></tr><tr><th><span>1</span></th><th><span>1</span></th><th><span>0</span></th><th><span>F</span></th><th><span>F</span></th><th><span>F</span></th><th><span>F</span></th></tr><tr><th><span>1</span></th><th><span>1</span></th><th><span>1</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th><th><span>T</span></th></tr></thead><tbody></tbody></table><p dir=\"ltr\"><span>So as we see from table, none of the P1 or P2 are tautologies, so option </span><b><strong>(D)</strong></b><span> is correct. </span></p>",
      "created_on": "2014-01-22 - 18:55:12",
      "updated_on": "2025-06-25 - 17:12:30",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Logic",
      "question_type": "MCQ"
    },
    {
      "id": 7246,
      "question": "<p dir=\"ltr\"><span>Consider the following code written in a pass-by-reference language like FORTRAN and these statements about the code. </span></p><pre><span>subroutine swap(ix,iy)</span><br><span>     it = ix</span><br><span>L1 : ix = iy</span><br><span>L2 : iy = it</span><br><span>end</span><br><span>  ia = 3</span><br><span>  ib = 8</span><br><span>  call swap (ia, 1b+5)</span><br><span>  print *, ia, ib</span><br><span>end </span></pre><p dir=\"ltr\"><span>  S1: The compiler will generate code to allocate a temporary nameless cell, initialize it to 13, and pass the address of the cell swap S2: On execution the code will generate a runtime error on line L1 S3: On execution the code will generate a runtime error on line L2 S4: The program will print 13 and 8 S5: The program will print 13 and -2 Exactly the following set of statement(s) is correct:</span></p>",
      "answers": [
        {
          "id": 29101,
          "answer": "<p dir=\"ltr\"><span> S1 and S2</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29102,
          "answer": "<p dir=\"ltr\"><span>S1 and S4</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 29103,
          "answer": "<p dir=\"ltr\"><span>S3</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29104,
          "answer": "<p dir=\"ltr\"><span>S1 and S5</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>&nbsp; Pass-by-reference nature of FORTRAN makes it pass pointers: </span></p><ol><li value=\"1\"><span>to bound cells to its subroutines, if they are already present</span></li><li value=\"2\"><span>to unnamed temporary cells later to be bound, if they are not there</span></li></ol><p dir=\"ltr\"><span>  Now let's analyse the given statements: </span></p><pre><span>(S1) Because the second argument is an expression, which could be evaluated </span><br><span>easily by compiler SDT rules to a value 13, compiler itself will generate code </span><br><span>to define and declare an unnamed temporary cell with value 13 and pass it to swap </span><br><span>subroutine. [CORRECT]</span><br><br><span>(S2) 'ix' and 'iy' are variables bound to valid mutable cells, thus there is no </span><br><span>reason to get a run time error on line L1. [INCORRECT]</span><br><br><span>(S3) Incorrect due to same reason as of S2 [INCORRECT]</span><br><br><span>(S4) Due to the pass-by-reference nature of the language, the cell bound to </span><br><span>variable 'ia' will get value 13 and the temporary unnamed cell which was allocated </span><br><span>and passed to the swap subroutine will get value 3. Seemingly, cell bound to variable</span><br><span> 'ib' is unchanged, thus printing 13 and 8 at the end of this routine. [CORRECT]</span><br><br><span>(S5) Incorrect due to same reason as of S4 [INCORRECT]</span><br></pre><p dir=\"ltr\"><span>\t\t  Hence, answer should be (B) S1 and S4  </span></p>",
      "created_on": "2014-01-22 - 20:51:51",
      "updated_on": "2025-06-25 - 17:09:45",
      "year": 2006,
      "subject": "Software Engineering",
      "chapter": null,
      "question_type": "MCQ"
    },
    {
      "id": 7395,
      "question": "<p dir=\"ltr\"><span>Consider the relation enrolled(student, course) in which (student, course) is the primary key, and the relation paid(student, amount), where student is the primary key. Assume no null values and no foreign keys or integrity constraints. Assume that amounts 6000, 7000, 8000, 9000 and 10000 were each paid by 20% of the students. Consider these query plans (Plan 1 on left, Plan 2 on right)  to \"list all courses taken by students who have paid more than x\". </span></p><img height=\"250\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_7395/a27ab0c640ae6c58-iYUgLtXJn64KElF6tJxnApbtHJ0cF7.png\" width=\"400\"/><p dir=\"ltr\"><span> A disk seek takes 4ms, disk data transfer bandwidth is 300 MB/s and checking a tuple to see if amount is greater than x takes 10 micro-seconds. Which of the following statements is correct?</span></p>",
      "answers": [
        {
          "id": 29694,
          "answer": "<p dir=\"ltr\"><span>Plan 1 and Plan 2 will not output identical row sets for all databases.</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29695,
          "answer": "<p dir=\"ltr\"><span>A course may be listed more than once in the output of Plan 1 for some databases</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29696,
          "answer": "<p dir=\"ltr\"><span>For x = 5000, Plan 1 executes faster than Plan 2 for all databases.</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 29697,
          "answer": "<p dir=\"ltr\"><span>For x = 9000, Plan I executes slower than Plan 2 for all databases.</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span> Answer (C) Assuming that large enough memory is available for all data needed. Both plans need to load both tables courses and enrolled. So disk access time is same for both plans. Plan 2 does lesser number of comparisons compared to plan 1. 1) Join operation will require more comparisons as the second table will have more rows in plan 2 compared to plan 1. 2) The joined table of two tables will have more rows, so more comparisons are needed to find amounts greater than x.&nbsp;</span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:24:21",
      "year": 2006,
      "subject": "Database Management System",
      "chapter": "Relational Algebra",
      "question_type": "MCQ"
    },
    {
      "id": 7388,
      "question": "<p dir=\"ltr\"><span>Consider the following recurrence:  </span></p><img alt=\"gate_2006_51\" height=\"46\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_7388/94815c3edd5385f8-MEdOQ3CaFhJObtrGMIPPtGsSg7weRk.gif\" width=\"329\"/><p dir=\"ltr\"><span>  Which one of the following is true?</span></p><p dir=\"ltr\"><span>  (A) T(n) =  </span></p>[Tex]\\\\theta[/Tex]<p dir=\"ltr\"><span>  (loglogn) </span></p><p dir=\"ltr\"><span>(B) T(n) =  </span></p>[Tex]\\\\theta[/Tex]<p dir=\"ltr\"><span>  (logn)</span></p><p dir=\"ltr\"><span> (C) T(n) =  </span></p>[Tex]\\\\theta[/Tex]<p dir=\"ltr\"><span> (sqrt(n)) (D) T(n) =  </span></p>[Tex]\\\\theta[/Tex]<p dir=\"ltr\"><span>  (n)</span></p>",
      "answers": [
        {
          "id": 29666,
          "answer": "<p dir=\"ltr\"><span>A</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29667,
          "answer": "<p dir=\"ltr\"><span>B</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 29668,
          "answer": "<p dir=\"ltr\"><span>C</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29669,
          "answer": "<p dir=\"ltr\"><span>D</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>&nbsp;</span><br><br><span>Background Required - Recurrence Solving using Substitution Method.</span><br><br><b><strong>Answer - B</strong></b><br><span>Unrolling the recursion,</span><br><br><span>T(n) &nbsp;= &nbsp;2T(n^(1/2)) + 1</span><br><span>=&nbsp; 2^2T(n^(1/4)) + 2</span><br><span>= 2^3T(n^(1/8)) + 3</span><br><span>.</span><br><span>.&nbsp;&nbsp;&nbsp; k &nbsp;steps</span><br><span>.</span><br><span>=&nbsp; 2^kT(n^(1/2k)) + k &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…………. (1)</span><br><br><span>Using the Base case,</span><br><br><span>n^(1/2k) = 2</span><br><span>Taking log on both sides</span><br><span>log2n = 2k</span><br><span>k = log2log2n</span><br><br><span>From (1),</span><br><br><span>T(n) = &nbsp;log2n &nbsp;+ &nbsp;log2log2n</span><br><span>= Theta(log2n)</span><br><br><b><strong>Here log2n : log(base 2) n</strong></b><br><br><br><br><span>&nbsp;</span><br><br><span>&nbsp;</span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:37:07",
      "year": 2006,
      "subject": "Algorithms",
      "chapter": "Recurrence",
      "question_type": "MCQ"
    },
    {
      "id": 7396,
      "question": "<p dir=\"ltr\"><span>The following functional dependencies are given: </span></p><pre><span>AB </span>[Tex]\\\\rightarrow[/Tex]<span>  CD, AF </span>[Tex]\\\\rightarrow[/Tex]<span>  D, DE </span>[Tex]\\\\rightarrow[/Tex]<span>  F, C </span>[Tex]\\\\rightarrow[/Tex]<span> G , F </span>[Tex]\\\\rightarrow[/Tex]<span>  E, G </span>[Tex]\\\\rightarrow[/Tex]<span>  A</span><br></pre><p dir=\"ltr\"><span> Which one of the following options is false?</span></p>",
      "answers": [
        {
          "id": 29698,
          "answer": "<p dir=\"ltr\"><span>CF+ = {ACDEFG}</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29699,
          "answer": "<p dir=\"ltr\"><span>BG+ = {ABCDG}</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29700,
          "answer": "<p dir=\"ltr\"><span>AF+ = {ACDEFG}</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 29701,
          "answer": "<p dir=\"ltr\"><span>AB+ = {ABCDG}</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Answer (C) Closure of AF or AF+ = {ADEF}, closure of AF doesn't contain C and G</span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:23:36",
      "year": 2006,
      "subject": "Database Management System",
      "chapter": "Functional Dependency",
      "question_type": "MCQ"
    },
    {
      "id": 7397,
      "question": "<p dir=\"ltr\"><span>The 2</span><sup><span>n</span></sup><span> vertices of a graph G corresponds to all subsets of a set of size n, for n &gt;= 6. Two vertices of G are adjacent if and only if the corresponding sets intersect in exactly two elements.</span><br><br><span>The maximum degree of a vertex in G is:</span></p>",
      "answers": [
        {
          "id": 29702,
          "answer": "<p dir=\"ltr\"><span>(n/2)C2 *2</span><sup><span>n/2</span></sup></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29703,
          "answer": "<p dir=\"ltr\"><span>2</span><sup><span>n-2</span></sup></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29704,
          "answer": "<p dir=\"ltr\"><span>2</span><sup><span>n-3</span></sup><span> *3</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 29705,
          "answer": "<p dir=\"ltr\"><span>2</span><sup><span>n-1</span></sup></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>max</span><sub><span>k</span></sub><span>(kC2*2</span><sup><span>(n−k)</span></sup><span>)=3C2*2</span><sup><span>(n−3)</span></sup><span>=3*2</span><sup><span>(n−3)</span></sup><span>. </span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:22:30",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Graph Theory",
      "question_type": "MCQ"
    },
    {
      "id": 7398,
      "question": "<p dir=\"ltr\"><span>A 3-ary max heap is like a binary max heap, but instead of 2 children, nodes have 3 children. A 3-ary heap can be represented by an array as follows: The root is stored in the first location, a[0], nodes in the next level, from left to right, is stored from a[1] to a[3]. The nodes from the second level of the tree from left to right are stored from a[4] location onward. An item x can be inserted into a 3-ary heap containing n items by placing x in the location a[n] and pushing it up the tree to satisfy the heap property.   Which one of the following is a valid sequence of elements in an array representing 3-ary max heap?</span></p>",
      "answers": [
        {
          "id": 29706,
          "answer": "<p><span>1, 3, 5, 6, 8, 9</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29707,
          "answer": "<p><span>9, 6, 3, 1, 8, 5</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29708,
          "answer": "<p><span>9, 3, 6, 8, 5, 1</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29709,
          "answer": "<p><span>9, 5, 6, 8, 3, 1</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Following 3-ary Max Heap can be constructed from sequence given option (D) </span></p><pre><span>                                      9</span><br><span>                                   /  |   \\\\</span><br><span>                                /     |     \\\\</span><br><span>                              5       6      8</span><br><span>                           /  |</span><br><span>                         /    |</span><br><span>                       3      1</span><br></pre>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:21:58",
      "year": 2006,
      "subject": "Data Structures",
      "chapter": "Binary Heap",
      "question_type": "MCQ"
    },
    {
      "id": 7399,
      "question": "<p dir=\"ltr\"><span>A 3-ary max heap is like a binary max heap, but instead of 2 children, nodes have 3 children. A 3-ary heap can be represented by an array as follows: The root is stored in the first location, a[0], nodes in the next level, from left to right, is stored from a[1] to a[3]. The nodes from the second level of the tree from left to right are stored from a[4] location onward. An item x can be inserted into a 3-ary heap containing n items by placing x in the location a[n] and pushing it up the tree to satisfy the heap property.  Suppose the elements 7, 2, 10 and 4 are inserted, in that order, into the valid 3- ary max heap found in the above question, Which one of the following is the sequence of items in the array representing the resultant heap? </span></p>",
      "answers": [
        {
          "id": 29710,
          "answer": "<p><span>10, 7, 9, 8, 3, 1, 5, 2, 6, 4</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 29711,
          "answer": "<p><span>10, 9, 8, 7, 6, 5, 4, 3, 2, 1</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29712,
          "answer": "<p><span>10, 9, 4, 5, 7, 6, 8, 2, 1, 3</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29713,
          "answer": "<p><span>10, 8, 6, 9, 7, 2, 3, 4, 1, 5</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>After insertion of 7 </span></p><pre><span>                                          9</span><br><span>                                      /   |   \\\\</span><br><span>                                    /     |     \\\\</span><br><span>                                  7       6       8</span><br><span>                               / | \\\\</span><br><span>                             /   |  \\\\</span><br><span>                            3    1    5    </span><br></pre><p dir=\"ltr\"><span> After insertion of 2  </span></p><pre><span>                                           9</span><br><span>                                      /    |   \\\\</span><br><span>                                    /      |     \\\\</span><br><span>                                  7        6       8</span><br><span>                               / | \\\\       /</span><br><span>                             /   |  \\\\     /</span><br><span>                            3    1    5  2</span><br></pre><p dir=\"ltr\"><span> After insertion of 10 </span></p><pre><span>                                 10</span><br><span>                             /    |   \\\\</span><br><span>                           /      |     \\\\</span><br><span>                        7         9       8</span><br><span>                    / | \\\\       / |</span><br><span>                  /   |  \\\\     /  |</span><br><span>                3    1    5  2    6</span><br></pre><p dir=\"ltr\"><span>  After insertion of 4  </span></p><pre><span>                                 10</span><br><span>                             /   |   \\\\</span><br><span>                           /     |     \\\\</span><br><span>                         7        9       8</span><br><span>                      / | \\\\      / | \\\\</span><br><span>                    /   |  \\\\    /  |   \\\\</span><br><span>                  3    1    5  2   6    4</span><br></pre>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:21:39",
      "year": 2006,
      "subject": "Data Structures",
      "chapter": "Binary Heaps",
      "question_type": "MCQ"
    },
    {
      "id": 7374,
      "question": "<p dir=\"ltr\"><span>Consider three CPU-intensive processes, which require 10, 20 and 30 time units and arrive at times 0, 2 and 6, respectively. How many context switches are needed if the operating system implements a shortest remaining time first scheduling algorithm? Do not count the context switches at time zero and at the end.</span></p>",
      "answers": [
        {
          "id": 29610,
          "answer": "<p><span>1</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29611,
          "answer": "<p><span>2</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 29612,
          "answer": "<p><span>3</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29613,
          "answer": "<p><span>4</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Solution:</span></p><ul><li value=\"1\"><span>0–10: P1 runs (no preemption).</span></li><li value=\"2\"><b><strong>t = 10:</strong></b><span> P1 finishes → switch to P2 (</span><b><strong>1st switch</strong></b><span>).</span></li><li value=\"3\"><span>10–30: P2 runs and finishes.</span></li><li value=\"4\"><b><strong>t = 30:</strong></b><span> P2 finishes → switch to P3 (</span><b><strong>2nd switch</strong></b><span>).</span></li><li value=\"5\"><span>30–60: P3 runs to completion.</span></li></ul>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-08-28 - 12:25:55",
      "year": 2006,
      "subject": "Operating System",
      "chapter": "CPU Scheduling",
      "question_type": "MCQ"
    },
    {
      "id": 7400,
      "question": "<p dir=\"ltr\"><span>Consider the following snapshot of a system running n processes. Process i is holding  Xi instances of a resource R, 1 &lt;= i &lt;= n. currently, all instances of R are occupied. Further, for all i, process i has placed a request for an additional Yi instances while holding the Xi instances it already has. There are exactly two processes p and q such that Yp = Yq = 0. Which one of the following can serve as a necessary condition to guarantee that the system is not approaching a deadlock? </span></p>",
      "answers": [
        {
          "id": 29714,
          "answer": "<p dir=\"ltr\"><span>min (Xp, Xq) &lt; max (Yk) where k != p and k != q</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29715,
          "answer": "<p dir=\"ltr\"><span>Xp + Xq &gt;= min (Yk) where k != p and k != q</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 29716,
          "answer": "<p dir=\"ltr\"><span> max (Xp, Xq) &gt; 1</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29717,
          "answer": "<p dir=\"ltr\"><span>min (Xp, Xq) &gt; 1</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><br><br><span>Deadlock refers to a specific condition when two or more processes are each waiting for another to release a resource, or more than two processes are waiting for resources.</span><br><br><b><strong>Solution:</strong></b><br><br><span>Necessary condition to guarantee no deadlock which means without satisfying this condition, no deadlock is possible. Both the process p and q have no additional requirement; they both can be finished releasing Xp + Xq resources without asking for any additional resource.</span><br><span>Using this, we can finish one more process only if condition B is satisfied. If the resources released by p and q are sufficient for another process waiting for Yk resources, then system is not approaching deadlock.</span><br><span>i.e Xp+Xq &gt; min (Yk) where k != p and k != q</span><br><br><span>Note: Option B just ensured that the system can proceed from the current state. It does not guarantee that there won’t be a deadlock before all processes are finished.</span><br><br></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:20:25",
      "year": 2006,
      "subject": "Operating System",
      "chapter": "Deadlock",
      "question_type": "MCQ"
    },
    {
      "id": 7379,
      "question": "<p dir=\"ltr\"><span>Which one of the following in place sorting algorithms needs the minimum number of swaps?</span></p>",
      "answers": [
        {
          "id": 29630,
          "answer": "<p dir=\"ltr\"><span>Quick sort</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29631,
          "answer": "<p dir=\"ltr\"><span>Insertion sort</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29632,
          "answer": "<p dir=\"ltr\"><span>Selection sort</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 29633,
          "answer": "<p dir=\"ltr\"><span>Heap sort</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Let's try to analyse the number of swaps in each of the given sorting algorithms. </span></p><p dir=\"ltr\"><b><strong>Quick sort</strong></b><span> – Worst Case input for maximum number of swaps will be already sorted array in decreasing order. Recurrence for Total number of swaps in this case : T(n) = T(n-1) + O(n) // O(n) swaps will occur in alternate calls to partition algorithm. = O(n2)</span></p><p dir=\"ltr\"><span> </span><b><strong>Insertion sort</strong></b><span> - Worst Case input for maximum number of swaps will be already sorted array in ascending order.When a new element is inserted into an already sorted array of k size, it can lead to k swaps (in case it is the smallest of all) in worst case. For n-1 iterations of insertion sort, total swaps will be O(n2).</span></p><p dir=\"ltr\"><span> </span><b><strong>Selection sort</strong></b><span> – There is no Worst case input for selection sort. Since it searches for the index of kth minimum element in kth iteration and then in one swap, it places that element into its correct position. For n-1 iterations of selection sort, it can have O(n) swaps. </span></p><p dir=\"ltr\"><b><strong>Heap sort </strong></b><span>– Total number of swaps in Heap sort can be O(nlogn) as after performing Build-heap which may require O(n) swaps, it performs n-1 extract-min operations resulting into O(nlogn) swaps.  </span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 16:38:49",
      "year": 2006,
      "subject": "Algorithms",
      "chapter": "Searching & Sorting",
      "question_type": "MCQ"
    },
    {
      "id": 7378,
      "question": "<p dir=\"ltr\"><span>A scheme for storing binary trees in an array X is as follows. Indexing of X starts at 1 instead of 0. the root is stored at X[1]. For a node stored at X[i], the left child, if any, is stored in X[2i] and the right child, if any, in X[2i+1]. To be able to store any binary tree on n vertices the minimum size of X should be.</span></p>",
      "answers": [
        {
          "id": 29626,
          "answer": "<p dir=\"ltr\"><span> log</span><sub><span>2</span></sub><span>n</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29627,
          "answer": "<p dir=\"ltr\"><span>n</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29628,
          "answer": "<p dir=\"ltr\"><span> 2n + 1</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29629,
          "answer": "<p dir=\"ltr\"><span> 2^n — 1</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span> Answer (D) For a right skewed binary tree, number of nodes will be 2^n - 1. For example, in below binary tree, node 'A' will be stored at index 1, 'B' at index 3, 'C' at index 7 and 'D' at index 15.</span></p><pre><span>A</span><br><span> \\</span><br><span>   \\</span><br><span>    B</span><br><span>      \\</span><br><span>        \\</span><br><span>         C</span><br><span>           \\</span><br><span>             \\</span><br><span>              D</span></pre>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 16:39:56",
      "year": 2006,
      "subject": "Data Structures",
      "chapter": "Trees",
      "question_type": "MCQ"
    },
    {
      "id": 7380,
      "question": "<p dir=\"ltr\"><span>Let S be an NP-complete problem and Q and R be two other problems not known to be in NP. Q is polynomial time reducible to S and S is polynomial-time reducible to R. Which one of the following statements is true?</span></p>",
      "answers": [
        {
          "id": 29634,
          "answer": "<p dir=\"ltr\"><span> R is NP-complete</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29635,
          "answer": "<p dir=\"ltr\"><span> R is NP-hard</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 29636,
          "answer": "<p dir=\"ltr\"><span> Q is NP-complete</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29637,
          "answer": "<p dir=\"ltr\"><span>Q is NP-hard</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span> Answer (B) </span></p><p dir=\"ltr\"><span>(A) Incorrect because R is not in NP. A NP Complete problem has to be in both NP and NP-hard. </span></p><p dir=\"ltr\"><span>(B) Correct because a NP Complete problem S is polynomial time educable to R. </span></p><p dir=\"ltr\"><span>(C) Incorrect because Q is not in NP. </span></p><p dir=\"ltr\"><span>(D) Incorrect because there is no NP-complete problem that is polynomial time Turing-reducible to Q.</span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 16:09:23",
      "year": 2006,
      "subject": "Software Engineering",
      "chapter": null,
      "question_type": "MCQ"
    },
    {
      "id": 7381,
      "question": "<p dir=\"ltr\"><span>An element in an array X is called a leader if it is greater than all elements to the right of it in X. The best algorithm to find all leaders in an array.</span></p>",
      "answers": [
        {
          "id": 29638,
          "answer": "<p dir=\"ltr\"><span>Solves it in linear time using a left to right pass of the array</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29639,
          "answer": "<p dir=\"ltr\"><span>Solves it in linear time using a right to left pass of the array</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 29640,
          "answer": "<p dir=\"ltr\"><span>Solves it using divide and conquer in time Theta(nlogn)</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29641,
          "answer": "<p dir=\"ltr\"><span>Solves it in time Theta(n^2)</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p><span> </span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 16:06:56",
      "year": 2006,
      "subject": "Algorithms",
      "chapter": "Complexity Analysis",
      "question_type": "MCQ"
    },
    {
      "id": 7382,
      "question": "<p dir=\"ltr\"><span>F is an n*n real matrix. b is an n*1 real vector. Suppose there are two n*1 vectors, u and v such that, u ≠ v and Fu = b, Fv = b. Which one of the following statements is false?</span></p>",
      "answers": [
        {
          "id": 29642,
          "answer": "<p dir=\"ltr\"><span>Determinant of F is zero. </span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29643,
          "answer": "<p dir=\"ltr\"><span>There are an infinite number of solutions to Fx = b  </span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29644,
          "answer": "<p dir=\"ltr\"><span>There is an x≠0 such that Fx = 0  </span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29645,
          "answer": "<p dir=\"ltr\"><span>F must have two identical rows </span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Since Fu = b, and also Fv = b, so we have (Fu - Fb) = 0 i.e. F(u-v) = 0. Since u≠v, F is a singular matrix i.e. its determinant is 0. Now for a singular matrix F, either Fx = b has no solution or infinitely many solutions, but as we are already given two solutions u and v for x, Fx = b has to have infinitely many solutions.</span><br><span>Moreover, by definition of singular matrix, there exists an x≠0 such that Fx = 0 .</span><br><span>So options (A), (B), and (C) are true. Option (D) is false because it may not be necessary that two rows are identical, instead, two columns can be identical and we can get F as singular matrix then.</span><br><span>So option (D) is correct answer. </span><br><span> </span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 16:06:24",
      "year": 2006,
      "subject": "Engineering Mathematics",
      "chapter": "Linear Algebra",
      "question_type": "MCQ"
    },
    {
      "id": 7383,
      "question": "<p dir=\"ltr\"><span>Let L1 be a regular language, L2 be a deterministic context-free language and L3 a recursively enumerable, but not recursive, language. Which one of the following statements is false?</span></p>",
      "answers": [
        {
          "id": 29646,
          "answer": "<p dir=\"ltr\"><span>L1 ∩ L2 is a deterministic CFL</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29647,
          "answer": "<p dir=\"ltr\"><span>L3 ∩ L1 is recursive</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 29648,
          "answer": "<p dir=\"ltr\"><span>L1 ∪ L2 is context free</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29649,
          "answer": "<p dir=\"ltr\"><span>L1 ∩ L2 ∩ L3 is recursively enumerable</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><br><span>(A) This statement is true because deterministic context free languages are closed under intersection with regular languages.&nbsp;</span><br><span>(B) This statement is false because L1 is recursive and every recursive language is decidable. L3 is recursively enumerable but not recursive. So, L3 is undecidable. Intersection of recursive language and recursive enumerable language is recursively enumerable .&nbsp;</span><br><span>(C) This statement is true because L1 is regular. Every regular language is also a context free languages. L2 is a deterministic context free language and every DCFL is also a context free languages. Every context free language is closed under Union.&nbsp;</span><br><span>(D) This statement is true because L1 is regular hence it is also recursively enumerable. L2 is deterministic context free language so, it is also recursively enumerable . Recursively enumerable languages are closed under intersection.&nbsp;</span><br><br><span>&nbsp;</span><br><span>Thus, problem mentioned in option (A) is undecidable.&nbsp;</span><br><span>&nbsp;</span><br><span> </span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:45:40",
      "year": 2006,
      "subject": "Theory Of Computation",
      "chapter": "Context Free Grammar",
      "question_type": "MCQ"
    },
    {
      "id": 7384,
      "question": "<p dir=\"ltr\"><span>Consider a new instruction named branch-on-bit-set (mnemonic bbs). The instruction “bbs reg, pos, label” jumps to label if bit in position pos of register operand reg is one. A register is 32 bits wide and the bits are numbered 0 to 31, bit in position 0 being the least significant. Consider the following emulation of this instruction on a processor that does not have bbs implemented. temp¬reg &amp; mask Branch to label if temp is non-zero. The variable temp is a temporary register. For correct emulation, the variable mask must be generated by:</span></p>",
      "answers": [
        {
          "id": 29650,
          "answer": "<p dir=\"ltr\"><span> mask ← 0 x 1 ο pos</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 29651,
          "answer": "<p dir=\"ltr\"><span>mask ← 0 x ffffffff ο  pos</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29652,
          "answer": "<p dir=\"ltr\"><span>mask ← pos</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29653,
          "answer": "<p dir=\"ltr\"><span>mask ← 0 × f</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p><br></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:44:51",
      "year": 2006,
      "subject": "Software Engineering",
      "chapter": null,
      "question_type": "MCQ"
    },
    {
      "id": 7377,
      "question": "<p dir=\"ltr\"><span>To implement Dijkstra’s shortest path algorithm on unweighted graphs so that it runs in linear time, the data structure to be used is:</span></p>",
      "answers": [
        {
          "id": 29622,
          "answer": "<p dir=\"ltr\"><span>Queue</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 29623,
          "answer": "<p dir=\"ltr\"><span>Stack</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29624,
          "answer": "<p dir=\"ltr\"><span>Heap</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29625,
          "answer": "<p dir=\"ltr\"><span>B-Tree</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span> Answer(A) The shortest path in an un-weighted graph means the smallest number of edges that must be traversed in order to reach the destination in the graph. This is the same problem as solving the weighted version where all the weights happen to be 1. If we use Queue (FIFO) instead of Priority Queue (Min Heap), we get the shortest path in linear time O(|V| + |E|).</span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 16:41:17",
      "year": 2006,
      "subject": "Algorithms",
      "chapter": "Graphs",
      "question_type": "MCQ"
    },
    {
      "id": 7385,
      "question": "<p dir=\"ltr\"><span>Consider the following graph:</span><br/><img alt=\"gate_2006\" height=\"277\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_7385/7ce9f4426b848cd5-QrELP4LzH1PikKgATX4Or6mD8O5ITe.gif\" width=\"608\"/><br/><span>Which one of the following cannot be the sequence of edges added, in that order, to a minimum spanning tree using Kruskal’s algorithm?</span><br/></p>",
      "answers": [
        {
          "id": 29654,
          "answer": "<p dir=\"ltr\"><span>(a—b),(d—f),(b—f),(d—c),(d—e)</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29655,
          "answer": "<p dir=\"ltr\"><span>(a—b),(d—f),(d—c),(b—f),(d—e)</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29656,
          "answer": "<p dir=\"ltr\"><span>(d—f),(a—b),(d—c),(b—f),(d—e)</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29657,
          "answer": "<p dir=\"ltr\"><span>(d—f),(a—b),(b—f),(d—e),(d—c)</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>The edge (d-e) cannot be considered before (d-c) in  Kruskal's minimum spanning tree algorithm because Kruskal’s algorithm picks the edge with minimum weight from the current set of edges at each step.</span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:44:01",
      "year": 2006,
      "subject": "Algorithms",
      "chapter": "Graphs",
      "question_type": "MCQ"
    },
    {
      "id": 7376,
      "question": "<p dir=\"ltr\"><span>Consider a weighted complete graph G on the vertex set {v1, v2, ..vn} such that the weight of the edge (vi, vj) is 2|i-j|. The weight of a minimum spanning tree of G is: (GATE CS 2006)</span></p>",
      "answers": [
        {
          "id": 29618,
          "answer": "<p dir=\"ltr\"><span>n — 1</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29619,
          "answer": "<p dir=\"ltr\"><span> 2n — 2</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 29620,
          "answer": "<p dir=\"ltr\"><span> nC2</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29621,
          "answer": "<p><span>2</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span> Answer (B) Minimum spanning tree of such a graph is</span></p><pre><span>v1</span><br><span>  \\</span><br><span>    v2</span><br><span>      \\</span><br><span>       v3</span><br><span>         \\</span><br><span>          v4</span><br><span>            .</span><br><span>              .</span><br><span>                .</span><br><span>                 vn</span><br><span> </span></pre><p dir=\"ltr\"><span>Weight of the minimum spanning tree = 2|2 - 1| + 2|3 - 2| + 2|4 - 3| + 2|5 - 4| .... + 2| n - (n-1) | = 2n - 2</span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 16:42:42",
      "year": 2006,
      "subject": "Algorithms",
      "chapter": "Graphs",
      "question_type": "MCQ"
    },
    {
      "id": 7386,
      "question": "<p dir=\"ltr\"><span>An implementation of a queue Q, using two stacks S1 and S2, is given below:  </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=kt>void</span><span class=w> </span><span class=nf>insert</span><span class=p>(</span><span class=n>Q</span><span class=p>,</span><span class=w> </span><span class=n>x</span><span class=p>)</span><span class=w> </span><span class=p>{</span>\n<span class=w>   </span><span class=n>push</span><span class=w> </span><span class=p>(</span><span class=n>S1</span><span class=p>,</span><span class=w> </span><span class=n>x</span><span class=p>);</span>\n<span class=p>}</span>\n<span class=w> </span>\n<span class=kt>void</span><span class=w> </span><span class=nf>delete</span><span class=p>(</span><span class=n>Q</span><span class=p>){</span>\n<span class=w>   </span><span class=k>if</span><span class=p>(</span><span class=n>stack</span><span class=o>-</span><span class=n>empty</span><span class=p>(</span><span class=n>S2</span><span class=p>))</span><span class=w> </span><span class=n>then</span><span class=w> </span>\n<span class=w>      </span><span class=k>if</span><span class=p>(</span><span class=n>stack</span><span class=o>-</span><span class=n>empty</span><span class=p>(</span><span class=n>S1</span><span class=p>))</span><span class=w> </span><span class=n>then</span><span class=w> </span><span class=p>{</span>\n<span class=w>          </span><span class=n>print</span><span class=p>(</span><span class=err>“</span><span class=n>Q</span><span class=w> </span><span class=n>is</span><span class=w> </span><span class=n>empty</span><span class=err>”</span><span class=p>);</span>\n<span class=w>          </span><span class=k>return</span><span class=p>;</span>\n<span class=w>      </span><span class=p>}</span>\n<span class=w>      </span><span class=k>else</span><span class=w> </span><span class=k>while</span><span class=w> </span><span class=p>(</span><span class=o>!</span><span class=p>(</span><span class=n>stack</span><span class=o>-</span><span class=n>empty</span><span class=p>(</span><span class=n>S1</span><span class=p>))){</span>\n<span class=w>          </span><span class=n>x</span><span class=o>=</span><span class=n>pop</span><span class=p>(</span><span class=n>S1</span><span class=p>);</span>\n<span class=w>          </span><span class=n>push</span><span class=p>(</span><span class=n>S2</span><span class=p>,</span><span class=n>x</span><span class=p>);</span>\n<span class=w>      </span><span class=p>}</span>\n<span class=w>   </span><span class=n>x</span><span class=o>=</span><span class=n>pop</span><span class=p>(</span><span class=n>S2</span><span class=p>);</span>\n<span class=p>}</span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>Let n insert and m (&lt;=n) delete operations be performed in an arbitrary order on an empty queue Q. Let x and y be the number of push and pop operations performed respectively in the process. Which one of the following is true for all m and n?</span></p>",
      "answers": [
        {
          "id": 29658,
          "answer": "<p dir=\"ltr\"><span>n+m &lt;= x &lt; 2n and 2m &lt;= y &lt;= n+m</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 29659,
          "answer": "<p dir=\"ltr\"><span> n+m &lt;= x &lt; 2n and 2m&lt;= y &lt;= 2n</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29660,
          "answer": "<p dir=\"ltr\"><span>2m &lt;= x &lt; 2n and 2m &lt;= y &lt;= n+m</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29661,
          "answer": "<p dir=\"ltr\"><span>2m &lt;= x &lt;2n and 2m &lt;= y &lt;= 2n</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p><span> </span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:42:32",
      "year": 2006,
      "subject": "Data Structures",
      "chapter": "Stacks & Queues",
      "question_type": "MCQ"
    },
    {
      "id": 7387,
      "question": "<p dir=\"ltr\"><span>A set X can be represented by an array x[n] as follows: </span></p><p dir=\"ltr\"><br/></p><img alt=\"gate_2006_50\" height=\"52\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_7387/1b369dd60e4baccc-ud2TXDYaDUIsYS7EF3JQ241U3PUptA.gif\" width=\"170\"/><p dir=\"ltr\"><span>  Consider the following algorithm in which x,y and z are Boolean arrays of size n: </span></p><gfg-tabs data-run-ide=\"false\">\n<gfg-tab slot=\"tab\">C</gfg-tab>\n<gfg-panel data-code-lang=\"c\" slot=\"panel\">\n<code class=\"language-c\"><div class=\"highlight\"><pre><span></span><span class=\"n\">algorithm</span><span class=\"w\"> </span><span class=\"nf\">zzz</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"p\">[])</span>\n<span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">O</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"w\">     </span><span class=\"n\">z</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">~</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n<span class=\"p\">}</span>\n</pre></div></code>\n</gfg-panel>\n</gfg-tabs><p dir=\"ltr\"><span>The set Z computed by the algorithm is:</span></p>",
      "answers": [
        {
          "id": 29662,
          "answer": "<p dir=\"ltr\"><span> (X ∩ Y)</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29663,
          "answer": "<p dir=\"ltr\"><span> (X ∪ Y)</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29664,
          "answer": "<p dir=\"ltr\"><span>(X-Y) ∩ (Y-X)</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29665,
          "answer": "<p dir=\"ltr\"><span>(X-Y) ∪ (Y-X)</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p><span> </span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:41:15",
      "year": 2006,
      "subject": "Discrete Mathematics",
      "chapter": "Set Theory",
      "question_type": "MCQ"
    },
    {
      "id": 7394,
      "question": "<p dir=\"ltr\"><span>Consider three processes, all arriving at time zero, with total execution time of 10, 20 and 30 units,  respectively. Each process spends the first 20% of execution time doing I/O, the next 70% of time doing  computation, and the last 10% of time doing I/O again. The operating system uses a shortest remaining compute time first scheduling algorithm and schedules a new process either when the running process gets blocked on I/O or when the running process finishes its compute burst. Assume that all I/O operations can be overlapped as much as possible. For what percentage of time does the CPU remain idle? </span></p>",
      "answers": [
        {
          "id": 29690,
          "answer": "<p><span>0%</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29691,
          "answer": "<p><span>10.6%</span></p>",
          "correct": true,
          "sort_order": 1
        },
        {
          "id": 29692,
          "answer": "<p><span>30.0%</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29693,
          "answer": "<p><span> 89.4%</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>  Shortest remaining time ( SRT ) scheduling algorithm selects the process for execution which has the smallest amount of time remaining until completion.  Let three processes be p0, p1 and p2. Their execution time is 10, 20 and 30 respectively.  p0 spends first 2 time units in I/O, 7 units of CPU time and finally 1 unit in I/O. p1 spends first 4 units in I/O, 14 units of CPU time and finally 2 units in I/O. p2 spends first 6 units in I/O, 21 units of CPU time and finally 3 units in I/O.   </span></p><table><thead><tr><th style=\"text-align: center;\"><span>PID</span></th><th style=\"text-align: center;\"><span>AT</span></th><th style=\"text-align: center;\"><span>IO</span></th><th style=\"text-align: center;\"><span>BT</span></th><th style=\"text-align: center;\"><span>IO</span></th></tr></thead><tbody><tr><td style=\"text-align: center;\"><span>P0</span></td><td style=\"text-align: center;\"><span>0</span></td><td style=\"text-align: center;\"><span>2</span></td><td style=\"text-align: center;\"><span>7</span></td><td style=\"text-align: center;\"><span>1</span></td></tr><tr><td style=\"text-align: center;\"><span>P1</span></td><td style=\"text-align: center;\"><span>0</span></td><td style=\"text-align: center;\"><span>4</span></td><td style=\"text-align: center;\"><span>14</span></td><td style=\"text-align: center;\"><span>2</span></td></tr><tr><td style=\"text-align: center;\"><span>P2</span></td><td style=\"text-align: center;\"><span>0</span></td><td style=\"text-align: center;\"><span>6</span></td><td style=\"text-align: center;\"><span>21</span></td><td style=\"text-align: center;\"><span>3</span></td></tr></tbody></table><p dir=\"ltr\"><span> AT- Arrival Time, IO-input/output, BT-Burst Time  first process p0 will spend 2 units in IO, next 7 units in BT, then process p1 will spend 14 units in BT (as its 4 units of IO has been spent already when previous process was running) and ten process p2 will spend 21 units in BT (as its 6 units of IO has been spent already when previous processes were running) and atlast 3 units in IO (process p0,p1,p2’s last IO included.)  </span></p><pre><span>idle   p0    p1     p2    idle</span><br><span>0    2     9     23     44     47</span><br><br><span>Total time spent = 47</span><br><span>Idle time = 2 + 3 = 5</span><br><span>Percentage of idle time = (5/47)*100 = 10.6 %</span><br></pre><p><br></p><p dir=\"ltr\"><br></p><p><br></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:30:37",
      "year": 2006,
      "subject": "Operating System",
      "chapter": "CPU Scheduling",
      "question_type": "MCQ"
    },
    {
      "id": 7389,
      "question": "<p dir=\"ltr\"><span>Suppose we have a O(n) time algorithm that finds median of an unsorted array.    Now consider a QuickSort implementation where we first find median using the above algorithm, then use median as pivot.  What will be the worst case time complexity of this modified QuickSort.</span></p>",
      "answers": [
        {
          "id": 29670,
          "answer": "<p dir=\"ltr\"><span>O(n^2 Logn)</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29671,
          "answer": "<p dir=\"ltr\"><span>O(n^2)</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29672,
          "answer": "<p dir=\"ltr\"><span>O(n Logn Logn)</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29673,
          "answer": "<p dir=\"ltr\"><span>O(nLogn)</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><br><br><span>When we choose median as pivot element then after the partition algorithm it will go in the middle of the array having half of the elements to left the left and half in the right.</span><br><span>Thus after partition algorithm the array will be divided into two equal parts of n/2 elements each.</span><br><span>Hence the resultant recurrence relation would be-</span><br><span>T(n) = O(n) (for selecting median) + O(n) (for partition) + T(n/2) + T(n/2)</span><br><span>T(n) = O(n) + 2T(n/2)</span><br><span>We can solve the above recurrence relation using master method</span><br><br><span> </span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:34:11",
      "year": 2006,
      "subject": "Algorithms",
      "chapter": "Complexity Analysis",
      "question_type": "MCQ"
    },
    {
      "id": 7390,
      "question": "<p dir=\"ltr\"><span>Consider the following C-function in which a[n] and b[m] are two sorted integer arrays and c[n + m] be another integer array.&nbsp;</span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=kt>void</span><span class=w> </span><span class=nf>xyz</span><span class=p>(</span><span class=kt>int</span><span class=w> </span><span class=n>a</span><span class=p>[],</span><span class=w> </span><span class=kt>int</span><span class=w> </span><span class=n>b</span><span class=w> </span><span class=p>[],</span><span class=w> </span><span class=kt>int</span><span class=w> </span><span class=n>c</span><span class=p>[])</span>\n<span class=p>{</span>\n<span class=w>  </span><span class=kt>int</span><span class=w> </span><span class=n>i</span><span class=p>,</span><span class=w> </span><span class=n>j</span><span class=p>,</span><span class=w> </span><span class=n>k</span><span class=p>;</span>\n<span class=w>  </span><span class=n>i</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>j</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>k</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>O</span><span class=p>;</span>\n<span class=w>  </span><span class=k>while</span><span class=w> </span><span class=p>((</span><span class=n>i</span><span class=o>&lt;</span><span class=n>n</span><span class=p>)</span><span class=w> </span><span class=o>&amp;&amp;</span><span class=w> </span><span class=p>(</span><span class=n>j</span><span class=o>&lt;</span><span class=n>m</span><span class=p>))</span>\n<span class=w>     </span><span class=k>if</span><span class=w> </span><span class=p>(</span><span class=n>a</span><span class=p>[</span><span class=n>i</span><span class=p>]</span><span class=w> </span><span class=o>&lt;</span><span class=w> </span><span class=n>b</span><span class=p>[</span><span class=n>j</span><span class=p>])</span><span class=w> </span><span class=n>c</span><span class=p>[</span><span class=n>k</span><span class=o>++</span><span class=p>]</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>a</span><span class=p>[</span><span class=n>i</span><span class=o>++</span><span class=p>];</span>\n<span class=w>     </span><span class=k>else</span><span class=w> </span><span class=n>c</span><span class=p>[</span><span class=n>k</span><span class=o>++</span><span class=p>]</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>b</span><span class=p>[</span><span class=n>j</span><span class=o>++</span><span class=p>];</span>\n<span class=p>}</span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>Which of the following condition(s) hold(s) after the termination of the while loop?  (i) j &lt; m, k = n+j-1, and a[n-1] &lt; b[j] if i = n </span></p><p dir=\"ltr\"><span>(ii) i &lt; n, k = m+i-1, and b[m-1] &lt;= a[i] if j = m</span></p>",
      "answers": [
        {
          "id": 29674,
          "answer": "<p dir=\"ltr\"><span>only (i)</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29675,
          "answer": "<p dir=\"ltr\"><span>only (ii)</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29676,
          "answer": "<p dir=\"ltr\"><span>either (i) or (ii) but not both</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29677,
          "answer": "<p dir=\"ltr\"><span>neither (i) nor (ii)</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>The function xyz() is similar to merge() of mergeSort().Both the conditions (i) and (ii) are false in the sections k = n+j-1 and k = m+i-1 respectively.</span></p><p dir=\"ltr\"><span>The while loop adds elements from a and b (whichever is smaller) to c and terminates when either of them exhausts. So, when the loop terminates either i=n or j=m.</span></p><p dir=\"ltr\"><span>Suppose i=n. This would mean all elements from array a are added to c=&gt;k must be incremented by n. c would also contain j elements from array b. So, the number of elements in c would be n+j and hence k=n+j.</span></p><p dir=\"ltr\"><span>Similarly, when j=m, k=m+i.</span></p><p dir=\"ltr\"><span>Hence, the option (D) is correct. (Had k started from −1 and not 0 and we used ++k inside the loop, the answer would have been option (C))</span></p><p dir=\"ltr\"><br></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:35:09",
      "year": 2006,
      "subject": "C Programming",
      "chapter": "Functions",
      "question_type": "MCQ"
    },
    {
      "id": 7391,
      "question": "<p dir=\"ltr\"><span>Consider these two functions and two statements S1 and S2 about them  </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=kt>int</span><span class=w> </span><span class=nf>work1</span><span class=p>(</span><span class=kt>int</span><span class=w> </span><span class=o>*</span><span class=n>a</span><span class=p>,</span><span class=w> </span><span class=kt>int</span><span class=w> </span><span class=n>i</span><span class=p>,</span><span class=w> </span><span class=kt>int</span><span class=w> </span><span class=n>j</span><span class=p>)</span>\n<span class=p>{</span>\n<span class=w>    </span><span class=kt>int</span><span class=w> </span><span class=n>x</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>a</span><span class=p>[</span><span class=n>i</span><span class=o>+</span><span class=mi>2</span><span class=p>];</span>\n<span class=w>    </span><span class=n>a</span><span class=p>[</span><span class=n>j</span><span class=p>]</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>x</span><span class=o>+</span><span class=mi>1</span><span class=p>;</span>\n<span class=w>    </span><span class=k>return</span><span class=w> </span><span class=n>a</span><span class=p>[</span><span class=n>i</span><span class=o>+</span><span class=mi>2</span><span class=p>]</span><span class=w> </span><span class=err>–</span><span class=w> </span><span class=mi>3</span><span class=p>;</span>\n<span class=p>}</span>\n\n<span class=kt>int</span><span class=w> </span><span class=nf>work2</span><span class=p>(</span><span class=kt>int</span><span class=w> </span><span class=o>*</span><span class=n>a</span><span class=p>,</span><span class=w> </span><span class=kt>int</span><span class=w> </span><span class=n>i</span><span class=p>,</span><span class=w> </span><span class=kt>int</span><span class=w> </span><span class=n>j</span><span class=p>)</span>\n<span class=p>{</span>\n<span class=w>    </span><span class=kt>int</span><span class=w> </span><span class=n>t1</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>i</span><span class=o>+</span><span class=mi>2</span><span class=p>;</span>\n<span class=w>    </span><span class=kt>int</span><span class=w> </span><span class=n>t2</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>a</span><span class=p>[</span><span class=n>t1</span><span class=p>];</span>\n<span class=w>    </span><span class=n>a</span><span class=p>[</span><span class=n>j</span><span class=p>]</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=n>t2</span><span class=o>+</span><span class=mi>1</span><span class=p>;</span>\n<span class=w>    </span><span class=k>return</span><span class=w> </span><span class=n>t2</span><span class=w> </span><span class=err>–</span><span class=w> </span><span class=mi>3</span><span class=p>;</span>\n<span class=p>}</span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><b><strong>S1:</strong></b></p><p dir=\"ltr\"><span> The transformation form work1 to work2 is valid, i.e., for any program state and input arguments, work2 will compute the same output and have the same effect on program state as work1 </span></p><p dir=\"ltr\"><b><strong>S2:</strong></b></p><p dir=\"ltr\"><span> All the transformations applied to work1 to get work2 will always improve the performance (i.e reduce CPU time) of work2 compared to work1</span></p>",
      "answers": [
        {
          "id": 29678,
          "answer": "<p dir=\"ltr\"><span>S1 is false and S2 is false </span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 29679,
          "answer": "<p dir=\"ltr\"><span>S1 is false and S2 is true</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29680,
          "answer": "<p dir=\"ltr\"><span>S1 is true and S2 is false</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29681,
          "answer": "<p dir=\"ltr\"><span>S1 is true and S2 is true</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>(S1): Take an counter example, Array = [1, 2, 3, 4, 5] and i = 0. Let j = (i+2), so j = (0+2) = 2. For this example work1 and work2 will return 1 and 0 respectively. So, statement is false.  (S2): We can not compare given program on basis of runtime. We can not say the performance of work2 will always be better than work1 for any inputs. So, statement is false.  Option (A) is correct.</span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:32:33",
      "year": 2006,
      "subject": "C Programming",
      "chapter": "Pointers",
      "question_type": "MCQ"
    },
    {
      "id": 7392,
      "question": "<p dir=\"ltr\"><span>Consider this C code to swap two integers and these five statements after it:  </span></p><gfg-tabs data-run-ide=\"false\">\n        <gfg-tab slot=\"tab\">C</gfg-tab>\n        <gfg-panel slot=\"panel\" data-code-lang=\"c\">\n        <code class=\"language-c\"><div class=highlight><pre><span></span><span class=kt>void</span><span class=w> </span><span class=nf>swap</span><span class=p>(</span><span class=kt>int</span><span class=w> </span><span class=o>*</span><span class=n>px</span><span class=p>,</span><span class=w> </span><span class=kt>int</span><span class=w> </span><span class=o>*</span><span class=n>py</span><span class=p>)</span><span class=w> </span>\n<span class=p>{</span><span class=w> </span>\n<span class=w>   </span><span class=o>*</span><span class=n>px</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=o>*</span><span class=n>px</span><span class=w> </span><span class=o>-</span><span class=w> </span><span class=o>*</span><span class=n>py</span><span class=p>;</span><span class=w> </span>\n<span class=w>   </span><span class=o>*</span><span class=n>py</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=o>*</span><span class=n>px</span><span class=w> </span><span class=o>+</span><span class=w> </span><span class=o>*</span><span class=n>py</span><span class=p>;</span><span class=w> </span>\n<span class=w>   </span><span class=o>*</span><span class=n>px</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=o>*</span><span class=n>py</span><span class=w> </span><span class=o>-</span><span class=w> </span><span class=o>*</span><span class=n>px</span><span class=p>;</span><span class=w> </span>\n<span class=p>}</span>\n</pre></div></code>\n        </gfg-panel>\n    </gfg-tabs><p dir=\"ltr\"><span>S1: will generate a compilation error S2: may generate a segmentation fault at runtime depending on the arguments passed S3: correctly implements the swap procedure for all input pointers referring to integers stored in memory locations accessible to the process S4: implements the swap procedure correctly for some but not all valid input pointers S5: may add or subtract integers and pointers. </span></p>",
      "answers": [
        {
          "id": 29682,
          "answer": "<p dir=\"ltr\"><span>S1</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 29683,
          "answer": "<p dir=\"ltr\"><span>S2 and S3</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29684,
          "answer": "<p dir=\"ltr\"><span>S2 and S4</span></p>",
          "correct": true,
          "sort_order": 2
        },
        {
          "id": 29685,
          "answer": "<p dir=\"ltr\"><span>S2 and S5</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span> S2: May generate segmentation fault if value at pointers px or py is constant or px or py points to a memory location that is invalid S4: May not work for all inputs as arithmetic overflow can occur.</span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:32:01",
      "year": 2006,
      "subject": "C Programming",
      "chapter": "Pointers",
      "question_type": "MCQ"
    },
    {
      "id": 7375,
      "question": "<p dir=\"ltr\"><span>In a binary max heap containing n numbers, the smallest element can be found in time </span></p>",
      "answers": [
        {
          "id": 29614,
          "answer": "<p dir=\"ltr\"><span>O(n) </span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 29615,
          "answer": "<p dir=\"ltr\"><span>O(Logn) </span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29616,
          "answer": "<p dir=\"ltr\"><span>O(LogLogn) </span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29617,
          "answer": "<p dir=\"ltr\"><span>O(1) </span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Answer (A) In a max heap, the smallest element is always present at a leaf node. So we need to check for all leaf nodes for the minimum value. Worst case complexity will be O(n)</span></p><pre><span>         12</span><br><span>        /  \\</span><br><span>      /      \\</span><br><span>    8         7</span><br><span>   / \\        / \\</span><br><span> /     \\    /     \\</span><br><span>2      3   4       5</span></pre>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 16:43:48",
      "year": 2006,
      "subject": "Algorithms",
      "chapter": "Complexity Analysis",
      "question_type": "MCQ"
    },
    {
      "id": 7393,
      "question": "<p dir=\"ltr\"><span>Consider three processes (process id 0, 1, 2 respectively) with compute time bursts 2, 4 and 8 time units. All processes arrive at time zero. Consider the longest remaining time first (LRTF) scheduling algorithm. In LRTF ties are broken by giving priority to the process with the lowest process id. The average turn around time is:</span></p>",
      "answers": [
        {
          "id": 29686,
          "answer": "<p dir=\"ltr\"><span>13 units</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 29687,
          "answer": "<p dir=\"ltr\"><span>14 units</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 29688,
          "answer": "<p dir=\"ltr\"><span>15 units</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 29689,
          "answer": "<p dir=\"ltr\"><span>16 units</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><b><strong>Background Explanation:</strong></b></p><p dir=\"ltr\"><span> Turn around time of a process is total time between submission of the process and its completion. LRTF(Longest Remaining Time First), means the process which has remaining time largest, will run first and in case of same remaining time, lowest process with will be given priority to run.  Solution:  Let the processes be p0, p1 and p2. These processes will be executed in following order.  Gantt chart is as follows: </span></p><pre><span>  p2  p1  p2  p1  p2  p0  p1   p2   p0   p1   p2</span><br><span>0   4   5   6   7   8   9   10    11   12   13   14 </span><br><br></pre><p dir=\"ltr\"><span> First 4 sec, p2 will run, then remaining time p2=4, p1=4, p0=2. Now P1 will get chance to run for 1 sec, then remaining time. p2=4,p1=3,p0=2. Now p2 will get chance to run for 1 sec, then remaining time. p2=3,p1=3,p0=2. By doing this way, you will get above gantt chart.  Scheduling table: </span></p><table><thead><tr><th style=\"text-align: center;\"><span>PID</span></th><th style=\"text-align: center;\"><span>AT</span></th><th style=\"text-align: center;\"><span>BT</span></th><th style=\"text-align: center;\"><span>CT</span></th><th style=\"text-align: center;\"><span>TAT=CT-AT</span></th></tr></thead><tbody><tr><td style=\"text-align: center;\"><span>p0</span></td><td style=\"text-align: center;\"><span>0</span></td><td style=\"text-align: center;\"><span>2</span></td><td style=\"text-align: center;\"><span>12</span></td><td style=\"text-align: center;\"><span>12</span></td></tr><tr><td style=\"text-align: center;\"><span>p1</span></td><td style=\"text-align: center;\"><span>0</span></td><td style=\"text-align: center;\"><span>4</span></td><td style=\"text-align: center;\"><span>13</span></td><td style=\"text-align: center;\"><span>13</span></td></tr><tr><td style=\"text-align: center;\"><span>p2</span></td><td style=\"text-align: center;\"><span>0</span></td><td style=\"text-align: center;\"><span>8</span></td><td style=\"text-align: center;\"><span>14</span></td><td style=\"text-align: center;\"><span>14</span></td></tr><tr><td style=\"text-align: center;\"><span>Total</span></td><td style=\"text-align: center;\"></td><td style=\"text-align: center;\"></td><td style=\"text-align: center;\"></td><td style=\"text-align: center;\"><span>39</span></td></tr></tbody></table><p dir=\"ltr\"><span>   AT=Arrival Time, BT=Burst Time, CT=Completion Time, TAT=Turn Around Time As we know, turn around time is total time between submission of the process and its completion. i.e turn around time=completion time-arrival time. i.e. TAT=CT-AT Turn around time of p0 = 12 (12-0) Turn around time of p1 = 13 (13-0) Turn around time of p2 = 14 (14-0)  Average turn around time is (12+13+14)/3 = 13. Option (A) is the correct answer.  See question 1 of  </span></p>",
      "created_on": "2014-02-26 - 07:53:04",
      "updated_on": "2025-06-25 - 15:30:59",
      "year": 2006,
      "subject": "Operating System",
      "chapter": "CPU Scheduling",
      "question_type": "MCQ"
    },
    {
      "id": 6104,
      "question": "<p dir=\"ltr\"><span>Consider the following grammar: </span></p><pre><span>S → FR</span><br><span>R → S | ε</span><br><span>F → id</span></pre><p dir=\"ltr\"><span> In the predictive parser table, M, of the grammar the entries M[S, id] and M[R, $] respectively.</span></p>",
      "answers": [
        {
          "id": 24581,
          "answer": "<p dir=\"ltr\"><span>{S → FR} and {R →  ε }</span></p>",
          "correct": true,
          "sort_order": 0
        },
        {
          "id": 24582,
          "answer": "<p dir=\"ltr\"><span> {S → FR} and { }</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 24583,
          "answer": "<p dir=\"ltr\"><span>{S → FR} and {R → *S}</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24584,
          "answer": "<p dir=\"ltr\"><span> {F → id} and {R →  ε}</span></p>",
          "correct": false,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Here representing the parsing table as M[ X , Y ], where X represents rows( Non terminals) and Y represents columns(terminals).  Here are the rules to fill the parsing table.  </span></p><p dir=\"ltr\"><u><span class=\"GFGEditorTheme__textUnderline\">For each distinct production rule A-&gt;α, of the grammar, we need to apply the given rules:</span></u></p><p dir=\"ltr\"><b><strong>Rule 1</strong></b></p><p dir=\"ltr\"><span>: if A --&gt; α is a production, for each terminal&nbsp;'a' in FIRST(α), add A--&gt;α to M[ A , a ]  </span></p><p dir=\"ltr\"><b><strong>Rule 2</strong></b></p><p dir=\"ltr\"><span> : if '&nbsp;ε ' is in FIRST(α), add A --&gt; α to&nbsp;M [ A , b ] for each 'b' in FOLLOW(A).  As Entries have been asked corresponding to Non-Terminal S and R, hence we only need to consider their productions to get the answer.  </span></p><p dir=\"ltr\"><b><strong>For S → FR</strong></b></p><p dir=\"ltr\"><span>, according to rule 1, this production rule should be placed at the entry M[ S, FIRST(FR) ], and from the given grammar, FIRST(FR) ={id}, </span></p><p dir=\"ltr\"><u><span class=\"GFGEditorTheme__textUnderline\">hence S-&gt;FR is placed in the parsing table at entry </span></u></p><p dir=\"ltr\"><b><strong>M[S , id].</strong></b></p><p dir=\"ltr\"><span>  Similarly,  For R → S, this production rule should be placed at entry M[ R, FIRST(S) ], and as FIRST(S) = FIRST(F) = {id}&nbsp;hence, R-&gt;S is placed at entry M[R,id]  and  </span></p><p dir=\"ltr\"><u><b><strong class=\"GFGEditorTheme__textUnderline\">For R-&gt;ε</strong></b></u></p><p dir=\"ltr\"><span>, as FIRST(ε) = {ε}, hence rule 2 should be applied, therefore, this production rule should be placed in the parsing table at entry M[R,FOLLOW(R)], and FOLLOW(R) = FOLLOW(S) = {$}, </span></p><p dir=\"ltr\"><u><span class=\"GFGEditorTheme__textUnderline\">hence R-&gt;ε is placed at entry </span></u></p><p dir=\"ltr\"><b><strong>M[ R, $ ].</strong></b></p><p dir=\"ltr\"><span>  Therefore Answer is option A.  </span></p><p dir=\"ltr\"><u><span class=\"GFGEditorTheme__textUnderline\">Visit the Following links to Learn how to find First and Follow sets.</span></u></p><a href=\"http://geeksquiz.com/compiler-design-first-in-syntax-analysis/\" target=\"_blank\"><span>http://geeksquiz.com/compiler-design-first-in-syntax-analysis/</span></a><a href=\"http://geeksquiz.com/compiler-design-follow-set-in-syntax-analysis/\" target=\"_blank\"><span>http://geeksquiz.com/compiler-design-follow-set-in-syntax-analysis/</span></a><iframe src=\"https://www.youtube.com/embed/LdMTs93sekg?start=2852\" width=\"560\" height=\"315\"></iframe>",
      "created_on": "2022-12-30 - 15:56:28",
      "updated_on": "2025-06-25 - 17:37:49",
      "year": 2006,
      "subject": "Compiler Design",
      "chapter": "Sdt",
      "question_type": "MCQ"
    },
    {
      "id": 6105,
      "question": "<p dir=\"ltr\"><span>Consider the following translation scheme. S → ER R → *E{print(\"*\");}R | ε E → F + E {print(\"+\");} | F F → (S) | id {print(id.value);} Here id is a token that represents an integer and id.value represents the corresponding integer value. For an input '2 * 3 + 4', this translation scheme prints</span></p>",
      "answers": [
        {
          "id": 24585,
          "answer": "<p><span> 2 * 3 + 4</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 24586,
          "answer": "<p><span>2 * +3 4</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 24587,
          "answer": "<p><span>2 3 * 4 +</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24588,
          "answer": "<p><span> 2 3 4+*</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Background Required to solve the question - Syntax Directed Translation and Parse Tree Construction. </span></p><pre><span>Explanation : We are given L-Attributed Syntax Directed Translation as</span><br/><span>semantic actions like printf statements are inserted anywhere on the </span><br/><span>RHS of production (R → *E{print(“*”);}R). After constructing the parse tree </span><br/><span>as shown below from the given grammar, we will follow depth first order left </span><br/><span>to right evaluation in order to generate the final output.</span><br/></pre><p dir=\"ltr\"><span> Parse Tree: </span></p><img alt=\"parse-tree\" height=\"228\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_6105/97da8b46d584c029-U3qPmfmXLS19MxihjEH8QWXyVDKJEe.png\" width=\"583\"/><pre><span>Just follow the arrows in the picture (This is actually Depth first </span><br/><span>left to right evaluation ) and the moment we take exit from any child </span><br/><span>which is printf statement in this question, we print that symbol which </span><br/><span>can be a integer value or ‘*’ or ‘+’.</span><br/></pre><p dir=\"ltr\"><span>  Evaluation :  </span></p><img alt=\"syntax-directed-translation\" height=\"312\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_6105/95fc2fede9e340db-kM8QzCZa0ZJPkvdSX0GJ11dkQClv6G.png\" width=\"576\"/><p><span> </span></p><iframe height=\"315\" src=\"https://www.youtube.com/embed/LdMTs93sekg?start=3018\" width=\"560\"></iframe>",
      "created_on": "2022-12-30 - 15:56:28",
      "updated_on": "2025-06-25 - 17:36:40",
      "year": 2006,
      "subject": "Compiler Design",
      "chapter": "Sdt",
      "question_type": "MCQ"
    },
    {
      "id": 6101,
      "question": "<p dir=\"ltr\"><span>Consider the following grammar. </span></p><pre><span>S -&gt; S * E</span><br><span>S -&gt; E</span><br><span>E -&gt; F + E</span><br><span>E -&gt; F</span><br><span>F -&gt; id</span></pre><p dir=\"ltr\"><span> Consider the following LR(0) items corresponding to the grammar above. </span></p><pre><span>(i) S -&gt; S * .E</span><br><span>(ii) E -&gt; F. + E</span><br><span>(iii) E -&gt; F + .E </span></pre><p dir=\"ltr\"><span> Given the items above, which two of them will appear in the same set in the canonical sets-of-items for the grammar?  </span></p>",
      "answers": [
        {
          "id": 24569,
          "answer": "<p dir=\"ltr\"><span> (i) and (ii) </span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 24570,
          "answer": "<p dir=\"ltr\"><span>(ii) and (iii)</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 24571,
          "answer": "<p dir=\"ltr\"><span>(i) and (iii) </span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24572,
          "answer": "<p dir=\"ltr\"><span>None of the above </span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Let's make the LR(0) set of items. First we need to augment the grammar with the production rule S' -&gt; .S , then we need to find closure of items in a set to complete a set. Below are the LR(0) sets of items.  </span></p><img alt=\"LR(0) items\" height=\"720\" loading=\"auto\" src=\"https://rkokdq5fgqqf84hb.public.blob.vercel-storage.com/gate-images/2006/q_6101/9dfb07de786051f9-og6oKfBQJlWlkyaeYsi9lvRKyQTPUk.jpg\" width=\"960\"/><iframe height=\"315\" src=\"https://www.youtube.com/embed/LdMTs93sekg?start=2403\" width=\"560\"></iframe>",
      "created_on": "2022-12-30 - 15:56:28",
      "updated_on": "2025-06-25 - 17:39:32",
      "year": 2006,
      "subject": "Compiler Design",
      "chapter": "Syntax Analysis",
      "question_type": "MCQ"
    },
    {
      "id": 6174,
      "question": "<p dir=\"ltr\"><span>Consider the following C code segment.&nbsp;</span></p><pre><span>for (i = 0, i&lt;n; i++)</span><br><span>{</span><br><span>   for (j=0; j&lt;n; j++)</span><br><span>   {</span><br><span>       if (i%2)</span><br><span>       {</span><br><span>           x += (4*j + 5*i);</span><br><span>           y += (7 + 4*j);</span><br><span>       }</span><br><span>   }</span><br><span>}</span></pre><p dir=\"ltr\"><span>Which one of the following is false?</span></p>",
      "answers": [
        {
          "id": 24837,
          "answer": "<p dir=\"ltr\"><span>The code contains loop invariant computation</span></p>",
          "correct": false,
          "sort_order": 0
        },
        {
          "id": 24838,
          "answer": "<p dir=\"ltr\"><span>There is scope of common sub-expression elimination in this code</span></p>",
          "correct": false,
          "sort_order": 1
        },
        {
          "id": 24839,
          "answer": "<p dir=\"ltr\"><span>There is scope of strength reduction in this code</span></p>",
          "correct": false,
          "sort_order": 2
        },
        {
          "id": 24840,
          "answer": "<p dir=\"ltr\"><span>There is scope of dead code elimination in this code</span></p>",
          "correct": true,
          "sort_order": 3
        }
      ],
      "explanation": "<p dir=\"ltr\"><span>Question asks about </span><b><strong>false</strong></b><span> statement</span></p><pre><span>4*j is common subexpression elimination so B is true.</span><br><br><span>5*i can be moved out of inner loop so can be i%2. </span><br><span>Means, A is true as we have loop invariant computation.</span><br><br><span>Next, 4*j as well as 5*i can be replaced with a = - 4;</span><br><span>before j loop then a = a + 4; where 4*j is computed,</span><br><span>likewise for 5*i. C is true as there is scope of strength </span><br><span>reduction. </span><br><br><span>By choice elimination, we have D.</span></pre>",
      "created_on": "2022-12-30 - 15:56:29",
      "updated_on": "2025-06-25 - 17:36:00",
      "year": 2006,
      "subject": "C Programming",
      "chapter": "Loops & Conditional",
      "question_type": "MCQ"
    }
  ],
  "quiz": {
    "id": 208,
    "question_count": 84,
    "bottom_description": "",
    "title": "GATE-CS-2006",
    "slug": "gate-cs-2006-gq",
    "category": [
      {
        "id": 4355,
        "name": "GATE",
        "slug": "gate",
        "origin_term_id": 2209,
        "origin_slug": "computer-subject/computer-science-quizzes-gq/gate"
      }
    ],
    "show_answer": 3,
    "created_on": "2014-02-26 - 07:53:04",
    "updated_on": "2024-04-02 - 13:00:10"
  }
}