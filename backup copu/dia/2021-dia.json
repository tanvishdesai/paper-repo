[
  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "GA Q.2",
    "question_text": "A polygon is convex if, for every pair of points, P and Q belonging to the polygon, the line segment PQ lies completely inside or on the polygon.\n\nWhich one of the following is NOT a convex polygon?",
    "options": ["(A)", "(B)", "(C)", "(D)"],
    "subject": "General Aptitude",
    "chapter": "Analytical Aptitude",
    "subtopic": "Geometry",
    "theoretical_practical": "theoretical",
    "marks": 1,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 0.95,
    "correct_answer": "(A)",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    subgraph (A)\n        direction LR\n        A1 --- A2 --- A3 --- A4 --- A5 --- A6 --- A1\n    end\n    subgraph (B)\n        B1 --- B2 --- B3 --- B1\n    end\n    subgraph (C)\n        C1 --- C2 --- C3 --- C4 --- C1\n    end\n    subgraph (D)\n        D1 --- D2 --- D3 --- D4 --- D1\n    end"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "GA Q.4",
    "question_text": "A circular sheet of paper is folded along the lines in the directions shown. The paper, after being punched in the final folded state as shown and unfolded in the reverse order of folding, will look like ______",
    "options": ["(A)", "(B)", "(C)", "(D)"],
    "subject": "General Aptitude",
    "chapter": "Analytical Aptitude",
    "subtopic": "Paper Folding",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 0.9,
    "correct_answer": "(A)",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    subgraph Process\n        A(Circular Paper) --> B(Folded in Half Vertically);\n        B --> C(Folded in Half Horizontally);\n        C --> D{Punched Quarter Circle},;\n    end\n\n    subgraph Options\n        subgraph (A)\n            A1(○   □) --- A2(□   ○);\n        end\n        subgraph (B)\n            B1(□   □) --- B2(□   □);\n        end\n        subgraph (C)\n            C1(○   ○) --- C2(□   □);\n        end\n        subgraph (D)\n            D1(○   ○) --- D2(○   ○);\n        end\n    end"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "GA Q.7",
    "question_text": "Details of prices of two items P and Q are presented in the above table. The ratio of cost of item P to cost of item Q is 3:4. Discount is calculated as the difference between the marked price and the selling price. The profit percentage is calculated as the ratio of the difference between selling price and cost, to the cost (Profit \\% = (Selling price - Cost) / Cost * 100). The discount on item Q, as a percentage of its marked price, is ______",
    "options": ["(A) 25", "(B) 12.5", "(C) 10", "(D) 5"],
    "subject": "General Aptitude",
    "chapter": "Quantitative Aptitude",
    "subtopic": "Profit and Loss",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 0.98,
    "correct_answer": "(C) 10",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    subgraph Price Table\n        H1[Items] --- H2[Cost(₹)] --- H3[Profit \\%] --- H4[Marked Price(₹)]\n        P1[P] --- P2[5,400] --- P3[---] --- P4[5,860]\n        Q1[Q] --- Q2[---] --- Q3[25] --- Q4[10,000]\n    end"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "CS Q.17",
    "question_text": "Consider the following undirected graph with edge weights as shown:\n\nThe number of minimum-weight spanning trees of the graph is ______",
    "options": null,
    "subject": "Algorithms",
    "chapter": "Graph traversals, minimum spanning trees, shortest paths.",
    "subtopic": "Minimum Spanning Tree",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 1.0,
    "correct_answer": "3",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    A ---|0.9| B\n    A ---|0.1| D\n    A ---|0.1| C\n    B ---|0.1| E\n    B ---|0.9| F\n    C ---|0.1| D\n    C ---|0.9| G\n    D ---|0.9| E\n    D ---|0.1| G\n    E ---|0.1| F\n    E ---|0.1| G\n    F ---|0.9| G"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "CS Q.28",
    "question_text": "Consider a 3-bit counter, designed using T flip-flops, as shown below:\n\nAssuming the initial state of the counter given by PQR as 000, what are the next three states?",
    "options": [
      "(A) 011, 101, 000",
      "(B) 001, 010, 111",
      "(C) 011, 101, 111",
      "(D) 001, 010, 000"
    ],
    "subject": "Digital Logic",
    "chapter": "Combinational and sequential circuits.",
    "subtopic": "Sequential Circuits",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 0.95,
    "correct_answer": "(A) 011, 101, 000",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    subgraph FlipFlop_P\n        TP[Tp] --> P[P]\n        P --> P_out[Q]\n        P --> P_not_out[Q']\n    end\n    subgraph FlipFlop_Q\n        TQ[Tq] --> Q[Q]\n        Q --> Q_out[Q]\n        Q --> Q_not_out[Q']\n    end\n    subgraph FlipFlop_R\n        TR[Tr] --> R[R]\n        R --> R_out[Q]\n        R --> R_not_out[Q']\n    end\n\n    Clock[Clock Pulse] --> P\n    Clock --> Q\n    Clock --> R\n    \n    P_out -- connection --> TQ\n    Q_out -- connection --> TR\n\n    P_not_out -- feedback --> TP\n    Q_not_out -- feedback --> TP\n    R_not_out -- feedback --> TP"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "CS Q.29",
    "question_text": "Assume that a 12-bit Hamming codeword consisting of 8-bit data and 4 check bits is d₈d₇d₆d₅c₈d₄d₃d₂c₄d₁c₂c₁, where the data bits and the check bits are given in the following tables:\n\nWhich one of the following choices gives the correct values of x and y?",
    "options": [
      "(A) x is 0 and y is 0.",
      "(B) x is 0 and y is 1.",
      "(C) x is 1 and y is 0.",
      "(D) x is 1 and y is 1."
    ],
    "subject": "Digital Logic",
    "chapter": "OTHER: Error Detection/Correction Codes",
    "subtopic": "Hamming Codes",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 0.98,
    "correct_answer": "(A) x is 0 and y is 0.",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    subgraph Data bits\n        direction LR\n        d8h[d₈] --- d7h[d₇] --- d6h[d₆] --- d5h[d₅] --- d4h[d₄] --- d3h[d₃] --- d2h[d₂] --- d1h[d₁]\n        d8v[1] --- d7v[1] --- d6v[0] --- d5v[x] --- d4v[0] --- d3v[1] --- d2v[0] --- d1v[1]\n    end\n\n    subgraph Check bits\n        direction LR\n        c8h[c₈] --- c4h[c₄] --- c2h[c₂] --- c1h[c₁]\n        c8v[y] --- c4v[0] --- c2v[1] --- c1v[0]\n    end"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "CS Q.31",
    "question_text": "Consider the following context-free grammar where the set of terminals is {a, b, c, d, f},.\n\nS → daT | R f\nT → aS | baT | ε\nR → caTR | ε\n\nThe following is a partially-filled LL(1) parsing table.",
    "options": [
      "(A) ① S → R f ② S → R f ③ T → ε ④ T → ε",
      "(B) ① blank ② S → R f ③ T → ε ④ T → ε",
      "(C) ① S → R f ② blank ③ blank ④ T → ε",
      "(D) ① blank ② S → R f ③ blank ④ blank"
    ],
    "subject": "Compiler Design",
    "chapter": "Lexical analysis, parsing, syntax-directed translation.",
    "subtopic": "LL(1) Parsing Table",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 0.95,
    "correct_answer": "(A) ① S → R f ② S → R f ③ T → ε ④ T → ε",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    subgraph LL(1) Parsing Table\n        style Z fill:#fff,stroke:#fff\n        Z[ ] --- H1[a] --- H2[b] --- H3[c] --- H4[d] --- H5[f] --- H6[$]\n        R1[S] --- C11[ ] --- C12[ ] --- C13[①] --- C14[S→daT] --- C15[②] --- C16[ ]\n        R2[T] --- C21[T→aS] --- C22[T→baT] --- C23[③] --- C24[ ] --- C25[ ] --- C26[④]\n        R3[R] --- C31[ ] --- C32[ ] --- C33[R→caTR] --- C34[ ] --- C35[R→ε] --- C36[ ]\n    end"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "CS Q.38",
    "question_text": "Consider the following language.\n\nL = {w ∈ {0,1},* | w ends with the substring 011},\n\nWhich one of the following deterministic finite automata accepts L?",
    "options": ["(A)", "(B)", "(C)", "(D)"],
    "subject": "Theory of Computation",
    "chapter": "Regular expressions and finite automata.",
    "subtopic": "Deterministic Finite Automata",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 1.0,
    "correct_answer": "(D)",
    "has_diagram": true,
    "diagram_mermaid_code": "graph LR\n    subgraph (A)\n        direction LR\n        A_S[start] --> A_q0\n        A_q0 -- 0 --> A_q1\n        A_q0 -- 1 --> A_q0\n        A_q1 -- 1 --> A_q2((q2))\n        A_q1 -- 0 --> A_q1\n        A_q2 -- 0 --> A_q1\n    end\n    subgraph (B)\n        direction LR\n        B_S[start] --> B_q0\n        B_q0 -- 0,1 --> B_q1\n        B_q0 -- 1 --> B_q0\n        B_q1 -- 0 --> B_q0\n        B_q1 -- 1 --> B_q2((q2))\n    end\n    subgraph (C)\n        direction LR\n        C_S[start] --> C_q0\n        C_q0 -- 0 --> C_q1\n        C_q0 -- 1 --> C_q0\n        C_q1 -- 0 --> C_q1\n        C_q1 -- 1 --> C_q2\n        C_q2 -- 0 --> C_q1\n        C_q2 -- 1 --> C_q3((q3))\n    end\n    subgraph (D)\n        direction LR\n        D_S[start] --> D_q0\n        D_q0 -- 0 --> D_q1\n        D_q0 -- 1 --> D_q0\n        D_q1 -- 0 --> D_q1\n        D_q1 -- 1 --> D_q2\n        D_q2 -- 0 --> D_q1\n        D_q2 -- 1 --> D_q3((q3))\n        D_q3 -- 0 --> D_q1\n        D_q3 -- 1 --> D_q0\n    end"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "CS Q.47",
    "question_text": "Consider a dynamic hashing approach for 4-bit integer keys:\n1. There is a main hash table of size 4.\n2. The 2 least significant bits of a key is used to index into the main hash table.\n3. Initially, the main hash table entries are empty.\n4. Thereafter, when more keys are hashed into it, to resolve collisions, the set of all keys corresponding to a main hash table entry is organized as a binary tree that grows on demand.\n5. First, the 3rd least significant bit is used to divide the keys into left and right subtrees.\n6. To resolve more collisions, each node of the binary tree is further sub-divided into left and right subtrees based on the 4th least significant bit.\n7. A split is done only if it is needed, i.e., only when there is a collision.\nConsider the following state of the hash table (assume the keys are in decimal notation)?\nWhich of the following sequences of key insertions can cause the above state of the hash table (assume the keys are in decimal notation)?",
    "options": [
      "(A) 5, 9, 4, 13, 10, 7",
      "(B) 9, 5, 10, 6, 7, 1",
      "(C) 10, 9, 6, 7, 5, 13",
      "(D) 9, 5, 13, 6, 10, 14"
    ],
    "subject": "Algorithms",
    "chapter": "Searching, sorting, hashing.",
    "subtopic": "Dynamic Hashing",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 0.95,
    "correct_answer": "(C) 10, 9, 6, 7, 5, 13",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    subgraph Main Table\n        direction LR\n        T00[00] --> T01[01] --> T10[10] --> T11[11]\n    end\n\n    T00 --> E[empty]\n    \n    subgraph Tree for 01\n        T01 --> N01_root\n        N01_root -- 0 --> N01_L[leaf]\n        N01_root -- 1 --> N01_R[leaf]\n    end\n\n    subgraph Tree for 10\n        T10 --> N10_root\n        N10_root -- 0 --> N10_L_root\n        N10_L_root -- 0 --> N10_LL[leaf]\n        N10_L_root -- 1 --> N10_LR[leaf]\n        N10_root -- 1 --> N10_R[leaf]\n    end\n\n    subgraph Tree for 11\n        T11 --> N11_root[leaf]\n    end"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "CS Q.51",
    "question_text": "In a pushdown automaton P = (Q, Σ, Γ, δ, q₀, F), a transition of the form,\nwhere p, q ∈ Q, a ∈ Σ ∪ {ε},, and X,Y ∈ Γ ∪ {ε},, represents (q, Y) ∈ δ(p, a, X).\nConsider the following pushdown automaton over the input alphabet Σ = {a,b}, and stack alphabet Γ = {#, A},.",
    "options": null,
    "subject": "Theory of Computation",
    "chapter": "Context-free grammars and push-down automata.",
    "subtopic": "Pushdown Automata",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 1.0,
    "correct_answer": "50",
    "has_diagram": true,
    "diagram_mermaid_code": "graph LR\n    subgraph Generic Transition\n        p -- a, X -> Y --> q\n    end\n\n    subgraph Specific PDA\n        start --> q0\n        q0 -- ε, ε -> # --> q1\n        q1 -- a, ε -> A --> q1\n        q1 -- ε, ε -> ε --> q2\n        q2 -- b, A -> ε --> q2\n        q2 -- ε, A -> A --> q3((q3))\n    end"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "CS Q.54",
    "question_text": "A sender (S) transmits a signal, which can be one of the two kinds: H and L with probabilities 0.1 and 0.9 respectively, to a receiver (R).\nIn the graph below, the weight of edge (u, v) is the probability of receiving v when u is transmitted, where u, v ∈ {H, L},. For example, the probability that the received signal is L given the transmitted signal was H, is 0.7.\n\nIf the received signal is H, the probability that the transmitted signal was H (rounded to 2 decimal places) is ______",
    "options": null,
    "subject": "Engineering Mathematics",
    "chapter": "Probability and Statistics",
    "subtopic": "Conditional probability and Bayes theorem.",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 1.0,
    "correct_answer": "0.04",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    S -- P(H)=0.1 --> H_sent(H)\n    S -- P(L)=0.9 --> L_sent(L)\n\n    H_sent -- 0.3 --> H_rec(H)\n    H_sent -- 0.7 --> L_rec(L)\n\n    L_sent -- 0.2 --> H_rec\n    L_sent -- 0.8 --> L_rec\n\n    H_rec --> R\n    L_rec --> R\n    \n    style S fill:#fff,stroke-width:0px\n    style R fill:#fff,stroke-width:0px"
  },

  {
    "year": 2021,
    "paper_code": "CS",
    "question_no": "CS Q.55",
    "question_text": "Consider the following instruction sequence where registers R1, R2 and R3 are general purpose and MEMORY[X] denotes the content at the memory location X.",
    "options": null,
    "subject": "Computer Organization and Architecture",
    "chapter": "Machine instructions and addressing modes.",
    "subtopic": "Instruction Set Architecture",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2021 CS Set 1",
    "confidence": 0.98,
    "correct_answer": "50",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    subgraph Instruction Table\n        direction LR\n        H1[Instruction] --- H2[Semantics] --- H3[Instruction Size (bytes)]\n        \n        I1[MOV R1, (5000)] --- S1[R1 ← MEMORY[5000]] --- Z1[4]\n        I2[MOV R2, (R3)] --- S2[R2 ← MEMORY[R3]] --- Z2[4]\n        I3[ADD R2, R1] --- S3[R2 ← R1 + R2] --- Z3[2]\n        I4[MOV (R3), R2] --- S4[MEMORY[R3] ← R2] --- Z4[4]\n        I5[INC R3] --- S5[R3 ← R3 + 1] --- Z5[2]\n        I6[DEC R1] --- S6[R1 ← R1 - 1] --- Z6[2]\n        I7[BNZ 1004] --- S7[Branch if not zero to the<br>given absolute address] --- Z7[2]\n        I8[HALT] --- S8[Stop] --- Z8[1]\n\n        linkStyle 0 stroke-width:0px\n        linkStyle 1 stroke-width:0px\n        linkStyle 2 stroke-width:0px\n        linkStyle 3 stroke-width:0px\n        linkStyle 4 stroke-width:0px\n        linkStyle 5 stroke-width:0px\n        linkStyle 6 stroke-width:0px\n        linkStyle 7 stroke-width:0px\n        linkStyle 8 stroke-width:0px\n        linkStyle 9 stroke-width:0px\n        linkStyle 10 stroke-width:0px\n        linkStyle 11 stroke-width:0px\n        linkStyle 12 stroke-width:0px\n        linkStyle 13 stroke-width:0px\n        linkStyle 14 stroke-width:0px\n        linkStyle 15 stroke-width:0px\n        linkStyle 16 stroke-width:0px\n    end"
  }
]
