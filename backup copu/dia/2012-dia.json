[
  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.6",
    "question_text": "The truth table\nXY | f(X, Y)\n-- | -------\n0 0 | 0\n0 1 | 0\n1 0 | 1\n1 1 | 1\nrepresents the Boolean function",
    "options": ["(A) X", "(B) X + Y", "(C) X ⊕ Y", "(D) Y"],
    "subject": "Digital Logic",
    "chapter": "Boolean algebra",
    "subtopic": "Truth Table Representation",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(A) X",
    "has_diagram": true,
    "diagram_mermaid_code": "%%{init: {'theme': 'base', 'themeVariables': { 'lineColor': '#000000', 'primaryColor': '#ffffff', 'primaryTextColor': '#000000', 'primaryBorderColor': '#000000'},},},%%\n\nstateDiagram-v2\n    direction LR\n    [*] --> f\n    state f {\n        direction LR\n        [*] --> X\n        X --> [*]\n        [*] --> Y\n        Y --> [*]\n    },\n    f --> f(X,Y)\n    f(X,Y) --> [*]\n\n    note right of f\n        | X | Y | f(X, Y) |\n        |---|---|---------|\n        | 0 | 0 | 0       |\n        | 0 | 1 | 0       |\n        | 1 | 0 | 1       |\n        | 1 | 1 | 1       |\n    end note"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.12",
    "question_text": "What is the complement of the language accepted by the NFA shown below?\nAssume Σ = {a}, and ɛ is the empty string.",
    "options": ["(A) Ø", "(B) {ɛ},", "(C) a*", "(D) {a, ɛ},"],
    "subject": "Theory of Computation",
    "chapter": "Regular expressions and finite automata",
    "subtopic": "Nondeterministic Finite Automata (NFA)",
    "theoretical_practical": "practical",
    "marks": 1,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(B) {ɛ},",
    "has_diagram": true,
    "diagram_mermaid_code": "graph LR\n    style q0 fill:#fff,stroke:#333,stroke-width:2px\n    style q1 fill:#fff,stroke:#333,stroke-width:4px\n    style q2 fill:#fff,stroke:#333,stroke-width:2px\n\n    q0 -- a --> q1\n    q1 -- ε --> q2\n    q2 -- ε --> q0"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.26",
    "question_text": "Which of the following graphs is isomorphic to the one given below?",
    "options": ["(A)", "(B)", "(C)", "(D)"],
    "subject": "Engineering Mathematics",
    "chapter": "Discrete Mathematics",
    "subtopic": "Graph Theory",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(B)",
    "has_diagram": true,
    "diagram_mermaid_code": "graph\nsubgraph Main Graph\n    1---2\n    2---3\n    3---4\n    4---5\n    5---1\n    1---6\n    6---3\nend\n\nsubgraph Option (A)\n    A1---A2\n    A2---A3\n    A3---A4\n    A4---A5\n    A5---A1\n    A1---A6\n    A6---A4\nend\n\nsubgraph Option (B)\n    B1---B2\n    B2---B3\n    B3---B4\n    B4---B5\n    B5---B6\n    B6---B1\n    B1---B4\nend\n\nsubgraph Option (C)\n    C1---C2\n    C2---C3\n    C3---C4\n    C4---C5\n    C5---C1\n    C1---C3\n    C3---C5\nend\n\nsubgraph Option (D)\n    D1---D2\n    D2---D3\n    D3---D4\n    D4---D5\n    D5---D6\n    D6---D1\n    D1---D3\nend"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.30",
    "question_text": "What is the minimal form of the Karnaugh map shown below? Assume that X denotes a don't care term.",
    "options": [
      "(A) b'd'",
      "(B) b'd'+b'c'",
      "(C) b'd'+a'b'c'd",
      "(D) b'd'+b'c'+c'd'"
    ],
    "subject": "Digital Logic",
    "chapter": "Minimization",
    "subtopic": "Karnaugh Map (K-map)",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 0.8,
    "correct_answer": "(B) b'd'+b'c'",
    "has_diagram": true,
    "diagram_mermaid_code": "%%{init: {'theme': 'base', 'themeVariables': { 'lineColor': '#000000', 'primaryColor': '#ffffff', 'primaryTextColor': '#000000', 'primaryBorderColor': '#000000'},},},%%\n\nstateDiagram-v2\n    direction LR\n    [*] --> KMAP\n\n    note right of KMAP\n        **cd \\ ab** | **00** | **01** | **11** | **10**\n        ---|---|---|---|---\n        **00** | 1 | X | X | 1\n        **01** | X |   | 1 |  \n        **11** |   |   |   |  \n        **10** | 1 |   | X |  \n    end note"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.31",
    "question_text": "Consider the 3 processes, P1, P2 and P3 shown in the table.\n\nProcess | Arrival time | Time Units Required\n--- | --- | ---\nP1 | 0 | 5\nP2 | 1 | 7\nP3 | 3 | 4\n\nThe completion order of the 3 processes under the policies FCFS and RR2 (round robin scheduling with CPU quantum of 2 time units) are",
    "options": [
      "(A) FCFS: P1, P2, P3 RR2: P1, P2, P3",
      "(B) FCFS: P1, P3, P2 RR2: P1, P3, P2",
      "(C) FCFS: P1, P2, P3 RR2: P1, P3, P2",
      "(D) FCFS: P1, P3, P2 RR2: P1, P2, P3"
    ],
    "subject": "Operating System",
    "chapter": "CPU and I/O scheduling",
    "subtopic": "CPU Scheduling Algorithms",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(C) FCFS: P1, P2, P3 RR2: P1, P3, P2",
    "has_diagram": true,
    "diagram_mermaid_code": "%%{init: {'theme': 'base', 'themeVariables': { 'lineColor': '#000000', 'primaryColor': '#ffffff', 'primaryTextColor': '#000000', 'primaryBorderColor': '#000000'},},},%%\n\nstateDiagram-v2\n    direction LR\n    [*] --> ProcessTable\n\n    note right of ProcessTable\n        | Process | Arrival time | Time Units Required |\n        |---|---|---|\n        | P1 | 0 | 5 |\n        | P2 | 1 | 7 |\n        | P3 | 3 | 4 |\n    end note"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.36",
    "question_text": "Consider the program given below, in a block-structured pseudo-language with lexical scoping and nesting of procedures permitted.\n```\nProgram main;\n  Var ...\n  Procedure A1;\n    Var ...\n    Call A2;\n  End A1\n\n  Procedure A2;\n    Var ...\n    Procedure A21;\n      Var ...\n      Call A1;\n    End A21\n    Call A21;\n  End A2\n\n  Call A1;\nEnd main.\n```\nConsider the calling chain: Main → A1 → A2 → A21 → A1\nThe correct set of activation records along with their access links is given by",
    "options": ["(A)", "(B)", "(C)", "(D)"],
    "subject": "Compiler Design",
    "chapter": "Runtime environments",
    "subtopic": "Activation Records and Access Links",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(D)",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    subgraph Option (A)\n        A_FP[FRAME POINTER] --> A_A1_2(A1)\n        A_A1_2 --> A_A21(A21)\n        A_A21 --> A_A2(A2)\n        A_A2 --> A_A1_1(A1)\n        A_A1_1 --> A_Main(Main)\n\n        subgraph A_ACCESS_LINKS[ACCESS LINKS]\n            A_A1_2 -- access --> A_A1_1\n            A_A21 -- access --> A_A2\n            A_A2 -- access --> A_Main\n            A_A1_1 -- access --> A_Main\n        end\n    end\n\n    subgraph Option (B)\n        B_FP[FRAME POINTER] --> B_A1_2(A1)\n        B_A1_2 --> B_A21(A21)\n        B_A21 --> B_A2(A2)\n        B_A2 --> B_A1_1(A1)\n        B_A1_1 --> B_Main(Main)\n\n        subgraph B_ACCESS_LINKS[ACCESS LINKS]\n            B_A1_2 -- access --> B_Main\n            B_A21 -- access --> B_A2\n            B_A2 -- access --> B_Main\n            B_A1_1 -- access --> B_Main\n        end\n    end\n\n    subgraph Option (C)\n        C_FP[FRAME POINTER] --> C_A1_2(A1)\n        C_A1_2 --> C_A21(A21)\n        C_A21 --> C_A2(A2)\n        C_A2 --> C_A1_1(A1)\n        C_A1_1 --> C_Main(Main)\n\n        subgraph C_ACCESS_LINKS[ACCESS LINKS]\n            C_A1_2 -- access --> C_Main\n            C_A21 -- access --> C_Main\n            C_A2 -- access --> C_Main\n            C_A1_1 -- access --> C_Main\n        end\n    end\n\n    subgraph Option (D)\n        D_FP[FRAME POINTER] --> D_A1_2(A1)\n        D_A1_2 --> D_A21(A21)\n        D_A21 --> D_A2(A2)\n        D_A2 --> D_A1_1(A1)\n        D_A1_1 --> D_Main(Main)\n\n        subgraph D_ACCESS_LINKS[ACCESS LINKS]\n            D_A1_2 -- access --> D_Main\n            D_A21 -- access --> D_A2\n            D_A2 -- access --> D_Main\n            D_A1_1 -- access --> D_Main\n            D_A21 -- access --> D_A1_1\n        end\n    end"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.40",
    "question_text": "Consider the directed graph shown in the figure below. There are multiple shortest paths between vertices S and T. Which one will be reported by Dijkstra's shortest path algorithm? Assume that, in any iteration, the shortest path to a vertex v is updated only when a strictly shorter path to v is discovered.",
    "options": ["(A) SDT", "(B) SBDT", "(C) SACDT", "(D) SACET"],
    "subject": "Algorithms",
    "chapter": "Shortest paths",
    "subtopic": "Dijkstra's Algorithm",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(D) SACET",
    "has_diagram": true,
    "diagram_mermaid_code": "graph TD\n    S -- 4 --> A\n    S -- 3 --> B\n    A -- 1 --> C\n    A -- 3 --> D\n    B -- 7 --> D\n    B -- 5 --> F\n    C -- 1 --> E\n    D -- 3 --> E\n    D -- 5 --> T\n    E -- 2 --> G\n    E -- 4 --> T\n    F -- 3 --> T\n    G -- 2 --> E\n    G -- 3 --> T"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.46",
    "question_text": "Consider the set of strings on {0,1}, in which, every substring of 3 symbols has at most two zeros. For example, 001110 and 011001 are in the language, but 100010 is not. All strings of length less than 3 are also in the language. A partially completed DFA that accepts this language is shown below.\n\nThe missing arcs in the DFA are",
    "options": ["(A)", "(B)", "(C)", "(D)"],
    "subject": "Theory of Computation",
    "chapter": "Regular expressions and finite automata",
    "subtopic": "Deterministic Finite Automata (DFA)",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(D)",
    "has_diagram": true,
    "diagram_mermaid_code": "graph LR\n    subgraph DFA\n        direction LR\n        S((ɛ)) -- 0 --> S0((0))\n        S0 -- 0 --> S00((00))\n        S0 -- 1 --> S01((01))\n        S -- 1 --> S1((1))\n        S1 -- 0 --> S10((10))\n        S1 -- 1 --> S11((11))\n        S00 -- 1 --> S01\n        S01 -- 0 --> S10\n        S10 -- 0 --> S00\n        S10 -- 1 --> S11\n        S11 -- 1 --> S11\n        TRAP((q)) -- 0,1 --> TRAP\n    end\n\n    subgraph Legend\n        note \"Missing Arcs from states S00, S01, S10, S11, TRAP(q) to be filled from options\"\n    end\n    \n    subgraph Option A\n        note \"| | 00 | 01 | 10 | 11 | q |\n|---|---|---|---|---|---|\n| 0 | 1 | 0 | | | |\n| 1 | | 1 | 0 | 0 | |\"\n    end\n\n    subgraph Option B\n        note \"| | 00 | 01 | 10 | 11 | q |\n|---|---|---|---|---|---|\n| 0 | | 0 | 0 | 0 | |\n| 1 | 1 | 1 | | | |\"\n    end\n\n    subgraph Option C\n        note \"| | 00 | 01 | 10 | 11 | q |\n|---|---|---|---|---|---|\n| 0 | 1 | | 0 | 0 | |\n| 1 | | 1 | | | |\"\n    end\n\n    subgraph Option D\n        note \"| | 00 | 01 | 10 | 11 | q |\n|---|---|---|---|---|---|\n| 0 | q | | q | 0 | |\n| 1 | 1 | 1 | | | |\"\n    end"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.50",
    "question_text": "Consider the following relations A, B and C:\n\nRelation A\nId | Name | Age\n-- | -- | --\n12 | Arun | 60\n15 | Shreya | 24\n99 | Rohit | 11\n\nRelation B\nId | Name | Age\n-- | -- | --\n15 | Shreya | 24\n25 | Hari | 40\n98 | Rohit | 20\n99 | Rohit | 11\n\nRelation C\nId | Phone | Area\n-- | -- | --\n10 | 2200 | 02\n99 | 2100 | 01\n\nHow many tuples does the result of the following relational algebra expression contain? Assume that the schema of A ∪ B is the same as that of A.\n(A ∪ B) ⋈ (A.Id > 40 ∨ C.Id < 15) C",
    "options": ["(A) 7", "(B) 4", "(C) 5", "(D) 9"],
    "subject": "Databases",
    "chapter": "Relational model",
    "subtopic": "Relational Algebra",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(A) 7",
    "has_diagram": true,
    "diagram_mermaid_code": "%%{init: {'theme': 'base', 'themeVariables': { 'lineColor': '#000000', 'primaryColor': '#ffffff', 'primaryTextColor': '#000000', 'primaryBorderColor': '#000000'},},},%%\n\nstateDiagram-v2\n    direction LR\n    subgraph Relation A\n        note \"| Id | Name | Age |\n|---|---|---|\n| 12| Arun | 60 |\n| 15| Shreya| 24 |\n| 99| Rohit | 11 |\"\n    end\n    subgraph Relation B\n        note \"| Id | Name | Age |\n|---|---|---|\n| 15| Shreya| 24 |\n| 25| Hari | 40 |\n| 98| Rohit | 20 |\n| 99| Rohit | 11 |\"\n    end\n    subgraph Relation C\n        note \"| Id | Phone | Area |\n|---|---|---|\n| 10| 2200 | 02 |\n| 99| 2100 | 01 |\"\n    end"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.51",
    "question_text": "Consider the following relations A, B and C:\n\nRelation A\nId | Name | Age\n-- | -- | --\n12 | Arun | 60\n15 | Shreya | 24\n99 | Rohit | 11\n\nRelation B\nId | Name | Age\n-- | -- | --\n15 | Shreya | 24\n25 | Hari | 40\n98 | Rohit | 20\n99 | Rohit | 11\n\nRelation C\nId | Phone | Area\n-- | -- | --\n10 | 2200 | 02\n99 | 2100 | 01\n\nHow many tuples does the result of the following SQL query contain?\nSELECT A.Id\nFROM A\nWHERE A.Age > ALL (SELECT B.Age FROM B WHERE B.Name = 'Arun')",
    "options": ["(A) 4", "(B) 3", "(C) 0", "(D) 1"],
    "subject": "Databases",
    "chapter": "Relational model",
    "subtopic": "SQL",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(B) 3",
    "has_diagram": true,
    "diagram_mermaid_code": "%%{init: {'theme': 'base', 'themeVariables': { 'lineColor': '#000000', 'primaryColor': '#ffffff', 'primaryTextColor': '#000000', 'primaryBorderColor': '#000000'},},},%%\n\nstateDiagram-v2\n    direction LR\n    subgraph Relation A\n        note \"| Id | Name | Age |\n|---|---|---|\n| 12| Arun | 60 |\n| 15| Shreya| 24 |\n| 99| Rohit | 11 |\"\n    end\n    subgraph Relation B\n        note \"| Id | Name | Age |\n|---|---|---|\n| 15| Shreya| 24 |\n| 25| Hari | 40 |\n| 98| Rohit | 20 |\n| 99| Rohit | 11 |\"\n    end\n    subgraph Relation C\n        note \"| Id | Phone | Area |\n|---|---|---|\n| 10| 2200 | 02 |\n| 99| 2100 | 01 |\"\n    end"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.52",
    "question_text": "Statement for Linked Answer Questions 52 and 53:\nFor the grammar below, a partial LL(1) parsing table is also presented along with the grammar. Entries that need to be filled are indicated as E1, E2, and E3. ɛ is the empty string, $ indicates end of input, and, | separates alternate right hand sides of productions.\nS → a A b B | b A a B | ɛ\nA → S\nB → S\n\nParsing Table:\n| | a | b | $ |\n|---|---|---|---|\n| S | E1 | E2 | S → ɛ |\n| A | A → S | A → S | error |\n| B | B → S | B → S | E3 |\n\nThe FIRST and FOLLOW sets for the non-terminals A and B are",
    "options": [
      "(A) FIRST(A) = {a, b, ɛ}, = FIRST(B), FOLLOW(A) = {a,b},, FOLLOW(B) = {a, b, $},",
      "(B) FIRST(A) = {a, b, $},, FIRST(B) = {a, b, ɛ},, FOLLOW(A) = {a, b},, FOLLOW(B) = {$},",
      "(C) FIRST(A) = {a, b, ɛ}, = FIRST(B), FOLLOW(A) = {a, b},, FOLLOW(B) = Ø",
      "(D) FIRST(A) = {a, b}, = FIRST(B), FOLLOW(A) = {a, b},, FOLLOW(B) = {a,b},"
    ],
    "subject": "Compiler Design",
    "chapter": "Parsing",
    "subtopic": "LL(1) Parsing",
    "theoretical_practical": "theoretical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(A) FIRST(A) = {a, b, ɛ}, = FIRST(B), FOLLOW(A) = {a,b},, FOLLOW(B) = {a, b, $},",
    "has_diagram": true,
    "diagram_mermaid_code": "%%{init: {'theme': 'base', 'themeVariables': { 'lineColor': '#000000', 'primaryColor': '#ffffff', 'primaryTextColor': '#000000', 'primaryBorderColor': '#000000'},},},%%\n\nstateDiagram-v2\n    direction LR\n    [*] --> PARSING_TABLE\n\n    note right of PARSING_TABLE\n        |   | **a** | **b** | **$** |\n        |---|---|---|---|\n        | S | E1 | E2 | S → ɛ |\n        | A | A → S | A → S | error |\n        | B | B → S | B → S | E3 |\n    end note"
  },

  {
    "year": 2012,
    "paper_code": "CS",
    "question_no": "Q.53",
    "question_text": "Statement for Linked Answer Questions 52 and 53:\nFor the grammar below, a partial LL(1) parsing table is also presented along with the grammar. Entries that need to be filled are indicated as E1, E2, and E3. ɛ is the empty string, $ indicates end of input, and, | separates alternate right hand sides of productions.\nS → a A b B | b A a B | ɛ\nA → S\nB → S\n\nParsing Table:\n| | a | b | $ |\n|---|---|---|---|\n| S | E1 | E2 | S → ɛ |\n| A | A → S | A → S | error |\n| B | B → S | B → S | E3 |\n\nThe appropriate entries for E1, E2, and E3 are",
    "options": [
      "(A) E1: S → aAbB, A → S\nE2: S → bAaB, B → S\nE3: B → S",
      "(B) E1: S → aAbB, S → ɛ\nE2: S → bAaB, S → ɛ\nE3: S → ɛ",
      "(C) E1: S → aAbB, S → ɛ\nE2: S → bAaB, S → ɛ\nE3: B → S",
      "(D) E1: A → S, S → ɛ\nE2: B → S, S → ɛ\nE3: B → S"
    ],
    "subject": "Compiler Design",
    "chapter": "Parsing",
    "subtopic": "LL(1) Parsing",
    "theoretical_practical": "practical",
    "marks": 2,
    "provenance": "GATE 2012 CS",
    "confidence": 1.0,
    "correct_answer": "(C) E1: S → aAbB, S → ɛ\nE2: S → bAaB, S → ɛ\nE3: B → S",
    "has_diagram": true,
    "diagram_mermaid_code": "%%{init: {'theme': 'base', 'themeVariables': { 'lineColor': '#000000', 'primaryColor': '#ffffff', 'primaryTextColor': '#000000', 'primaryBorderColor': '#000000'},},},%%\n\nstateDiagram-v2\n    direction LR\n    [*] --> PARSING_TABLE\n\n    note right of PARSING_TABLE\n        |   | **a** | **b** | **$** |\n        |---|---|---|---|\n        | S | E1 | E2 | S → ɛ |\n        | A | A → S | A → S | error |\n        | B | B → S | B → S | E3 |\n    end note"
  }
]
