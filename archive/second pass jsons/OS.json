{
    "chapter": "Operating System",
    "types": [
      {
        "numerical_type_id": "OS-OS-TYPE-01",
        "numerical_type_name": "Scheduling Algorithm Analysis",
        "numerical_type_description": "This question type involves the application and analysis of various CPU and disk scheduling algorithms. Problems typically require calculating metrics such as average waiting time, turnaround time, or total head movement for algorithms like FCFS, SJF, SRTF, Round Robin, Priority, SSTF, and SCAN. These questions test the ability to trace the execution of processes or requests under specific scheduling policies.",
        "representative_question_ids": [
          "Q.31",
          "Q.35",
          "Q.31",
          "19",
          "32",
          "32",
          "34",
          "Q. 30",
          "Q. 46",
          "Q.20",
          "Q.47",
          "24",
          "53",
          "35",
          "50",
          "Q.42",
          "Q.37",
          "Q.38",
          "Q.26"
        ]
      },
      {
        "numerical_type_id": "OS-OS-TYPE-02",
        "numerical_type_name": "Memory Management Calculations",
        "numerical_type_description": "These questions focus on the numerical aspects of memory management and virtual memory. They involve calculations related to page tables, address translation, page replacement algorithms, and memory allocation. Common tasks include determining the number of page faults for a given reference string (using FIFO, LRU, Optimal), calculating effective memory access time, and finding the size of page tables or the maximum file size.",
        "representative_question_ids": [
          "Q.51",
          "Q.52",
          "24",
          "Q.20",
          "Q.42",
          "33",
          "33",
          "30",
          "47",
          "Q. 12",
          "Q. 47",
          "10",
          "53",
          "CS Q.48",
          "Q.64",
          "Q.57",
          "Q.58",
          "Q.64",
          "Q.14",
          "Q.54",
          "Q.47",
          "Q.58"
        ]
      },
      {
        "numerical_type_id": "OS-OS-TYPE-03",
        "numerical_type_name": "Synchronization and Concurrency Problems",
        "numerical_type_description": "This category includes practical problems based on inter-process communication, concurrency, and synchronization. Questions often present code snippets using semaphores, mutexes, or other synchronization constructs. The task is to analyze the code to determine possible outcomes, identify race conditions, or check for properties like mutual exclusion and progress.",
        "representative_question_ids": [
          "Q.33",
          "23",
          "45",
          "Q.32",
          "Q.8",
          "31",
          "10",
          "Q. 9",
          "Q.48",
          "Q.49",
          "40",
          "34",
          "CS Q.42",
          "Q.19",
          "Q.38",
          "Q.46",
          "Q.29"
        ]
      },
      {
        "numerical_type_id": "OS-OS-TYPE-04",
        "numerical_type_name": "Deadlock Analysis Scenarios",
        "numerical_type_description": "These questions present a system state with multiple processes and resources and require an analysis for deadlocks. Problems often involve applying the Banker's algorithm to determine if a state is safe or if a resource request can be granted. Other questions involve analyzing resource allocation graphs or code snippets to identify the possibility of deadlock.",
        "representative_question_ids": [
          "Q.30",
          "46",
          "Q.16",
          "31",
          "23",
          "39",
          "24",
          "CS Q.43",
          "Q.48"
        ]
      },
      {
        "numerical_type_id": "OS-OS-TYPE-05",
        "numerical_type_name": "File and Disk System Calculations",
        "numerical_type_description": "This type focuses on the quantitative aspects of file systems and disk storage. Questions typically involve calculating the maximum possible file size based on inode structure (direct, indirect blocks), or determining the space wasted due to fragmentation in different file allocation strategies. It also includes address translation from logical sector address to physical (cylinder, head, sector) address.",
        "representative_question_ids": [
          "Q.41",
          "20",
          "Q.63",
          "Q.51"
        ]
      },
      {
        "numerical_type_id": "OS-OS-TYPE-06",
        "numerical_type_name": "OS Structures and Concepts",
        "numerical_type_description": "This category covers theoretical questions about the fundamental building blocks of an operating system. Topics include processes, threads, system calls, and the transitions between user and kernel modes. Questions test the understanding of what resources are shared among threads, the context switch mechanism, and the purpose of different process states.",
        "representative_question_ids": [
          "Q.32",
          "Q.16",
          "Q.6",
          "20",
          "1",
          "18",
          "7",
          "13",
          "12",
          "Q.22",
          "Q.23",
          "Q.25"
        ]
      },
      {
        "numerical_type_id": "OS-OS-TYPE-07",
        "numerical_type_name": "Scheduling and Deadlock Concepts",
        "numerical_type_description": "These questions are theoretical and focus on the properties and principles of scheduling and deadlock. They ask about conditions that can lead to starvation, the necessary conditions for deadlock, and the logic behind deadlock prevention and avoidance policies. The questions assess conceptual understanding rather than requiring calculations.",
        "representative_question_ids": [
          "25",
          "Q.10",
          "52",
          "27",
          "Q.26",
          "Q.27",
          "CS Q.14"
        ]
      },
      {
        "numerical_type_id": "OS-OS-TYPE-08",
        "numerical_type_name": "Memory and File System Concepts",
        "numerical_type_description": "This question type covers the conceptual aspects of memory management and file systems. It includes topics like Belady's anomaly, the advantages of multilevel page tables, the purpose of a translation lookaside buffer (TLB), and properties of different file allocation schemes. These questions evaluate the understanding of why certain design choices are made in operating systems.",
        "representative_question_ids": [
          "Q.10",
          "Q.34",
          "Q.9",
          "Q.20",
          "40",
          "8",
          "11",
          "Q.38",
          "Q.24"
        ]
      }
    ]
  }