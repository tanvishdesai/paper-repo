{
    "chapter": "Databases",
    "types": [
      {
        "numerical_type_id": "Databases-DB-TYPE-01",
        "numerical_type_name": "Relational Query Languages",
        "numerical_type_description": "This category covers the formal and practical languages used to query and manipulate data in relational databases. It includes questions on SQL (Structured Query Language) for practical data definition and manipulation, as well as the foundational, procedural relational algebra and declarative tuple relational calculus. Problems often involve writing, interpreting, or determining the output of queries.",
        "question_ids": [
          "Q.45",
          "Q.55",
          "19",
          "43",
          "Q.32",
          "Q.46",
          "Q.15",
          "Q.50",
          "Q.51",
          "54",
          "54",
          "3",
          "32",
          "Q. 27",
          "Q. 7",
          "Q.52",
          "23",
          "41",
          "46",
          "12",
          "41",
          "13",
          "CS Q.31",
          "Q.25",
          "Q.56",
          "Q.16",
          "Q.61",
          "Q.45",
          "Q.39",
          "Q.55",
          "Q.54"
        ]
      },
      {
        "numerical_type_id": "Databases-DB-TYPE-02",
        "numerical_type_name": "Database Design and Normalization",
        "numerical_type_description": "This type focuses on the principles of designing a logically sound and efficient database schema. It includes questions about identifying keys (candidate, primary, superkeys), understanding and manipulating functional dependencies, and normalizing relations into forms like 1NF, 2NF, 3NF, and BCNF to reduce data redundancy and improve data integrity. These questions test the understanding of data dependency theory and schema refinement.",
        "question_ids": [
          "Q.56",
          "Q.12",
          "Q.2",
          "Q.43",
          "21",
          "22",
          "30",
          "21",
          "22",
          "20",
          "Q.21",
          "Q.23",
          "16",
          "42",
          "36",
          "CS Q.40",
          "CS Q.6",
          "Q.14",
          "Q.31",
          "Q.56",
          "Q.47",
          "Q.46"
        ]
      },
      {
        "numerical_type_id": "Databases-DB-TYPE-03",
        "numerical_type_name": "Transactions and Concurrency Control",
        "numerical_type_description": "These questions deal with the management of concurrent operations in a database to ensure data integrity. Topics include the ACID properties (Atomicity, Consistency, Isolation, Durability), analyzing transaction schedules for properties like conflict serializability and recoverability, and understanding concurrency control protocols such as two-phase locking (2PL) and timestamp ordering to prevent issues like deadlocks.",
        "question_ids": [
          "Q.43",
          "20",
          "42",
          "Q.27",
          "29",
          "29",
          "1",
          "29",
          "46",
          "Q.22",
          "Q.22",
          "Q.51",
          "42",
          "37",
          "CS Q.32",
          "Q.39",
          "Q.19",
          "Q.27",
          "Q.15",
          "Q.27",
          "Q.53"
        ]
      },
      {
        "numerical_type_id": "Databases-DB-TYPE-04",
        "numerical_type_name": "Indexing and File Organization",
        "numerical_type_description": "This category focuses on the physical storage of data and the data structures used for efficient data retrieval. It includes questions on file organization methods and indexing structures like B-Trees and B+ Trees. Problems often involve calculating the number of disk accesses, understanding tree properties and operations (insertion, splits), or analyzing the efficiency of different indexing strategies.",
        "question_ids": [
          "Q.44",
          "18",
          "Q.39",
          "Q.15",
          "30",
          "46",
          "6",
          "Q. 24",
          "Q.21",
          "54",
          "CS Q.21",
          "Q.62",
          "Q.26",
          "Q.21",
          "Q.57"
        ]
      },
      {
        "numerical_type_id": "Databases-DB-TYPE-05",
        "numerical_type_name": "Entity-Relationship Modeling",
        "numerical_type_description": "This type addresses the conceptual design phase of a database using the Entity-Relationship (ER) model. Questions focus on the core components of ER diagrams, such as entity sets, relationship sets, attributes, and cardinality constraints. It also covers concepts like weak entity sets and their representation, and the process of translating an ER model into a relational schema.",
        "question_ids": [
          "Q.14",
          "Q. 41",
          "11",
          "14",
          "Q.20"
        ]
      }
    ]
  }